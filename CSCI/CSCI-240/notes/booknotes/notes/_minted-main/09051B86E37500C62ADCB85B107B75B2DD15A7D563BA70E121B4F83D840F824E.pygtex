\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{String}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{k}{private}\PYG{o}{:}
\PYG{+w}{    }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Data}\PYG{p}{;}
\PYG{+w}{    }\PYG{k+kt}{size\PYGZus{}t}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Size}\PYG{p}{;}
\PYG{k}{public}\PYG{o}{:}
\PYG{+w}{    }\PYG{n}{String}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{default}\PYG{p}{;}
\PYG{+w}{    }\PYG{n}{String}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{string}\PYG{p}{)}\PYG{+w}{  }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Created\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{strlen}\PYG{p}{(}\PYG{n}{string}\PYG{p}{);}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{p}{[}\PYG{n}{m\PYGZus{}Size}\PYG{p}{];}
\PYG{+w}{        }\PYG{n}{memcpy}\PYG{p}{(}\PYG{n}{m\PYGZus{}Data}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{string}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Size}\PYG{p}{);}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{c+c1}{// This would be a deep copy (what we don\PYGZsq{}t want)}
\PYG{+w}{    }\PYG{n}{String}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{String}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Copied\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Size}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{p}{[}\PYG{n}{m\PYGZus{}Size}\PYG{p}{];}
\PYG{+w}{        }\PYG{n}{memcpy}\PYG{p}{(}\PYG{n}{m\PYGZus{}Data}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Data}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Size}\PYG{p}{);}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{c+c1}{// Shallow copy (what we do want)}
\PYG{+w}{    }\PYG{n}{String}\PYG{p}{(}\PYG{n}{String}\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Moved\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Size}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{m\PYGZus{}Data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Data}\PYG{p}{;}

\PYG{+w}{        }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{+w}{        }\PYG{n}{other}\PYG{p}{.}\PYG{n}{m\PYGZus{}Data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{;}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{o}{\PYGZti{}}\PYG{n}{String}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Destroyed\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{        }\PYG{k}{delete}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Data}\PYG{p}{;}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{};}
\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{Entity}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{k}{private}\PYG{o}{:}
\PYG{+w}{    }\PYG{n}{String}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Name}\PYG{p}{;}
\PYG{k}{public}\PYG{o}{:}
\PYG{+w}{    }\PYG{n}{Entity}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{String}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Name}\PYG{p}{(}\PYG{n}{name}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Uses the copy constructor}
\PYG{+w}{    }\PYG{n}{Entity}\PYG{p}{(}\PYG{n}{String}\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n}{name}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{m\PYGZus{}Name}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{move}\PYG{p}{(}\PYG{n}{name}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Uses the move constructor}
\PYG{p}{\PYGZcb{};}

\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{argc}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{k+kt}{char}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{argv}\PYG{p}{[])}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{Entity}\PYG{+w}{ }\PYG{n}{entity}\PYG{p}{(}\PYG{n}{String}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Nate\PYGZdq{}}\PYG{p}{));}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{EXIT\PYGZus{}SUCCESS}\PYG{p}{;}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}
\end{Verbatim}
