\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} first without the global variable}
\PYG{k}{def} \PYG{n+nf}{add}\PYG{p}{(}\PYG{n}{value1}\PYG{p}{,} \PYG{n}{value2}\PYG{p}{):}
    \PYG{n}{result} \PYG{o}{=} \PYG{n}{value1} \PYG{o}{+} \PYG{n}{value2}

\PYG{n}{add}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{p}{)}
\PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{result}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} Oh crap, we encountered an exception. Why is it so?}
\PYG{c+c1}{\PYGZsh{} the python interpreter is telling us that we do not}
\PYG{c+c1}{\PYGZsh{} have any variable with the name of result. It is so}
\PYG{c+c1}{\PYGZsh{} because the result variable is only accessible inside}
\PYG{c+c1}{\PYGZsh{} the function in which it is created if it is not global.}
\PYG{n}{Traceback} \PYG{p}{(}\PYG{n}{most} \PYG{n}{recent} \PYG{n}{call} \PYG{n}{last}\PYG{p}{):}
  \PYG{n}{File} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,} \PYG{n}{line} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{o+ow}{in}
    \PYG{n}{result}
\PYG{n+ne}{NameError}\PYG{p}{:} \PYG{n}{name} \PYG{l+s+s1}{\PYGZsq{}result\PYGZsq{}} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{n}{defined}

\PYG{c+c1}{\PYGZsh{} Now lets run the same code but after making the result}
\PYG{c+c1}{\PYGZsh{} variable global}
\PYG{k}{def} \PYG{n+nf}{add}\PYG{p}{(}\PYG{n}{value1}\PYG{p}{,} \PYG{n}{value2}\PYG{p}{):}
    \PYG{k}{global} \PYG{n}{result}
    \PYG{n}{result} \PYG{o}{=} \PYG{n}{value1} \PYG{o}{+} \PYG{n}{value2}

\PYG{n}{add}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{p}{)}
\PYG{n}{result}
\PYG{l+m+mi}{6}
\end{Verbatim}
