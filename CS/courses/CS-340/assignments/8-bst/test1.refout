********************************************************************************
* test1 - test your functions on known trees
********************************************************************************
* Tests run with a non-empty, known binary search tree
********************************************************************************

        5       
       / \     
      3   6     
     / \   \  
    2   4   7   
   /            
  1             

  preorder:   5 3 2 1 4 6 7 
  inorder:    1 2 3 4 5 6 7 
  postorder:  1 2 4 3 7 6 5 
  levelorder: 5 3 6 2 4 7 1 
  count: 7; root: 5; min: 1; max: 7; height: 3; is_bst: true
  successor test from min:   1 2 3 4 5 6 7 

********************************************************************************
* Tests run with a non-empty, known binary tree that is NOT a BST
********************************************************************************

       6      
      / \    
     8   4    
    / \   \   
   9   7   2  

  preorder:   6 8 9 7 4 2 
  inorder:    9 8 7 6 4 2 
  postorder:  9 7 8 2 4 6 
  levelorder: 6 8 4 9 7 2 
  count: 6; root: 6; min: 9; max: 2; height: 2; is_bst: false
  successor test from min:   9 8 7 6 4 2 

********************************************************************************
* Testing your functions on an empty tree -- make sure they don't crash
********************************************************************************
  preorder:   
  inorder:    
  postorder:  
  levelorder: 
  count: 0; root: none; min: none; max: none; height: -1; is_bst: true

