Loading graph from file "input/complete4.graph"
Found 4 vertices:
  vertex index=0, label=Q
  vertex index=1, label=R
  vertex index=2, label=S
  vertex index=3, label=T

Found 12 edges:
  edge origin=Q(0), dest=R(1), weight=1
  edge origin=Q(0), dest=S(2), weight=2
  edge origin=Q(0), dest=T(3), weight=3
  edge origin=R(1), dest=Q(0), weight=4
  edge origin=R(1), dest=S(2), weight=5
  edge origin=R(1), dest=T(3), weight=6
  edge origin=S(2), dest=Q(0), weight=7
  edge origin=S(2), dest=R(1), weight=8
  edge origin=S(2), dest=T(3), weight=9
  edge origin=T(3), dest=Q(0), weight=10
  edge origin=T(3), dest=R(1), weight=11
  edge origin=T(3), dest=S(2), weight=12

  g.nvertices() = 4
  g.nedges() = 12
  Printing undirected adjacency list:
    0, label=Q, index=0: [R(1):1] [S(2):2] [T(3):3] [R(1):4] [S(2):7] [T(3):10] 
    1, label=R, index=1: [Q(0):1] [Q(0):4] [S(2):5] [T(3):6] [S(2):8] [T(3):11] 
    2, label=S, index=2: [Q(0):2] [R(1):5] [Q(0):7] [R(1):8] [T(3):9] [T(3):12] 
    3, label=T, index=3: [Q(0):3] [R(1):6] [S(2):9] [Q(0):10] [R(1):11] [S(2):12] 

  Printing out-adjacency list:
    0, label=Q, index=0: [R(1):1] [S(2):2] [T(3):3] 
    1, label=R, index=1: [Q(0):4] [S(2):5] [T(3):6] 
    2, label=S, index=2: [Q(0):7] [R(1):8] [T(3):9] 
    3, label=T, index=3: [Q(0):10] [R(1):11] [S(2):12] 

  Printing in-adjacency list:
    0, label=Q, index=0: [R(1):4] [S(2):7] [T(3):10] 
    1, label=R, index=1: [Q(0):1] [S(2):8] [T(3):11] 
    2, label=S, index=2: [Q(0):2] [R(1):5] [T(3):12] 
    3, label=T, index=3: [Q(0):3] [R(1):6] [S(2):9] 

  Unweighted Adjacency Matrix
  0 1 1 1 
  1 0 1 1 
  1 1 0 1 
  1 1 1 0 

  Weighted Adjacency Matrix
    inf     1     2     3 
      4   inf     5     6 
      7     8   inf     9 
     10    11    12   inf 

  Depth first (connected only): [Q(0)] [R(1)] [S(2)] [T(3)] 
  Depth first traversal (all):  [Q(0)] [R(1)] [S(2)] [T(3)] 

  Breadth first (connected only): [Q(0)] [R(1)] [S(2)] [T(3)] 
  Breadth first traversal (all):  [Q(0)] [R(1)] [S(2)] [T(3)] 

  Topological sort: (ends early b/c of cycle) 

Dijkstra's Shortest Path from source Q(0)
  node=Q(0), distance = 0
  node=R(1), distance = 1, from vertex Q(0)
  node=S(2), distance = 2, from vertex Q(0)
  node=T(3), distance = 3, from vertex Q(0)

Dijkstra's Shortest Path from source R(1)
  node=Q(0), distance = 4, from vertex R(1)
  node=R(1), distance = 0
  node=S(2), distance = 5, from vertex R(1)
  node=T(3), distance = 6, from vertex R(1)

Dijkstra's Shortest Path from source S(2)
  node=Q(0), distance = 7, from vertex S(2)
  node=R(1), distance = 8, from vertex S(2)
  node=S(2), distance = 0
  node=T(3), distance = 9, from vertex S(2)

Dijkstra's Shortest Path from source T(3)
  node=Q(0), distance =10, from vertex T(3)
  node=R(1), distance =11, from vertex T(3)
  node=S(2), distance =12, from vertex T(3)
  node=T(3), distance = 0

