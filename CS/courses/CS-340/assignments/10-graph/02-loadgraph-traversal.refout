Loading graph from file "input/traversal.graph"
Found 7 vertices:
  vertex index=0, label=A
  vertex index=1, label=B
  vertex index=2, label=C
  vertex index=3, label=D
  vertex index=4, label=E
  vertex index=5, label=F
  vertex index=6, label=G

Found 16 edges:
  edge origin=A(0), dest=B(1), weight=1
  edge origin=B(1), dest=A(0), weight=1
  edge origin=A(0), dest=E(4), weight=1
  edge origin=E(4), dest=A(0), weight=1
  edge origin=B(1), dest=C(2), weight=1
  edge origin=C(2), dest=B(1), weight=1
  edge origin=B(1), dest=G(6), weight=1
  edge origin=G(6), dest=B(1), weight=1
  edge origin=C(2), dest=F(5), weight=1
  edge origin=F(5), dest=C(2), weight=1
  edge origin=D(3), dest=E(4), weight=1
  edge origin=E(4), dest=D(3), weight=1
  edge origin=D(3), dest=F(5), weight=1
  edge origin=F(5), dest=D(3), weight=1
  edge origin=E(4), dest=F(5), weight=1
  edge origin=F(5), dest=E(4), weight=1

  g.nvertices() = 7
  g.nedges() = 16
  Printing undirected adjacency list:
    0, label=A, index=0: [B(1):1] [B(1):1] [E(4):1] [E(4):1] 
    1, label=B, index=1: [A(0):1] [A(0):1] [C(2):1] [C(2):1] [G(6):1] [G(6):1] 
    2, label=C, index=2: [B(1):1] [B(1):1] [F(5):1] [F(5):1] 
    3, label=D, index=3: [E(4):1] [E(4):1] [F(5):1] [F(5):1] 
    4, label=E, index=4: [A(0):1] [A(0):1] [D(3):1] [D(3):1] [F(5):1] [F(5):1] 
    5, label=F, index=5: [C(2):1] [C(2):1] [D(3):1] [D(3):1] [E(4):1] [E(4):1] 
    6, label=G, index=6: [B(1):1] [B(1):1] 

  Printing out-adjacency list:
    0, label=A, index=0: [B(1):1] [E(4):1] 
    1, label=B, index=1: [A(0):1] [C(2):1] [G(6):1] 
    2, label=C, index=2: [B(1):1] [F(5):1] 
    3, label=D, index=3: [E(4):1] [F(5):1] 
    4, label=E, index=4: [A(0):1] [D(3):1] [F(5):1] 
    5, label=F, index=5: [C(2):1] [D(3):1] [E(4):1] 
    6, label=G, index=6: [B(1):1] 

  Printing in-adjacency list:
    0, label=A, index=0: [B(1):1] [E(4):1] 
    1, label=B, index=1: [A(0):1] [C(2):1] [G(6):1] 
    2, label=C, index=2: [B(1):1] [F(5):1] 
    3, label=D, index=3: [E(4):1] [F(5):1] 
    4, label=E, index=4: [A(0):1] [D(3):1] [F(5):1] 
    5, label=F, index=5: [C(2):1] [D(3):1] [E(4):1] 
    6, label=G, index=6: [B(1):1] 

  Unweighted Adjacency Matrix
  0 1 0 0 1 0 0 
  1 0 1 0 0 0 1 
  0 1 0 0 0 1 0 
  0 0 0 0 1 1 0 
  1 0 0 1 0 1 0 
  0 0 1 1 1 0 0 
  0 1 0 0 0 0 0 

  Weighted Adjacency Matrix
    inf     1   inf   inf     1   inf   inf 
      1   inf     1   inf   inf   inf     1 
    inf     1   inf   inf   inf     1   inf 
    inf   inf   inf   inf     1     1   inf 
      1   inf   inf     1   inf     1   inf 
    inf   inf     1     1     1   inf   inf 
    inf     1   inf   inf   inf   inf   inf 

  Depth first (connected only): [A(0)] [B(1)] [C(2)] [F(5)] [D(3)] [E(4)] [G(6)] 
  Depth first traversal (all):  [A(0)] [B(1)] [C(2)] [F(5)] [D(3)] [E(4)] [G(6)] 

  Breadth first (connected only): [A(0)] [B(1)] [E(4)] [C(2)] [G(6)] [D(3)] [F(5)] 
  Breadth first traversal (all):  [A(0)] [B(1)] [E(4)] [C(2)] [G(6)] [D(3)] [F(5)] 

  Topological sort: (ends early b/c of cycle) 

Dijkstra's Shortest Path from source A(0)
  node=A(0), distance = 0
  node=B(1), distance = 1, from vertex A(0)
  node=C(2), distance = 2, from vertex B(1)
  node=D(3), distance = 2, from vertex E(4)
  node=E(4), distance = 1, from vertex A(0)
  node=F(5), distance = 2, from vertex E(4)
  node=G(6), distance = 2, from vertex B(1)

Dijkstra's Shortest Path from source B(1)
  node=A(0), distance = 1, from vertex B(1)
  node=B(1), distance = 0
  node=C(2), distance = 1, from vertex B(1)
  node=D(3), distance = 3, from vertex E(4)
  node=E(4), distance = 2, from vertex A(0)
  node=F(5), distance = 2, from vertex C(2)
  node=G(6), distance = 1, from vertex B(1)

Dijkstra's Shortest Path from source C(2)
  node=A(0), distance = 2, from vertex B(1)
  node=B(1), distance = 1, from vertex C(2)
  node=C(2), distance = 0
  node=D(3), distance = 2, from vertex F(5)
  node=E(4), distance = 2, from vertex F(5)
  node=F(5), distance = 1, from vertex C(2)
  node=G(6), distance = 2, from vertex B(1)

Dijkstra's Shortest Path from source D(3)
  node=A(0), distance = 2, from vertex E(4)
  node=B(1), distance = 3, from vertex A(0)
  node=C(2), distance = 2, from vertex F(5)
  node=D(3), distance = 0
  node=E(4), distance = 1, from vertex D(3)
  node=F(5), distance = 1, from vertex D(3)
  node=G(6), distance = 4, from vertex B(1)

Dijkstra's Shortest Path from source E(4)
  node=A(0), distance = 1, from vertex E(4)
  node=B(1), distance = 2, from vertex A(0)
  node=C(2), distance = 2, from vertex F(5)
  node=D(3), distance = 1, from vertex E(4)
  node=E(4), distance = 0
  node=F(5), distance = 1, from vertex E(4)
  node=G(6), distance = 3, from vertex B(1)

Dijkstra's Shortest Path from source F(5)
  node=A(0), distance = 2, from vertex E(4)
  node=B(1), distance = 2, from vertex C(2)
  node=C(2), distance = 1, from vertex F(5)
  node=D(3), distance = 1, from vertex F(5)
  node=E(4), distance = 1, from vertex F(5)
  node=F(5), distance = 0
  node=G(6), distance = 3, from vertex B(1)

Dijkstra's Shortest Path from source G(6)
  node=A(0), distance = 2, from vertex B(1)
  node=B(1), distance = 1, from vertex G(6)
  node=C(2), distance = 2, from vertex B(1)
  node=D(3), distance = 4, from vertex E(4)
  node=E(4), distance = 3, from vertex A(0)
  node=F(5), distance = 3, from vertex C(2)
  node=G(6), distance = 0

