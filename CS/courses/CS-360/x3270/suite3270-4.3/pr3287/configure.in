dnl Copyright (c) 2000-2023 Paul Mattes.
dnl All rights reserved.
dnl 
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl     * Redistributions of source code must retain the above copyright
dnl       notice, this list of conditions and the following disclaimer.
dnl     * Redistributions in binary form must reproduce the above copyright
dnl       notice, this list of conditions and the following disclaimer in the
dnl       documentation and/or other materials provided with the distribution.
dnl     * Neither the name of Paul Mattes nor his contributors may be used
dnl       to endorse or promote products derived from this software without
dnl       specific prior written permission.
dnl 
dnl THIS SOFTWARE IS PROVIDED BY PAUL MATTES "AS IS" AND ANY EXPRESS
dnl OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
dnl WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
dnl DISCLAIMED. IN NO EVENT SHALL PAUL MATTES BE LIABLE FOR ANY DIRECT,
dnl INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
dnl (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
dnl SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
dnl HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
dnl STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
dnl IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
dnl POSSIBILITY OF SUCH DAMAGE.

dnl Process this file with autoconf to produce a configure script.
AC_INIT([pr3287],[4.3])
AC_PREREQ([2.69])

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_CC

dnl Figure out what sort of host and compiler this is.
AC_CANONICAL_HOST
ansi="-std=c99 -pedantic"
case "$host_os" in
*cygwin*)	ansi=""
		;;
solaris2*)	CPPFLAGS="$CPPFLAGS -D__EXTENSIONS__"
		;;
darwin*)	CCOPTIONS="$CCOPTIONS -no-cpp-precomp -Wno-deprecated-declarations"
		;;
linux*)		CPPFLAGS="$CPPFLAGS -D_BSD_SOURCE -D_DEFAULT_SOURCE -D_POSIX_SOURCE -D_XOPEN_SOURCE"
		;;
esac
if test "$GCC" = yes
then	# Add common gcc options, plus flags for dependency generation.
	CCOPTIONS="$CCOPTIONS -Wall -Wsign-compare $ansi -Wno-variadic-macros -MMD -MP"
fi
AC_SUBST(host)
AC_SUBST(CCOPTIONS)

dnl Check for libraries.
dnl Note that the order here is important.  The last libraries should appear
dnl first, so that objects in them can be used by subsequent libraries.
AC_SEARCH_LIBS(gethostbyname, nsl)
AC_SEARCH_LIBS(socket, socket)

dnl Checks for header files.
AC_CHECK_HEADERS(iconv.h)

dnl Check for SSL header file.
AC_ARG_WITH(ssl,[  --with-ssl=DIR          specify OpenSSL install directory])
if test "$enable_tls" != no
then	orig_CPPFLAGS="$CPPFLAGS"
	unset any
	for dir in "$with_ssl" /usr/local /usr/local/ssl /usr/lib/ssl /usr/pkg/ssl /usr/ssl /var/ssl /opt/ssl
	do	header_fail=0
		if test -n "$dir" -a ! -d "$dir/include"
		then	header_fail=1
			continue
		fi
		if test -n "$any"
		then	AC_MSG_NOTICE(retrying with -I$dir/include)
		fi
		if test -n "$dir"
		then	CPPFLAGS="$orig_CPPFLAGS -I$dir/include"
		fi
		AC_CHECK_HEADERS(openssl/ssl.h, ,[header_fail=1])
		if test "$header_fail" -eq 0
		then	break
		fi
		unset `echo ac_cv_header_openssl/ssl_h | $as_tr_sh`
		CPPFLAGS="$orig_CPPFLAGS"
		any=1
	done
	if test $header_fail -eq 1
	then	AC_MSG_WARN(Disabling TLS)
		enable_tls="no"
		unset HAVE_LIBSSL
	fi
fi

dnl Checks for library functions.
AC_CHECK_FUNCS(vasprintf)

dnl Set up the configuration directory.
LIBX3270DIR='${sysconfdir}/x3270'
AC_SUBST(LIBX3270DIR)

dnl Check for unwanted parts.
AC_ARG_ENABLE(dbcs,[  --disable-dbcs          leave out DBCS support])
case "$enable_dbcs" in
no)	;;
*)	AC_DEFINE(X3270_DBCS,1)
	;;
esac

dnl Generate conf.h.
AC_CONFIG_HEADERS([conf.h])

dnl Generate the Makefiles.
AC_CONFIG_FILES(Makefile Makefile.obj)
AC_OUTPUT
