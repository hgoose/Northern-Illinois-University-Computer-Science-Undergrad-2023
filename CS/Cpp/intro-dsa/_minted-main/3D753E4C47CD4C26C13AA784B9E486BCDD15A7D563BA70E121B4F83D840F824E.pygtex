\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{n}{procedure}\PYG{+w}{ }\PYG{n+nf}{heap\PYGZus{}sort}\PYG{p}{(}\PYG{n}{array}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{list}\PYG{+w}{ }\PYG{n}{of}\PYG{+w}{ }\PYG{n}{sortable}\PYG{+w}{ }\PYG{n}{items}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{n}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{length}\PYG{+w}{ }\PYG{n}{of}\PYG{+w}{ }\PYG{n}{list}\PYG{p}{)}
\PYG{+w}{    }\PYG{c+c1}{// end : array subscript}
\PYG{+w}{    }\PYG{c+c1}{// Build the heap in array so that largest value is at the}
\PYG{+w}{    }\PYG{c+c1}{// root.}
\PYG{+w}{    }\PYG{n}{heapify}\PYG{p}{(}\PYG{n}{array}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{n}\PYG{p}{);}

\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{n}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}

\PYG{+w}{    }\PYG{k}{while}\PYG{+w}{ }\PYG{n}{end}\PYG{+w}{ }\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{        }\PYG{c+c1}{// array[0] is the root and largest value. The swap}
\PYG{+w}{        }\PYG{c+c1}{// moves it in front of the sorted elements.}
\PYG{+w}{        }\PYG{n}{swap}\PYG{+w}{ }\PYG{n}{array}\PYG{p}{[}\PYG{n}{end}\PYG{p}{]}\PYG{+w}{ }\PYG{n}{and}\PYG{+w}{ }\PYG{n}{array}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}

\PYG{+w}{        }\PYG{c+c1}{// The heap size is reduced by 1.}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{end}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}

\PYG{+w}{        }\PYG{c+c1}{// The swap ruined the heap property, so restore it.}
\PYG{+w}{        }\PYG{n}{sift\PYGZus{}down}\PYG{p}{(}\PYG{n}{array}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{end}\PYG{p}{);}
\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{while}
\PYG{n}{end}\PYG{+w}{ }\PYG{n}{procedure}

\PYG{n}{procedure}\PYG{+w}{ }\PYG{n}{heapify}\PYG{p}{(}\PYG{n}{array}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{list}\PYG{+w}{ }\PYG{n}{of}\PYG{+w}{ }\PYG{n}{sortable}\PYG{+w}{ }\PYG{n}{items}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{n}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{length}\PYG{+w}{ }\PYG{n}{of}\PYG{+w}{ }\PYG{n}{list}\PYG{p}{)}
\PYG{+w}{    }\PYG{c+c1}{// start : array subscript}
\PYG{+w}{    }\PYG{n}{start}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{n}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{/}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{+w}{ }\PYG{c+c1}{// Find parent of last element of array}
\PYG{+w}{    }\PYG{k}{while}\PYG{+w}{ }\PYG{n}{start}\PYG{+w}{ }\PYG{o}{\PYGZgt{}=}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{        }\PYG{c+c1}{// Sift down the value at subscript \PYGZsq{}start\PYGZsq{} to the proper place}
\PYG{+w}{        }\PYG{c+c1}{// such that all values below the start subscript are in max}
\PYG{+w}{        }\PYG{c+c1}{// heap order}

\PYG{+w}{        }\PYG{n}{sift\PYGZus{}down}\PYG{p}{(}\PYG{n}{array}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{start}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{n}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}

\PYG{+w}{        }\PYG{c+c1}{// Go to next parent}
\PYG{+w}{        }\PYG{n}{start}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{start}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}
\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{while}

\PYG{+w}{    }\PYG{c+c1}{// All elements are now in max heap order}
\PYG{n}{end}\PYG{+w}{ }\PYG{n}{procedure}
\end{Verbatim}
