\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{n}{procedure}\PYG{+w}{ }\PYG{n}{iterative\PYGZus{}postorder}\PYG{p}{()}
\PYG{+w}{    }\PYG{c+c1}{// root         : pointer to the root node of the tree (nullptr if tree is empty)}
\PYG{+w}{    }\PYG{c+c1}{// p            : pointer to a tree node}
\PYG{+w}{    }\PYG{c+c1}{// last\PYGZus{}visited : pointer to the last tree node visited}
\PYG{+w}{    }\PYG{c+c1}{// s            : a stack of pointers to tree nodes}

\PYG{+w}{    }\PYG{c+c1}{// Start at the root of the tree.}
\PYG{+w}{    }\PYG{n}{last\PYGZus{}visited}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{k}{nullptr}
\PYG{+w}{    }\PYG{n}{p}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{root}

\PYG{+w}{    }\PYG{k}{while}\PYG{+w}{ }\PYG{n}{p}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{+w}{ }\PYG{n}{and}\PYG{+w}{ }\PYG{n}{last\PYGZus{}visited}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{root}

\PYG{+w}{        }\PYG{c+c1}{// Go all the way to the left.}
\PYG{+w}{        }\PYG{k}{while}\PYG{+w}{ }\PYG{n}{p}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{+w}{ }\PYG{n}{and}\PYG{+w}{ }\PYG{n}{p}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{last\PYGZus{}visited}

\PYG{+w}{            }\PYG{c+c1}{// Place a pointer to the node on the stack before}
\PYG{+w}{            }\PYG{c+c1}{// traversing the node\PYGZsq{}s left subtree.}
\PYG{+w}{            }\PYG{n}{s}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{p}\PYG{p}{)}
\PYG{+w}{            }\PYG{n}{p}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{while}

\PYG{+w}{        }\PYG{c+c1}{// p must be nullptr at this point, so backtrack one}
\PYG{+w}{        }\PYG{c+c1}{// level.}
\PYG{+w}{        }\PYG{n}{p}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{s}\PYG{p}{.}\PYG{n}{top}\PYG{p}{()}
\PYG{+w}{        }\PYG{n}{s}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{()}

\PYG{+w}{        }\PYG{c+c1}{// If this node has no right child or we\PYGZsq{}ve already traversed}
\PYG{+w}{        }\PYG{c+c1}{// its right subtree...}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{+w}{ }\PYG{n}{or}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{last\PYGZus{}visited}

\PYG{+w}{            }\PYG{n}{Visit}\PYG{+w}{ }\PYG{n}{the}\PYG{+w}{ }\PYG{n}{node}\PYG{+w}{ }\PYG{n}{pointed}\PYG{+w}{ }\PYG{n}{to}\PYG{+w}{ }\PYG{n}{by}\PYG{+w}{ }\PYG{n}{p}

\PYG{+w}{            }\PYG{c+c1}{// Mark this node as the last visited.}
\PYG{+w}{            }\PYG{n}{last\PYGZus{}visited}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}
\PYG{+w}{        }\PYG{k}{else}
\PYG{+w}{            }\PYG{c+c1}{// Otherwise, traverse the node\PYGZsq{}s right subtree.}
\PYG{+w}{            }\PYG{n}{s}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{p}\PYG{p}{)}
\PYG{+w}{            }\PYG{n}{p}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{if}
\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{while}
\PYG{n}{end}\PYG{+w}{ }\PYG{n}{procedure}
\end{Verbatim}
