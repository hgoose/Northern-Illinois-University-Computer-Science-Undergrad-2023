\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{+w}{    }\PYG{c+c1}{// Clone the stack from another mystack object}
\PYG{+w}{    }\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{clone}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{mystack}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{obj}\PYG{p}{.}\PYG{n}{stack\PYGZus{}top}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// If the source stack is empty}
\PYG{+w}{            }\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{stack\PYGZus{}top}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Make the current stack empty}
\PYG{+w}{            }\PYG{k}{return}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{n}{stack\PYGZus{}top}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{node}\PYG{p}{(}\PYG{k}{nullptr}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{.}\PYG{n}{stack\PYGZus{}top}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Copy the top node}
\PYG{+w}{        }\PYG{n}{node}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{src}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{.}\PYG{n}{stack\PYGZus{}top}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Pointer to traverse the source stack}
\PYG{+w}{        }\PYG{n}{node}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{dest}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{stack\PYGZus{}top}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Pointer to build the current stack}

\PYG{+w}{        }\PYG{k}{while}\PYG{p}{(}\PYG{n}{src}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// While there are more nodes to copy}
\PYG{+w}{            }\PYG{n}{dest}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{node}\PYG{p}{(}\PYG{k}{nullptr}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{src}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Copy the node}
\PYG{+w}{            }\PYG{n}{dest}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{dest}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Move to the next node}
\PYG{+w}{            }\PYG{n}{src}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{src}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Move to the next source node}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{m\PYGZus{}size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{.}\PYG{n}{m\PYGZus{}size}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Copy the size}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{// Destructor to clean up the stack}
\PYG{+w}{    }\PYG{o}{\PYGZti{}}\PYG{n}{mystack}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{clear}\PYG{p}{();}\PYG{+w}{ }\PYG{c+c1}{// Clear the stack}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{};}

\PYG{c+c1}{// Overload the \PYGZlt{}\PYGZlt{} operator to print the stack}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{ostream}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{k}{operator}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ostream}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{os}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{mystack}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n}{node}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{current}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{obj}\PYG{p}{.}\PYG{n}{stack\PYGZus{}top}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Start from the top of the stack}

\PYG{+w}{    }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{current}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{os}\PYG{p}{;}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{current}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// Iterate through the stack}
\PYG{+w}{        }\PYG{n}{os}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{current}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Print the current node\PYGZsq{}s value}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{current}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{os}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}, \PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// If this is not the last node, print a comma and a space}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{n}{current}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{current}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Move to the next node}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{os}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
