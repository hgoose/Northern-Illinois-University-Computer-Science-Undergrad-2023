template <typename T>
void mylist<T>::clone(const mylist<T>& other) {

    // Clear the list
    this->clear();

    node<T>* curr = other.m_back;
    while (curr != nullptr) {
        this->push_front(curr->value);
        curr = curr->prev;
    }
}

template <typename T>
std::ostream& operator<<(std::ostream& os, const mylist<T>& obj) {

    node<T>* curr = obj.m_front;

    // Traverse the list, outputing values
    while (curr != nullptr) {
        os << curr->value << " ";
        curr = curr->next;
    }

    // Return the stream
    return os;
}
#endif
