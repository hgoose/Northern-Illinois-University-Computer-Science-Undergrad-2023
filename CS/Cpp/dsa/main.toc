\contentsline {section}{\numberline {1}Selection Sort}{6}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Psuedocode}{6}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Example}{6}{subsection.0.1.2}%
\contentsline {subsection}{\numberline {1.3}Complexity}{7}{subsection.0.1.3}%
\contentsline {section}{\numberline {2}Insertion Sort}{8}{section.0.2}%
\contentsline {subsection}{\numberline {2.1}Psuedocode}{8}{subsection.0.2.1}%
\contentsline {subsection}{\numberline {2.2}Example}{8}{subsection.0.2.2}%
\contentsline {subsection}{\numberline {2.3}Optimizing Insertion Sort}{9}{subsection.0.2.3}%
\contentsline {subsubsection}{\numberline {2.3.1}Psuedocode}{9}{subsubsection.0.2.3.1}%
\contentsline {subsubsection}{\numberline {2.3.2}Example}{9}{subsubsection.0.2.3.2}%
\contentsline {subsection}{\numberline {2.4}Complexity}{10}{subsection.0.2.4}%
\contentsline {section}{\numberline {3}Bubble Sort}{11}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Psuedocode}{11}{subsection.0.3.1}%
\contentsline {subsection}{\numberline {3.2}Example}{11}{subsection.0.3.2}%
\contentsline {subsection}{\numberline {3.3}Optimizing Bubble Sort}{12}{subsection.0.3.3}%
\contentsline {subsubsection}{\numberline {3.3.1}Psuedocode}{12}{subsubsection.0.3.3.1}%
\contentsline {subsubsection}{\numberline {3.3.2}Example}{13}{subsubsection.0.3.3.2}%
\contentsline {subsection}{\numberline {3.4}Complexity}{13}{subsection.0.3.4}%
\contentsline {section}{\numberline {4}Two-Dimensional Array}{14}{section.0.4}%
\contentsline {section}{\numberline {5}Recursion}{15}{section.0.5}%
\contentsline {section}{\numberline {6}Complexity Analysis}{16}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Time Complexity}{16}{subsection.0.6.1}%
\contentsline {subsubsection}{\numberline {6.1.1}Common time complexities}{16}{subsubsection.0.6.1.1}%
\contentsline {subsubsection}{\numberline {6.1.2}Constant time}{16}{subsubsection.0.6.1.2}%
\contentsline {subsubsection}{\numberline {6.1.3}Big O, Big Omega, and Big Theta}{16}{subsubsection.0.6.1.3}%
\contentsline {subsubsection}{\numberline {6.1.4}Best Case, Worst Case, and Expected (or Average) Case}{17}{subsubsection.0.6.1.4}%
\contentsline {subsection}{\numberline {6.2}Space complexity}{18}{subsection.0.6.2}%
\contentsline {subsubsection}{\numberline {6.2.1}Constant time}{18}{subsubsection.0.6.2.1}%
\contentsline {subsubsection}{\numberline {6.2.2}Space complexity in recursive algorithms}{18}{subsubsection.0.6.2.2}%
\contentsline {subsection}{\numberline {6.3}Drop the constants}{19}{subsection.0.6.3}%
\contentsline {subsection}{\numberline {6.4}Drop the non-dominant terms}{19}{subsection.0.6.4}%
\contentsline {subsection}{\numberline {6.5}Multi-Part Algorithms: Add vs. Multiply}{19}{subsection.0.6.5}%
\contentsline {subsection}{\numberline {6.6}Amortized Time}{20}{subsection.0.6.6}%
\contentsline {subsection}{\numberline {6.7}Log N Runtimes}{20}{subsection.0.6.7}%
\contentsline {subsection}{\numberline {6.8}Recursive runtime}{21}{subsection.0.6.8}%
\contentsline {section}{\numberline {7}Shell sort}{22}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Example}{22}{subsection.0.7.1}%
\contentsline {section}{\numberline {8}Quick Sort (Recursive)}{23}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}Base case}{23}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Pivot selection}{23}{subsection.0.8.2}%
\contentsline {subsection}{\numberline {8.3}Psuedocode}{23}{subsection.0.8.3}%
\contentsline {subsubsection}{\numberline {8.3.1}What main calls}{23}{subsubsection.0.8.3.1}%
\contentsline {subsubsection}{\numberline {8.3.2}Recursive function}{24}{subsubsection.0.8.3.2}%
\contentsline {subsubsection}{\numberline {8.3.3}Partition function}{24}{subsubsection.0.8.3.3}%
\contentsline {subsection}{\numberline {8.4}Examples}{25}{subsection.0.8.4}%
\contentsline {subsection}{\numberline {8.5}Complexity}{26}{subsection.0.8.5}%
\contentsline {section}{\numberline {9}Merge Sort Algorithm}{27}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Psuedocode}{28}{subsection.0.9.1}%
\contentsline {subsection}{\numberline {9.2}Example}{29}{subsection.0.9.2}%
\contentsline {section}{\numberline {10}Binary Heap}{30}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Example}{30}{subsection.0.10.1}%
\contentsline {subsection}{\numberline {10.2}Insertion}{31}{subsection.0.10.2}%
\contentsline {subsection}{\numberline {10.3}Binary heap imbalance}{31}{subsection.0.10.3}%
\contentsline {subsection}{\numberline {10.4}Deletion}{31}{subsection.0.10.4}%
\contentsline {subsection}{\numberline {10.5}Formulas for a binary heap}{31}{subsection.0.10.5}%
\contentsline {section}{\numberline {11} Heap Sort }{32}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Psuedocode}{33}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}Example}{35}{subsection.0.11.2}%
\contentsline {section}{\numberline {12}Linear search}{36}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}The linear search}{36}{subsection.0.12.1}%
\contentsline {section}{\numberline {13}Binary search}{37}{section.0.13}%
\contentsline {section}{\numberline {14}Array Based Stack Implementation}{39}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Data members}{39}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}Member Functions}{39}{subsection.0.14.2}%
\contentsline {subsection}{\numberline {14.3}Reference: Vector copy constructor}{40}{subsection.0.14.3}%
\contentsline {subsection}{\numberline {14.4}Reference: Vector copy assignment operator}{40}{subsection.0.14.4}%
\contentsline {subsection}{\numberline {14.5}Auxiliary: Vector move constructor}{41}{subsection.0.14.5}%
\contentsline {subsection}{\numberline {14.6}Array based stack example}{42}{subsection.0.14.6}%
\contentsline {section}{\numberline {15}Array based stack application: Infix to postfix conversion algorithm}{45}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Infix Notation}{45}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}Postfix Notation}{45}{subsection.0.15.2}%
\contentsline {subsection}{\numberline {15.3}The algorithm}{45}{subsection.0.15.3}%
\contentsline {subsection}{\numberline {15.4}Example}{47}{subsection.0.15.4}%
\contentsline {section}{\numberline {16}Array based queue}{50}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Data members}{50}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Member Functions}{50}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Double-Ended Queue}{51}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}Example}{52}{subsection.0.16.4}%
\contentsline {section}{\numberline {17}Singly-linked list (as a stack)}{55}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Structure of a Node}{55}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Advantages}{55}{subsection.0.17.2}%
\contentsline {subsection}{\numberline {17.3}Disadvantages}{55}{subsection.0.17.3}%
\contentsline {subsection}{\numberline {17.4}Sample node structure}{56}{subsection.0.17.4}%
\contentsline {subsection}{\numberline {17.5}Class to represent a stack}{56}{subsection.0.17.5}%
\contentsline {subsubsection}{\numberline {17.5.1}Data members}{56}{subsubsection.0.17.5.1}%
\contentsline {subsubsection}{\numberline {17.5.2}Member Functions}{56}{subsubsection.0.17.5.2}%
\contentsline {subsection}{\numberline {17.6}Visualization}{57}{subsection.0.17.6}%
\contentsline {subsection}{\numberline {17.7}Example (as a stack)}{58}{subsection.0.17.7}%
\contentsline {section}{\numberline {18}Singly linked list (as a queue)}{61}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Data Members}{61}{subsection.0.18.1}%
\contentsline {subsection}{\numberline {18.2}Member Functions}{61}{subsection.0.18.2}%
\contentsline {subsection}{\numberline {18.3}Visualization}{62}{subsection.0.18.3}%
\contentsline {subsection}{\numberline {18.4}Example Code}{63}{subsection.0.18.4}%
\contentsline {section}{\numberline {19}Hash Table With Linear Probe}{66}{section.0.19}%
\contentsline {subsection}{\numberline {19.1}Hash table header file}{67}{subsection.0.19.1}%
\contentsline {subsection}{\numberline {19.2}Hash table cpp file}{69}{subsection.0.19.2}%
\contentsline {section}{\numberline {20}Reverse a singly linked list}{72}{section.0.20}%
\contentsline {section}{\numberline {21}Doubly-linked list as a template class}{73}{section.0.21}%
\contentsline {section}{\numberline {22}Binary Trees}{80}{section.0.22}%
\contentsline {subsection}{\numberline {22.1}Binary Tree Terminology}{80}{subsection.0.22.1}%
\contentsline {subsection}{\numberline {22.2}Special types}{81}{subsection.0.22.2}%
\contentsline {subsubsection}{\numberline {22.2.1}Strictly (full) binary tree}{81}{subsubsection.0.22.2.1}%
\contentsline {subsection}{\numberline {22.3}Complete binary tree}{81}{subsection.0.22.3}%
\contentsline {subsection}{\numberline {22.4}Almost complete binary tree}{82}{subsection.0.22.4}%
\contentsline {subsection}{\numberline {22.5}Mathematical formulae}{82}{subsection.0.22.5}%
\contentsline {subsubsection}{\numberline {22.5.1}Complete binary tree}{82}{subsubsection.0.22.5.1}%
\contentsline {subsubsection}{\numberline {22.5.2}Strictly (full) binary tree}{83}{subsubsection.0.22.5.2}%
\contentsline {subsubsection}{\numberline {22.5.3}Almost complete }{84}{subsubsection.0.22.5.3}%
\contentsline {subsection}{\numberline {22.6}Properties of binary trees}{84}{subsection.0.22.6}%
\contentsline {subsection}{\numberline {22.7}Representing binary trees in memory}{84}{subsection.0.22.7}%
\contentsline {subsubsection}{\numberline {22.7.1}Linked representation}{85}{subsubsection.0.22.7.1}%
\contentsline {subsection}{\numberline {22.8}Binary Tree traversals}{85}{subsection.0.22.8}%
\contentsline {subsubsection}{\numberline {22.8.1}The "tick trick"}{86}{subsubsection.0.22.8.1}%
\contentsline {subsubsection}{\numberline {22.8.2}Preorder traversal}{87}{subsubsection.0.22.8.2}%
\contentsline {subsubsection}{\numberline {22.8.3}Preorder traversal recursive algorithm}{87}{subsubsection.0.22.8.3}%
\contentsline {subsubsection}{\numberline {22.8.4}Preorder traversal iterative algorithm}{88}{subsubsection.0.22.8.4}%
\contentsline {subsubsection}{\numberline {22.8.5}Inorder Traversal}{89}{subsubsection.0.22.8.5}%
\contentsline {subsubsection}{\numberline {22.8.6}Recursive Inorder Traversal Algorithm}{89}{subsubsection.0.22.8.6}%
\contentsline {subsubsection}{\numberline {22.8.7}Iterative Inorder Traversal Algorithm}{90}{subsubsection.0.22.8.7}%
\contentsline {subsubsection}{\numberline {22.8.8}Postorder Traversal}{91}{subsubsection.0.22.8.8}%
\contentsline {subsubsection}{\numberline {22.8.9}Recursive Postorder Traversal Algorithm}{91}{subsubsection.0.22.8.9}%
\contentsline {subsubsection}{\numberline {22.8.10}Iterative Postorder Traversal Algorithm}{91}{subsubsection.0.22.8.10}%
\contentsline {subsubsection}{\numberline {22.8.11}Level Order Traversal}{93}{subsubsection.0.22.8.11}%
\contentsline {subsubsection}{\numberline {22.8.12}Iterative Level Order Traversal Algorithm}{94}{subsubsection.0.22.8.12}%
\contentsline {subsubsection}{\numberline {22.8.13}Recursive Level Order Traversal Pseudocode}{95}{subsubsection.0.22.8.13}%
\contentsline {section}{\numberline {23}Binary search tree}{96}{section.0.23}%
\contentsline {subsection}{\numberline {23.1}Binary Search Tree Insertion}{96}{subsection.0.23.1}%
\contentsline {subsubsection}{\numberline {23.1.1}Iterative Insertion into a Binary Search Tree Pseudocode}{96}{subsubsection.0.23.1.1}%
\contentsline {subsection}{\numberline {23.2}Binary Search Tree Deletion}{98}{subsection.0.23.2}%
\contentsline {subsubsection}{\numberline {23.2.1}Iterative Deletion from a Binary Search Tree Pseudocode}{99}{subsubsection.0.23.2.1}%
\contentsline {subsubsection}{\numberline {23.2.2}Deletion cases}{101}{subsubsection.0.23.2.2}%
\contentsline {subsection}{\numberline {23.3}Binary Search Tree Find / Lookup}{102}{subsection.0.23.3}%
