# Guide to picking up a language
---

### Preliminary
---

1. Creating and running scripts
2. Typing style (Dynamic/Static)
3.  Running (Compiled (AOT)/Interpreted/JIT)
4. Outputting data
5. Languge style (explicit block-delimited / Brace / Indent)
6. Semicolons?
7. Paradigms... OOP / Functional / Procedural /  Event-Driven...
8. Memory ... pointers/references?
9. Scripting / general purpose / compiled
10. Low level / high level
11. One or zero based indexing

### Modules and Libraries
---
1. Importing libraries/modules.
2. Creating and using custom modules.



### Comments

1. How to write comments



### Types
---

1. Data types
2. Type conversion
3. Type coercion
4. Type promotion / Type Compatibility
5. Type Inference (auto)?
6. Mutability / constant types
7. Custom types / defining types 

### Variables
---

1. All the ways to declare variables
2. Const
3. Annotations?
2. Local / global keywords

### Operators
---
1. Arithmetic
2. Logic ... Short circuting?
3. Comparision
4. String
5. Ternary?

### Other things
---
1. Ranges
2. Elipsis (...)
3. Broadcasting
4. Comprehensions
5. Variadic functions
6. Unpacking
7. Random

### Control flow
---

1. If
2. for / while / break / continue
3. switch

### Functions
---

1. Defining functions / Arguments / calling / assigning to variables
2. Access to globals
3. First class / second class / restricted
4. Higher order / first order?
5. Shorthand functions / lambdas
6. Nested functions? 
7. Recursion
8. Overloading / Multiple dispatch?

### Strings
---
1. Defining strings
2. Control of strings... ("hello" + "world")? str+="Append"? str[i]?
3. String functions / Methods

### Arrays
---
1. Defining arrays
2. Append / Remove
3. Array methods


### Other containers
---

### Iterators
---
1. Do they exist? How to use them


### Creating objects / OOP
---

### Memory Management
--- 
1. Manual vs. garbage collection.
2. Stack vs. heap memory allocation.
3. Common memory pitfalls (e.g., leaks, dangling pointers)
4. Pass by sharing/pass by value/pass by reference...

### Working with files
---

### Error handling (Try/catch/Exceptions)

### Regular expressions

### Meta programming ? 
---


### Find a book to skim and fill in the gaps
---





