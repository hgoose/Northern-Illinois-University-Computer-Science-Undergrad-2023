\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{+w}{        }\PYG{c+c1}{// Case 3: p has two children. Replace p with its inorder predecessor.}

\PYG{+w}{        }\PYG{c+c1}{// Go left...}
\PYG{+w}{        }\PYG{n}{replace\PYGZus{}parent}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}
\PYG{+w}{        }\PYG{n}{replace}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}

\PYG{+w}{        }\PYG{c+c1}{// ...then all the way to the right.}
\PYG{+w}{        }\PYG{k}{while}\PYG{+w}{ }\PYG{n}{replace}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{k}{nullptr}
\PYG{+w}{            }\PYG{n}{replace\PYGZus{}parent}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}
\PYG{+w}{            }\PYG{n}{replace}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{while}

\PYG{+w}{        }\PYG{c+c1}{// If we were able to go to the right, make the replacement node\PYGZsq{}s}
\PYG{+w}{        }\PYG{c+c1}{// left child the right child of its parent. Then make the left child}
\PYG{+w}{        }\PYG{c+c1}{// of p the replacement\PYGZsq{}s left child.}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{n}{replace\PYGZus{}parent}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{p}
\PYG{+w}{            }\PYG{n}{replace\PYGZus{}parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}
\PYG{+w}{            }\PYG{n}{replace}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{if}

\PYG{+w}{        }\PYG{c+c1}{// Make the right child of p the replacement\PYGZsq{}s right child.}
\PYG{+w}{        }\PYG{n}{replace}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}
\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{if}

\PYG{+w}{    }\PYG{c+c1}{// Connect replacement node to the parent node of p (or the root if p has no parent).}
\PYG{+w}{    }\PYG{k}{if}\PYG{+w}{ }\PYG{n}{parent}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k}{nullptr}
\PYG{+w}{        }\PYG{n}{root}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}
\PYG{+w}{    }\PYG{k}{else}
\PYG{+w}{        }\PYG{k}{if}\PYG{+w}{ }\PYG{n}{p}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}
\PYG{+w}{            }\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}
\PYG{+w}{        }\PYG{k}{else}
\PYG{+w}{            }\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{replace}
\PYG{+w}{        }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{if}
\PYG{+w}{    }\PYG{n}{end}\PYG{+w}{ }\PYG{k}{if}

\PYG{+w}{    }\PYG{c+c1}{// Delete the node, decrement the tree size, and signal success.}
\PYG{+w}{    }\PYG{n}{Delete}\PYG{+w}{ }\PYG{n}{the}\PYG{+w}{ }\PYG{n}{node}\PYG{+w}{ }\PYG{n}{pointed}\PYG{+w}{ }\PYG{n}{to}\PYG{+w}{ }\PYG{n}{by}\PYG{+w}{ }\PYG{n}{p}
\PYG{+w}{    }\PYG{n}{t\PYGZus{}size}\PYG{+w}{ }\PYG{err}{←}\PYG{+w}{ }\PYG{n}{t\PYGZus{}size}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}

\PYG{+w}{    }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nb}{true}
\PYG{n}{end}\PYG{+w}{ }\PYG{n}{procedure}
\end{Verbatim}
