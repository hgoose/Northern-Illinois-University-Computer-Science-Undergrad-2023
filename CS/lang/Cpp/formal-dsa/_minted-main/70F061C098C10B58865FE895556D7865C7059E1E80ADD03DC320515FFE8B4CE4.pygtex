\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
    vector\PYGZlt{}int\PYGZgt{} nextGreaterElement(vector\PYGZlt{}int\PYGZgt{}\PYG{n+nb}{\PYGZam{}} nums) \PYG{n+nb}{\PYGZob{}}
        vector\PYGZlt{}int\PYGZgt{} res(nums.size(), \PYGZhy{}1);
        stack\PYGZlt{}int\PYGZgt{} s;

        for (int i=0; i\PYGZlt{}(int)nums.size(); ++i) \PYG{n+nb}{\PYGZob{}}
        while (s.size() \PYG{n+nb}{\PYGZam{}\PYGZam{}} (nums[i] \PYGZgt{} nums[s.top()])) \PYG{n+nb}{\PYGZob{}}
            int index = s.top();
            s.pop();
            res[index] = nums[i];
        \PYG{n+nb}{\PYGZcb{}}
        s.push(i);
    \PYG{n+nb}{\PYGZcb{}}

    return res;
\PYG{n+nb}{\PYGZcb{}}
int main() \PYG{n+nb}{\PYGZob{}}
    vector\PYGZlt{}int\PYGZgt{} v\PYG{n+nb}{\PYGZob{}}2,1,5,4,6\PYG{n+nb}{\PYGZcb{}};
    vector\PYGZlt{}int\PYGZgt{} res = nextGreaterElement(v);
    for (const auto\PYG{n+nb}{\PYGZam{}} item : res) cout \PYGZlt{}\PYGZlt{} item \PYGZlt{}\PYGZlt{} \PYGZdq{} \PYGZdq{};
    // 5 5 6 6 \PYGZhy{}1
\PYG{n+nb}{\PYGZcb{}}
\end{Verbatim}
