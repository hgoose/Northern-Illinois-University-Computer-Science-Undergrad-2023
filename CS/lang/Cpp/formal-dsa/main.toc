\contentsline {section}{\numberline {1}Preface}{2}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{2}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{2}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{3}{section.0.2}%
\contentsline {section}{\numberline {3}Binary search}{10}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Avoiding overflow with suitable mid calculations}{10}{subsection.0.3.1}%
\contentsline {subsection}{\numberline {3.2}The while(left < right), left = mid+1, right = mid pattern}{10}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}First bad version}{11}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The almost equivalent form}{12}{subsubsection.0.3.2.2}%
\contentsline {subsection}{\numberline {3.3}Search Insert Position}{12}{subsection.0.3.3}%
\contentsline {subsection}{\numberline {3.4}Binary search on two arrays}{14}{subsection.0.3.4}%
\contentsline {subsubsection}{\numberline {3.4.1}Minimum common value}{14}{subsubsection.0.3.4.1}%
\contentsline {subsection}{\numberline {3.5}Advanced application}{15}{subsection.0.3.5}%
\contentsline {section}{\numberline {4}Sliding window}{16}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Types of Sliding Window Problems}{16}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Minimum Recolors to Get K Consecutive Black Blocks}{16}{subsection.0.4.2}%
\contentsline {section}{\numberline {5}Linked lists}{18}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Singly-linked lists}{18}{subsection.0.5.1}%
\contentsline {subsubsection}{\numberline {5.1.1}Structure of the node}{18}{subsubsection.0.5.1.1}%
\contentsline {subsubsection}{\numberline {5.1.2}The list class/struct}{19}{subsubsection.0.5.1.2}%
\contentsline {subsubsection}{\numberline {5.1.3}Interface of a singly linked list stack}{19}{subsubsection.0.5.1.3}%
\contentsline {subsubsection}{\numberline {5.1.4}Traversing}{20}{subsubsection.0.5.1.4}%
\contentsline {subsubsection}{\numberline {5.1.5}Printing}{21}{subsubsection.0.5.1.5}%
\contentsline {subsubsection}{\numberline {5.1.6}Printing in reverse}{22}{subsubsection.0.5.1.6}%
\contentsline {subsubsection}{\numberline {5.1.7}Getting the length}{23}{subsubsection.0.5.1.7}%
\contentsline {subsubsection}{\numberline {5.1.8}Clearing}{24}{subsubsection.0.5.1.8}%
\contentsline {subsubsection}{\numberline {5.1.9}Reversing}{25}{subsubsection.0.5.1.9}%
\contentsline {subsubsection}{\numberline {5.1.10}Pushing}{26}{subsubsection.0.5.1.10}%
\contentsline {subsubsection}{\numberline {5.1.11}Inserting}{27}{subsubsection.0.5.1.11}%
\contentsline {subsubsection}{\numberline {5.1.12}Popping}{28}{subsubsection.0.5.1.12}%
\contentsline {subsubsection}{\numberline {5.1.13}Erasing}{29}{subsubsection.0.5.1.13}%
\contentsline {subsubsection}{\numberline {5.1.14}Searching}{30}{subsubsection.0.5.1.14}%
\contentsline {subsection}{\numberline {5.2}Doubly-linked list}{31}{subsection.0.5.2}%
\contentsline {subsubsection}{\numberline {5.2.1}Node structure}{31}{subsubsection.0.5.2.1}%
\contentsline {subsubsection}{\numberline {5.2.2}The list class}{31}{subsubsection.0.5.2.2}%
\contentsline {subsubsection}{\numberline {5.2.3}push\_back and push\_front}{32}{subsubsection.0.5.2.3}%
\contentsline {subsubsection}{\numberline {5.2.4}pop\_back and pop\_frot}{33}{subsubsection.0.5.2.4}%
\contentsline {subsubsection}{\numberline {5.2.5}Searching}{34}{subsubsection.0.5.2.5}%
\contentsline {section}{\numberline {6}Monotonic stack}{35}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Next greater element}{35}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Next smaller element}{36}{subsection.0.6.2}%
\contentsline {section}{\numberline {7}Recursion}{37}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Recursion vs iteration}{37}{subsection.0.7.1}%
\contentsline {subsection}{\numberline {7.2}Elementary recursion}{38}{subsection.0.7.2}%
\contentsline {subsection}{\numberline {7.3}Base cases}{38}{subsection.0.7.3}%
\contentsline {subsubsection}{\numberline {7.3.1}Factorials}{38}{subsubsection.0.7.3.1}%
\contentsline {subsubsection}{\numberline {7.3.2}Powers}{39}{subsubsection.0.7.3.2}%
\contentsline {subsection}{\numberline {7.4}Tail recursion}{40}{subsection.0.7.4}%
\contentsline {subsection}{\numberline {7.5}Indirect Recursion}{42}{subsection.0.7.5}%
\contentsline {subsection}{\numberline {7.6}Nested Recursion}{43}{subsection.0.7.6}%
\contentsline {subsection}{\numberline {7.7}Excessive Recursion}{43}{subsection.0.7.7}%
\contentsline {subsection}{\numberline {7.8}Backtracking}{45}{subsection.0.7.8}%
\contentsline {subsubsection}{\numberline {7.8.1}N-Queens}{46}{subsubsection.0.7.8.1}%
\contentsline {subsubsection}{\numberline {7.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{47}{subsubsection.0.7.8.2}%
\contentsline {subsubsection}{\numberline {7.8.3}Combinations}{51}{subsubsection.0.7.8.3}%
\contentsline {subsubsection}{\numberline {7.8.4}Combinations that sum to $m$}{52}{subsubsection.0.7.8.4}%
\contentsline {subsubsection}{\numberline {7.8.5}Permutations}{53}{subsubsection.0.7.8.5}%
\contentsline {subsection}{\numberline {7.9}Recursion in singly linked lists}{54}{subsection.0.7.9}%
\contentsline {subsubsection}{\numberline {7.9.1}Traversing}{54}{subsubsection.0.7.9.1}%
\contentsline {subsubsection}{\numberline {7.9.2}Printing}{54}{subsubsection.0.7.9.2}%
\contentsline {subsubsection}{\numberline {7.9.3}Printing in reverse}{54}{subsubsection.0.7.9.3}%
\contentsline {subsubsection}{\numberline {7.9.4}Getting the length}{55}{subsubsection.0.7.9.4}%
\contentsline {subsubsection}{\numberline {7.9.5}Clearing}{55}{subsubsection.0.7.9.5}%
\contentsline {subsubsection}{\numberline {7.9.6}Reversing}{56}{subsubsection.0.7.9.6}%
\contentsline {subsubsection}{\numberline {7.9.7}Pushing}{58}{subsubsection.0.7.9.7}%
\contentsline {subsubsection}{\numberline {7.9.8}Inserting}{59}{subsubsection.0.7.9.8}%
\contentsline {subsubsection}{\numberline {7.9.9}Popping}{60}{subsubsection.0.7.9.9}%
\contentsline {subsubsection}{\numberline {7.9.10}Erasing}{61}{subsubsection.0.7.9.10}%
\contentsline {subsubsection}{\numberline {7.9.11}Searching}{62}{subsubsection.0.7.9.11}%
\contentsline {section}{\numberline {8}More on backtracking}{63}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}(Power set) Subsets}{63}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Power set with duplicates}{64}{subsection.0.8.2}%
\contentsline {subsection}{\numberline {8.3}Generate permutations (Without swaps)}{65}{subsection.0.8.3}%
\contentsline {subsection}{\numberline {8.4}Permutations with repetition}{66}{subsection.0.8.4}%
\contentsline {subsection}{\numberline {8.5}Combinations with repetitions}{67}{subsection.0.8.5}%
\contentsline {subsection}{\numberline {8.6}Backtracking with pruning}{68}{subsection.0.8.6}%
\contentsline {section}{\numberline {9}The basics of Dynamic Programming (DP)}{69}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Key Concepts of DP}{69}{subsection.0.9.1}%
\contentsline {subsection}{\numberline {9.2}Bottom-up DP}{69}{subsection.0.9.2}%
\contentsline {subsubsection}{\numberline {9.2.1}Key Characteristics}{69}{subsubsection.0.9.2.1}%
\contentsline {subsubsection}{\numberline {9.2.2}Steps for Bottom-Up DP}{69}{subsubsection.0.9.2.2}%
\contentsline {subsection}{\numberline {9.3}Bottom-up DP: Fibonacci}{70}{subsection.0.9.3}%
\contentsline {subsection}{\numberline {9.4}Memoization (top down DP)}{70}{subsection.0.9.4}%
\contentsline {subsection}{\numberline {9.5}Top-down DP: Fibonacci}{71}{subsection.0.9.5}%
\contentsline {section}{\numberline {10}Dynamic programming}{72}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}LCS (longest common subsequence)}{72}{subsection.0.10.1}%
\contentsline {section}{\numberline {11}Binary trees}{73}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Terminology}{73}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}Type of binary trees}{74}{subsection.0.11.2}%
\contentsline {subsection}{\numberline {11.3}Maximum height of a binary tree}{75}{subsection.0.11.3}%
\contentsline {subsubsection}{\numberline {11.3.1}Minimum height of a binary tree}{75}{subsubsection.0.11.3.1}%
\contentsline {subsubsection}{\numberline {11.3.2}Number of Leaves in a Binary Tree}{75}{subsubsection.0.11.3.2}%
\contentsline {subsubsection}{\numberline {11.3.3}Relationship Between Internal Nodes and Leaves:}{75}{subsubsection.0.11.3.3}%
\contentsline {subsubsection}{\numberline {11.3.4}Maximum Number of Nodes at Height h}{75}{subsubsection.0.11.3.4}%
\contentsline {subsubsection}{\numberline {11.3.5}Number of Edges in a Binary Tree:}{76}{subsubsection.0.11.3.5}%
\contentsline {subsection}{\numberline {11.4}Full trees}{77}{subsection.0.11.4}%
\contentsline {subsubsection}{\numberline {11.4.1}Number of leaves}{77}{subsubsection.0.11.4.1}%
\contentsline {subsubsection}{\numberline {11.4.2}Number of nodes}{78}{subsubsection.0.11.4.2}%
\contentsline {subsubsection}{\numberline {11.4.3}Number of internal nodes}{78}{subsubsection.0.11.4.3}%
\contentsline {subsection}{\numberline {11.5}Complete Binary Tree}{79}{subsection.0.11.5}%
\contentsline {subsubsection}{\numberline {11.5.1}Number of nodes}{79}{subsubsection.0.11.5.1}%
\contentsline {subsubsection}{\numberline {11.5.2}Height}{79}{subsubsection.0.11.5.2}%
\contentsline {subsubsection}{\numberline {11.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{79}{subsubsection.0.11.5.3}%
\contentsline {subsubsection}{\numberline {11.5.4}Number of internal nodes}{80}{subsubsection.0.11.5.4}%
\contentsline {subsubsection}{\numberline {11.5.5}Parent and Child Relationships in a Complete Binary Tree}{80}{subsubsection.0.11.5.5}%
\contentsline {subsection}{\numberline {11.6}Perfect binary tree}{81}{subsection.0.11.6}%
\contentsline {subsubsection}{\numberline {11.6.1}Number of Nodes}{81}{subsubsection.0.11.6.1}%
\contentsline {subsubsection}{\numberline {11.6.2}Number of Leaf Nodes}{81}{subsubsection.0.11.6.2}%
\contentsline {subsubsection}{\numberline {11.6.3}Height of the Tree}{81}{subsubsection.0.11.6.3}%
\contentsline {subsubsection}{\numberline {11.6.4}Number of Internal Nodes}{81}{subsubsection.0.11.6.4}%
\contentsline {subsubsection}{\numberline {11.6.5}Depth}{81}{subsubsection.0.11.6.5}%
\contentsline {subsection}{\numberline {11.7}Invert a binary tree}{82}{subsection.0.11.7}%
\contentsline {subsubsection}{\numberline {11.7.1}Swap node helper method}{82}{subsubsection.0.11.7.1}%
\contentsline {subsubsection}{\numberline {11.7.2}Level order (BFS) solution}{82}{subsubsection.0.11.7.2}%
\contentsline {subsubsection}{\numberline {11.7.3}Recursive postorder (DFS)}{83}{subsubsection.0.11.7.3}%
\contentsline {subsection}{\numberline {11.8}Lowest common ancestor (LCA)}{84}{subsection.0.11.8}%
\contentsline {subsubsection}{\numberline {11.8.1}LCA in a BST}{85}{subsubsection.0.11.8.1}%
\contentsline {subsubsection}{\numberline {11.8.2}LCA in a normal binary tree}{86}{subsubsection.0.11.8.2}%
\contentsline {subsection}{\numberline {11.9}Find path to a node}{87}{subsection.0.11.9}%
\contentsline {section}{\numberline {12}Applications of binary trees}{88}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Binary search trees}{88}{subsection.0.12.1}%
\contentsline {subsubsection}{\numberline {12.1.1}Interface}{88}{subsubsection.0.12.1.1}%
\contentsline {subsubsection}{\numberline {12.1.2}Traversals}{89}{subsubsection.0.12.1.2}%
\contentsline {paragraph}{\numberline {12.1.2.1}Level order}{89}{paragraph.0.12.1.2.1}%
\contentsline {paragraph}{\numberline {12.1.2.2}Preorder}{90}{paragraph.0.12.1.2.2}%
\contentsline {paragraph}{\numberline {12.1.2.3}Inorder}{90}{paragraph.0.12.1.2.3}%
\contentsline {paragraph}{\numberline {12.1.2.4}Postorder}{92}{paragraph.0.12.1.2.4}%
\contentsline {subsubsection}{\numberline {12.1.3}Successor of a node}{92}{subsubsection.0.12.1.3}%
\contentsline {subsubsection}{\numberline {12.1.4}Predecessor}{93}{subsubsection.0.12.1.4}%
\contentsline {subsubsection}{\numberline {12.1.5}The node}{93}{subsubsection.0.12.1.5}%
\contentsline {subsubsection}{\numberline {12.1.6}The class}{93}{subsubsection.0.12.1.6}%
\contentsline {subsubsection}{\numberline {12.1.7}Recursive Insertion}{94}{subsubsection.0.12.1.7}%
\contentsline {subsubsection}{\numberline {12.1.8}A better recursive insert}{95}{subsubsection.0.12.1.8}%
\contentsline {subsubsection}{\numberline {12.1.9}Iterative insert}{96}{subsubsection.0.12.1.9}%
\contentsline {subsubsection}{\numberline {12.1.10}Recursive removing}{97}{subsubsection.0.12.1.10}%
\contentsline {subsubsection}{\numberline {12.1.11}Clearing}{99}{subsubsection.0.12.1.11}%
\contentsline {subsubsection}{\numberline {12.1.12}Counting the height of the tree (root)}{100}{subsubsection.0.12.1.12}%
\contentsline {subsubsection}{\numberline {12.1.13}Counting the height of a node}{100}{subsubsection.0.12.1.13}%
\contentsline {subsubsection}{\numberline {12.1.14}Getting the depth of the node}{101}{subsubsection.0.12.1.14}%
\contentsline {subsubsection}{\numberline {12.1.15}Counting the number of nodes}{102}{subsubsection.0.12.1.15}%
\contentsline {subsubsection}{\numberline {12.1.16}Comparison traversals}{102}{subsubsection.0.12.1.16}%
\contentsline {subsubsection}{\numberline {12.1.17}Finding the smallest and largest values}{104}{subsubsection.0.12.1.17}%
\contentsline {subsubsection}{\numberline {12.1.18}Getting the widths of a bst}{105}{subsubsection.0.12.1.18}%
\contentsline {subsubsection}{\numberline {12.1.19}Degenerate Binary Search trees}{107}{subsubsection.0.12.1.19}%
\contentsline {subsubsection}{\numberline {12.1.20}Verifying a binary search tree}{107}{subsubsection.0.12.1.20}%
\contentsline {subsubsection}{\numberline {12.1.21}Complexities}{108}{subsubsection.0.12.1.21}%
\contentsline {subsection}{\numberline {12.2}Adelson-Velsky and Landis Trees (AVL trees)}{109}{subsection.0.12.2}%
\contentsline {subsubsection}{\numberline {12.2.1}Definition}{109}{subsubsection.0.12.2.1}%
\contentsline {subsubsection}{\numberline {12.2.2}AVL Nodes}{110}{subsubsection.0.12.2.2}%
\contentsline {subsubsection}{\numberline {12.2.3}Storing the height}{110}{subsubsection.0.12.2.3}%
\contentsline {subsubsection}{\numberline {12.2.4}Defining balance factors in C++ with enums}{111}{subsubsection.0.12.2.4}%
\contentsline {subsubsection}{\numberline {12.2.5}Defining balance factors with a height calculation}{111}{subsubsection.0.12.2.5}%
\contentsline {subsubsection}{\numberline {12.2.6}Interface}{112}{subsubsection.0.12.2.6}%
\contentsline {subsubsection}{\numberline {12.2.7}Balancing an AVL tree}{112}{subsubsection.0.12.2.7}%
\contentsline {subsubsection}{\numberline {12.2.8}Rotations: Right tree}{113}{subsubsection.0.12.2.8}%
\contentsline {paragraph}{\numberline {12.2.8.1}Case 1: Right higher}{113}{paragraph.0.12.2.8.1}%
\contentsline {paragraph}{\numberline {12.2.8.2}Case 2: Left higher}{116}{paragraph.0.12.2.8.2}%
\contentsline {subsubsection}{\numberline {12.2.9}C++ Rotations}{118}{subsubsection.0.12.2.9}%
\contentsline {subsubsection}{\numberline {12.2.10}Balancing}{120}{subsubsection.0.12.2.10}%
\contentsline {subsubsection}{\numberline {12.2.11}Insertions}{121}{subsubsection.0.12.2.11}%
\contentsline {subsubsection}{\numberline {12.2.12}Removing nodes}{122}{subsubsection.0.12.2.12}%
\contentsline {subsection}{\numberline {12.3}Red-black trees}{124}{subsection.0.12.3}%
\contentsline {subsubsection}{\numberline {12.3.1}Rotations}{126}{subsubsection.0.12.3.1}%
\contentsline {subsubsection}{\numberline {12.3.2}Inserting}{128}{subsubsection.0.12.3.2}%
\contentsline {subsubsection}{\numberline {12.3.3}Deletion}{133}{subsubsection.0.12.3.3}%
\contentsline {subsubsection}{\numberline {12.3.4}C++ implementation}{137}{subsubsection.0.12.3.4}%
\contentsline {paragraph}{\numberline {12.3.4.1}The node structure}{137}{paragraph.0.12.3.4.1}%
\contentsline {paragraph}{\numberline {12.3.4.2}The tree class and defining nil}{137}{paragraph.0.12.3.4.2}%
\contentsline {paragraph}{\numberline {12.3.4.3}Rotation methods}{138}{paragraph.0.12.3.4.3}%
\contentsline {paragraph}{\numberline {12.3.4.4}Insert}{139}{paragraph.0.12.3.4.4}%
\contentsline {paragraph}{\numberline {12.3.4.5}Insert fixup}{140}{paragraph.0.12.3.4.5}%
\contentsline {subsection}{\numberline {12.4}State space tree}{141}{subsection.0.12.4}%
\contentsline {section}{\numberline {13}Heaps and Priority Queues (Zero based)}{142}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Max and Min heaps}{144}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}Heapify an array}{144}{subsection.0.13.2}%
\contentsline {subsection}{\numberline {13.3}Min-heap in c++}{145}{subsection.0.13.3}%
\contentsline {subsection}{\numberline {13.4}Max-heap in c++}{146}{subsection.0.13.4}%
\contentsline {subsection}{\numberline {13.5}Percolating}{147}{subsection.0.13.5}%
\contentsline {subsubsection}{\numberline {13.5.1}Percolate up}{147}{subsubsection.0.13.5.1}%
\contentsline {subsubsection}{\numberline {13.5.2}Percolate down}{148}{subsubsection.0.13.5.2}%
\contentsline {subsection}{\numberline {13.6}Inserting into a heap}{149}{subsection.0.13.6}%
\contentsline {subsection}{\numberline {13.7}Removing the root}{150}{subsection.0.13.7}%
\contentsline {subsection}{\numberline {13.8}Removing an arbitary node}{151}{subsection.0.13.8}%
\contentsline {subsection}{\numberline {13.9}Priority queues}{152}{subsection.0.13.9}%
\contentsline {subsubsection}{\numberline {13.9.1}Interface}{152}{subsubsection.0.13.9.1}%
\contentsline {subsubsection}{\numberline {13.9.2}Insert, pop, and top}{153}{subsubsection.0.13.9.2}%
\contentsline {subsubsection}{\numberline {13.9.3}Size and Empty}{154}{subsubsection.0.13.9.3}%
\contentsline {subsection}{\numberline {13.10}Median of a Stream}{155}{subsection.0.13.10}%
\contentsline {section}{\numberline {14}Sorting}{156}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Bubble, selection, insertion}{156}{subsection.0.14.1}%
\contentsline {subsubsection}{\numberline {14.1.1}Bubble sort}{156}{subsubsection.0.14.1.1}%
\contentsline {paragraph}{\numberline {14.1.1.1}Complexity}{157}{paragraph.0.14.1.1.1}%
\contentsline {subsubsection}{\numberline {14.1.2}Selection sort}{158}{subsubsection.0.14.1.2}%
\contentsline {paragraph}{\numberline {14.1.2.1}Complexity}{158}{paragraph.0.14.1.2.1}%
\contentsline {subsubsection}{\numberline {14.1.3}Insertion sort}{159}{subsubsection.0.14.1.3}%
\contentsline {paragraph}{\numberline {14.1.3.1}Complexity}{160}{paragraph.0.14.1.3.1}%
\contentsline {subsection}{\numberline {14.2}Heap sort}{161}{subsection.0.14.2}%
\contentsline {subsubsection}{\numberline {14.2.1}Complexity}{161}{subsubsection.0.14.2.1}%
\contentsline {subsection}{\numberline {14.3}BST Sort}{162}{subsection.0.14.3}%
\contentsline {subsubsection}{\numberline {14.3.1}Insert}{162}{subsubsection.0.14.3.1}%
\contentsline {subsubsection}{\numberline {14.3.2}The inorder traversal}{162}{subsubsection.0.14.3.2}%
\contentsline {subsubsection}{\numberline {14.3.3}The BST sort function}{163}{subsubsection.0.14.3.3}%
\contentsline {subsubsection}{\numberline {14.3.4}Inplace sorting}{164}{subsubsection.0.14.3.4}%
\contentsline {subsubsection}{\numberline {14.3.5}Complexity}{164}{subsubsection.0.14.3.5}%
\contentsline {subsection}{\numberline {14.4}Quick sort}{165}{subsection.0.14.4}%
\contentsline {subsubsection}{\numberline {14.4.1}Partitioning}{165}{subsubsection.0.14.4.1}%
\contentsline {subsubsection}{\numberline {14.4.2}The quick sort procedure}{166}{subsubsection.0.14.4.2}%
\contentsline {subsubsection}{\numberline {14.4.3}A better partition}{168}{subsubsection.0.14.4.3}%
\contentsline {subsubsection}{\numberline {14.4.4}Median of three partition}{168}{subsubsection.0.14.4.4}%
\contentsline {subsubsection}{\numberline {14.4.5}Quicksort with iterators}{170}{subsubsection.0.14.4.5}%
\contentsline {section}{\numberline {15}Multi-way (m-way) search trees}{171}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Multi-way Searching}{171}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}2-4 (2-3-4) Trees}{172}{subsection.0.15.2}%
\contentsline {subsubsection}{\numberline {15.2.1}Insertion}{172}{subsubsection.0.15.2.1}%
\contentsline {subsubsection}{\numberline {15.2.2}Removal}{173}{subsubsection.0.15.2.2}%
\contentsline {subsubsection}{\numberline {15.2.3}Properties}{175}{subsubsection.0.15.2.3}%
\contentsline {subsection}{\numberline {15.3}B-trees}{176}{subsection.0.15.3}%
\contentsline {section}{\numberline {16}Hashing (hash tables)}{177}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Direct-address table}{177}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Hash tables}{178}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Independent uniform hashing}{179}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}Collision resolution by chaining}{179}{subsection.0.16.4}%
\contentsline {subsection}{\numberline {16.5}Analysis of hashing with chaining}{180}{subsection.0.16.5}%
\contentsline {subsection}{\numberline {16.6}Hash functions}{180}{subsection.0.16.6}%
\contentsline {subsubsection}{\numberline {16.6.1}Static hashing}{181}{subsubsection.0.16.6.1}%
\contentsline {subsubsection}{\numberline {16.6.2}The division method}{181}{subsubsection.0.16.6.2}%
\contentsline {subsubsection}{\numberline {16.6.3}The multiplication method}{182}{subsubsection.0.16.6.3}%
\contentsline {subsection}{\numberline {16.7}Open addressing}{182}{subsection.0.16.7}%
\contentsline {subsubsection}{\numberline {16.7.1}Linear probing}{182}{subsubsection.0.16.7.1}%
\contentsline {subsubsection}{\numberline {16.7.2}Quadratic probing}{183}{subsubsection.0.16.7.2}%
\contentsline {subsubsection}{\numberline {16.7.3}Deletion problem in open addressing}{183}{subsubsection.0.16.7.3}%
\contentsline {subsubsection}{\numberline {16.7.4}Tombstoning}{183}{subsubsection.0.16.7.4}%
\contentsline {subsubsection}{\numberline {16.7.5}Lazy deletion}{184}{subsubsection.0.16.7.5}%
\contentsline {subsubsection}{\numberline {16.7.6}Rehashing}{184}{subsubsection.0.16.7.6}%
\contentsline {subsection}{\numberline {16.8}Load factor}{185}{subsection.0.16.8}%
\contentsline {subsection}{\numberline {16.9}Static hashing}{185}{subsection.0.16.9}%
\contentsline {subsection}{\numberline {16.10}Static linear hashing}{185}{subsection.0.16.10}%
\contentsline {subsection}{\numberline {16.11}Static hashing with linear probe implementation}{186}{subsection.0.16.11}%
\contentsline {subsubsection}{\numberline {16.11.1}Interface}{186}{subsubsection.0.16.11.1}%
\contentsline {subsubsection}{\numberline {16.11.2}The basics}{186}{subsubsection.0.16.11.2}%
\contentsline {subsubsection}{\numberline {16.11.3}The hash function}{186}{subsubsection.0.16.11.3}%
\contentsline {subsubsection}{\numberline {16.11.4}Inserts}{187}{subsubsection.0.16.11.4}%
\contentsline {subsubsection}{\numberline {16.11.5}Searching}{188}{subsubsection.0.16.11.5}%
\contentsline {subsubsection}{\numberline {16.11.6}Removing}{188}{subsubsection.0.16.11.6}%
\contentsline {subsubsection}{\numberline {16.11.7}Searching and removing with tombstones}{188}{subsubsection.0.16.11.7}%
\contentsline {subsection}{\numberline {16.12}Static hashing with quadratic probing implementation}{191}{subsection.0.16.12}%
\contentsline {subsubsection}{\numberline {16.12.1}Inserting}{191}{subsubsection.0.16.12.1}%
\contentsline {subsubsection}{\numberline {16.12.2}Searching}{192}{subsubsection.0.16.12.2}%
\contentsline {subsubsection}{\numberline {16.12.3}Removing}{193}{subsubsection.0.16.12.3}%
\contentsline {subsection}{\numberline {16.13}Static hashing with chaining implementation}{194}{subsection.0.16.13}%
\contentsline {subsubsection}{\numberline {16.13.1}The basics}{194}{subsubsection.0.16.13.1}%
\contentsline {subsubsection}{\numberline {16.13.2}Inserting}{194}{subsubsection.0.16.13.2}%
\contentsline {subsubsection}{\numberline {16.13.3}Searching}{194}{subsubsection.0.16.13.3}%
\contentsline {subsubsection}{\numberline {16.13.4}Removing}{195}{subsubsection.0.16.13.4}%
\contentsline {subsection}{\numberline {16.14}Injective hashing}{196}{subsection.0.16.14}%
\contentsline {subsection}{\numberline {16.15}Perfect hashing}{196}{subsection.0.16.15}%
\contentsline {section}{\numberline {17}Implementing an unordered\_map}{197}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Fields}{197}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Interface}{197}{subsection.0.17.2}%
\contentsline {subsection}{\numberline {17.3}Public methods: Hash and rehash}{198}{subsection.0.17.3}%
\contentsline {subsection}{\numberline {17.4}Inserting and erasing}{198}{subsection.0.17.4}%
\contentsline {subsubsection}{\numberline {17.4.1}Insertion}{198}{subsubsection.0.17.4.1}%
\contentsline {subsubsection}{\numberline {17.4.2}Erasing}{199}{subsubsection.0.17.4.2}%
\contentsline {subsection}{\numberline {17.5}Finding and checking if the map is empty}{199}{subsection.0.17.5}%
\contentsline {subsubsection}{\numberline {17.5.1}Finding}{199}{subsubsection.0.17.5.1}%
\contentsline {subsubsection}{\numberline {17.5.2}Empty}{199}{subsubsection.0.17.5.2}%
\contentsline {subsection}{\numberline {17.6}The subscript operator}{200}{subsection.0.17.6}%
\contentsline {section}{\numberline {18}Table indexing and row-major order}{201}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Row-major order}{201}{subsection.0.18.1}%
\contentsline {subsection}{\numberline {18.2}Row-major order in c++}{202}{subsection.0.18.2}%
\contentsline {section}{\numberline {19}Graphs}{203}{section.0.19}%
\contentsline {subsection}{\numberline {19.1}Simple Graph}{203}{subsection.0.19.1}%
\contentsline {subsection}{\numberline {19.2}Undirected graph}{203}{subsection.0.19.2}%
\contentsline {subsection}{\numberline {19.3}Directed graph}{203}{subsection.0.19.3}%
\contentsline {subsection}{\numberline {19.4}Weighted Graph}{203}{subsection.0.19.4}%
\contentsline {subsection}{\numberline {19.5}Complete Graph}{204}{subsection.0.19.5}%
\contentsline {subsection}{\numberline {19.6}More terms}{204}{subsection.0.19.6}%
\contentsline {subsection}{\numberline {19.7}Graph representations}{204}{subsection.0.19.7}%
\contentsline {subsection}{\numberline {19.8}Interface of adjacency lists and matrices}{205}{subsection.0.19.8}%
\contentsline {subsection}{\numberline {19.9}Complexities for adjacency operations}{205}{subsection.0.19.9}%
\contentsline {subsection}{\numberline {19.10}Graph traversal/search}{205}{subsection.0.19.10}%
\contentsline {subsubsection}{\numberline {19.10.1}Breadth-first-traversal}{206}{subsubsection.0.19.10.1}%
\contentsline {subsubsection}{\numberline {19.10.2}Depth-first traversal}{206}{subsubsection.0.19.10.2}%
\contentsline {subsection}{\numberline {19.11}Shortest path problems}{206}{subsection.0.19.11}%
\contentsline {subsubsection}{\numberline {19.11.1}Dijkstra's shortest path algorithm}{207}{subsubsection.0.19.11.1}%
\contentsline {subsubsection}{\numberline {19.11.2}Dijkstras's algorithm in c++}{208}{subsubsection.0.19.11.2}%
\contentsline {subsection}{\numberline {19.12}Undirected graph in c++ with an adjacency list}{210}{subsection.0.19.12}%
\contentsline {subsubsection}{\numberline {19.12.1}Internal structure}{210}{subsubsection.0.19.12.1}%
\contentsline {subsubsection}{\numberline {19.12.2}Interface}{210}{subsubsection.0.19.12.2}%
\contentsline {subsubsection}{\numberline {19.12.3}Adding edges}{210}{subsubsection.0.19.12.3}%
\contentsline {subsubsection}{\numberline {19.12.4}Adding nodes}{211}{subsubsection.0.19.12.4}%
\contentsline {subsubsection}{\numberline {19.12.5}Getting the neighbors}{211}{subsubsection.0.19.12.5}%
\contentsline {subsubsection}{\numberline {19.12.6}Checking if an edge exists}{211}{subsubsection.0.19.12.6}%
\contentsline {subsubsection}{\numberline {19.12.7}Breadth first traversal}{212}{subsubsection.0.19.12.7}%
\contentsline {subsubsection}{\numberline {19.12.8}Breadth first search to find the shortest path}{213}{subsubsection.0.19.12.8}%
\contentsline {subsubsection}{\numberline {19.12.9}Depth first traversal}{214}{subsubsection.0.19.12.9}%
\contentsline {subsection}{\numberline {19.13}Undirected graph in c++ with adjacency matrix}{215}{subsection.0.19.13}%
\contentsline {subsubsection}{\numberline {19.13.1}Setup}{215}{subsubsection.0.19.13.1}%
\contentsline {subsubsection}{\numberline {19.13.2}Adding an edge}{215}{subsubsection.0.19.13.2}%
\contentsline {subsubsection}{\numberline {19.13.3}Removing an edge}{215}{subsubsection.0.19.13.3}%
\contentsline {subsubsection}{\numberline {19.13.4}Getting neighbors}{215}{subsubsection.0.19.13.4}%
\contentsline {subsubsection}{\numberline {19.13.5}Checking if an edge exists}{216}{subsubsection.0.19.13.5}%
\contentsline {subsubsection}{\numberline {19.13.6}Breadth-first traversal}{217}{subsubsection.0.19.13.6}%
\contentsline {subsubsection}{\numberline {19.13.7}Depth-first traversal}{218}{subsubsection.0.19.13.7}%
\contentsline {subsection}{\numberline {19.14}Weighted graph in C++ with an adjacency matrix}{219}{subsection.0.19.14}%
\contentsline {subsubsection}{\numberline {19.14.1}Setup}{219}{subsubsection.0.19.14.1}%
\contentsline {subsubsection}{\numberline {19.14.2}Adding and removing edges}{219}{subsubsection.0.19.14.2}%
\contentsline {subsubsection}{\numberline {19.14.3}Dijkstra}{220}{subsubsection.0.19.14.3}%
\contentsline {subsection}{\numberline {19.15}Weighted graph in c++ with structure}{221}{subsection.0.19.15}%
\contentsline {subsection}{\numberline {19.16}Topological sort (DFS approach)}{222}{subsection.0.19.16}%
\contentsline {subsubsection}{\numberline {19.16.1}C++ Setup}{222}{subsubsection.0.19.16.1}%
\contentsline {subsubsection}{\numberline {19.16.2}Topological sort with dfs helper}{222}{subsubsection.0.19.16.2}%
\contentsline {subsection}{\numberline {19.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{224}{subsection.0.19.17}%
\contentsline {subsubsection}{\numberline {19.17.1}Class structure and Fields}{224}{subsubsection.0.19.17.1}%
\contentsline {subsubsection}{\numberline {19.17.2}Find}{224}{subsubsection.0.19.17.2}%
\contentsline {subsubsection}{\numberline {19.17.3}Union}{225}{subsubsection.0.19.17.3}%
\contentsline {subsubsection}{\numberline {19.17.4}Find and union optimizations}{225}{subsubsection.0.19.17.4}%
\contentsline {subsection}{\numberline {19.18}Using UnionFind}{226}{subsection.0.19.18}%
\contentsline {subsection}{\numberline {19.19}Minimum spanning trees}{227}{subsection.0.19.19}%
\contentsline {subsubsection}{\numberline {19.19.1}Kruskal's algorithm}{227}{subsubsection.0.19.19.1}%
\contentsline {section}{\numberline {20}Prefix and suffix sums, products, etc}{230}{section.0.20}%
\contentsline {subsection}{\numberline {20.1}Suffix sums and products}{230}{subsection.0.20.1}%
\contentsline {section}{\numberline {21}Two pointer}{232}{section.0.21}%
\contentsline {subsection}{\numberline {21.1}Two Sum II - Input Array Is Sorted}{232}{subsection.0.21.1}%
\contentsline {subsection}{\numberline {21.2}Is valid palindrome}{233}{subsection.0.21.2}%
\contentsline {section}{\numberline {22}Greedy algorithms}{234}{section.0.22}%
\contentsline {section}{\numberline {23}Subarray problems}{235}{section.0.23}%
\contentsline {subsection}{\numberline {23.1}Brute force subarray generation ($O(n^{2})$)}{235}{subsection.0.23.1}%
\contentsline {subsection}{\numberline {23.2}Max subarray sum: Kadane's algorithm ($O(n)$)}{235}{subsection.0.23.2}%
\contentsline {section}{\numberline {24}Divide and conquer}{236}{section.0.24}%
\contentsline {section}{\numberline {25}STL}{237}{section.0.25}%
\contentsline {subsection}{\numberline {25.1}<algorithm>}{237}{subsection.0.25.1}%
\contentsline {subsubsection}{\numberline {25.1.1}stable\_partition}{237}{subsubsection.0.25.1.1}%
\contentsline {subsubsection}{\numberline {25.1.2}partition}{237}{subsubsection.0.25.1.2}%
\contentsline {subsubsection}{\numberline {25.1.3}partition\_copy}{237}{subsubsection.0.25.1.3}%
\contentsline {subsubsection}{\numberline {25.1.4}is\_partitioned}{238}{subsubsection.0.25.1.4}%
\contentsline {subsubsection}{\numberline {25.1.5}partition\_pont}{238}{subsubsection.0.25.1.5}%
