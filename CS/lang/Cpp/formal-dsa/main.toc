\contentsline {section}{\numberline {1}Preface}{12}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{12}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{12}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{13}{section.0.2}%
\contentsline {section}{\numberline {3}Linked lists}{20}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Singly-linked lists}{20}{subsection.0.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Structure of the node}{20}{subsubsection.0.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}The list class/struct}{21}{subsubsection.0.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Interface of a singly linked list stack}{21}{subsubsection.0.3.1.3}%
\contentsline {subsubsection}{\numberline {3.1.4}Traversing}{22}{subsubsection.0.3.1.4}%
\contentsline {subsubsection}{\numberline {3.1.5}Printing}{23}{subsubsection.0.3.1.5}%
\contentsline {subsubsection}{\numberline {3.1.6}Printing in reverse}{24}{subsubsection.0.3.1.6}%
\contentsline {subsubsection}{\numberline {3.1.7}Getting the length}{25}{subsubsection.0.3.1.7}%
\contentsline {subsubsection}{\numberline {3.1.8}Clearing}{26}{subsubsection.0.3.1.8}%
\contentsline {subsubsection}{\numberline {3.1.9}Reversing}{27}{subsubsection.0.3.1.9}%
\contentsline {subsubsection}{\numberline {3.1.10}Pushing}{28}{subsubsection.0.3.1.10}%
\contentsline {subsubsection}{\numberline {3.1.11}Inserting}{29}{subsubsection.0.3.1.11}%
\contentsline {subsubsection}{\numberline {3.1.12}Popping}{30}{subsubsection.0.3.1.12}%
\contentsline {subsubsection}{\numberline {3.1.13}Erasing}{31}{subsubsection.0.3.1.13}%
\contentsline {subsubsection}{\numberline {3.1.14}Searching}{32}{subsubsection.0.3.1.14}%
\contentsline {subsection}{\numberline {3.2}Doubly-linked list}{33}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}Node structure}{33}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The list class}{33}{subsubsection.0.3.2.2}%
\contentsline {subsubsection}{\numberline {3.2.3}push\_back and push\_front}{34}{subsubsection.0.3.2.3}%
\contentsline {subsubsection}{\numberline {3.2.4}pop\_back and pop\_frot}{35}{subsubsection.0.3.2.4}%
\contentsline {subsubsection}{\numberline {3.2.5}Searching}{36}{subsubsection.0.3.2.5}%
\contentsline {section}{\numberline {4}Monotonic stack}{37}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Next greater element}{37}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Next smaller element}{38}{subsection.0.4.2}%
\contentsline {section}{\numberline {5}Recursion}{39}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Recursion vs iteration}{39}{subsection.0.5.1}%
\contentsline {subsection}{\numberline {5.2}Elementary recursion}{40}{subsection.0.5.2}%
\contentsline {subsection}{\numberline {5.3}Base cases}{40}{subsection.0.5.3}%
\contentsline {subsubsection}{\numberline {5.3.1}Factorials}{40}{subsubsection.0.5.3.1}%
\contentsline {subsubsection}{\numberline {5.3.2}Powers}{41}{subsubsection.0.5.3.2}%
\contentsline {subsection}{\numberline {5.4}Tail recursion}{42}{subsection.0.5.4}%
\contentsline {subsection}{\numberline {5.5}Indirect Recursion}{44}{subsection.0.5.5}%
\contentsline {subsection}{\numberline {5.6}Nested Recursion}{45}{subsection.0.5.6}%
\contentsline {subsection}{\numberline {5.7}Excessive Recursion}{45}{subsection.0.5.7}%
\contentsline {subsection}{\numberline {5.8}Backtracking}{47}{subsection.0.5.8}%
\contentsline {subsubsection}{\numberline {5.8.1}N-Queens}{48}{subsubsection.0.5.8.1}%
\contentsline {subsubsection}{\numberline {5.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{49}{subsubsection.0.5.8.2}%
\contentsline {subsubsection}{\numberline {5.8.3}Combinations}{53}{subsubsection.0.5.8.3}%
\contentsline {subsubsection}{\numberline {5.8.4}Combinations that sum to $m$}{54}{subsubsection.0.5.8.4}%
\contentsline {subsubsection}{\numberline {5.8.5}Permutations}{55}{subsubsection.0.5.8.5}%
\contentsline {subsection}{\numberline {5.9}Recursion in singly linked lists}{56}{subsection.0.5.9}%
\contentsline {subsubsection}{\numberline {5.9.1}Traversing}{56}{subsubsection.0.5.9.1}%
\contentsline {subsubsection}{\numberline {5.9.2}Printing}{56}{subsubsection.0.5.9.2}%
\contentsline {subsubsection}{\numberline {5.9.3}Printing in reverse}{56}{subsubsection.0.5.9.3}%
\contentsline {subsubsection}{\numberline {5.9.4}Getting the length}{57}{subsubsection.0.5.9.4}%
\contentsline {subsubsection}{\numberline {5.9.5}Clearing}{57}{subsubsection.0.5.9.5}%
\contentsline {subsubsection}{\numberline {5.9.6}Reversing}{58}{subsubsection.0.5.9.6}%
\contentsline {subsubsection}{\numberline {5.9.7}Pushing}{60}{subsubsection.0.5.9.7}%
\contentsline {subsubsection}{\numberline {5.9.8}Inserting}{61}{subsubsection.0.5.9.8}%
\contentsline {subsubsection}{\numberline {5.9.9}Popping}{62}{subsubsection.0.5.9.9}%
\contentsline {subsubsection}{\numberline {5.9.10}Erasing}{63}{subsubsection.0.5.9.10}%
\contentsline {subsubsection}{\numberline {5.9.11}Searching}{64}{subsubsection.0.5.9.11}%
\contentsline {section}{\numberline {6}More on backtracking}{65}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}(Power set) Subsets}{65}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Power set with duplicates}{66}{subsection.0.6.2}%
\contentsline {subsection}{\numberline {6.3}Generate permutations (Without swaps)}{67}{subsection.0.6.3}%
\contentsline {subsection}{\numberline {6.4}Permutations with repetition}{68}{subsection.0.6.4}%
\contentsline {subsection}{\numberline {6.5}Combinations with repetitions}{69}{subsection.0.6.5}%
\contentsline {subsection}{\numberline {6.6}Backtracking with pruning}{70}{subsection.0.6.6}%
\contentsline {section}{\numberline {7}The basics of Dynamic Programming (DP)}{71}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Key Concepts of DP}{71}{subsection.0.7.1}%
\contentsline {subsection}{\numberline {7.2}Bottom-up DP}{71}{subsection.0.7.2}%
\contentsline {subsubsection}{\numberline {7.2.1}Key Characteristics}{71}{subsubsection.0.7.2.1}%
\contentsline {subsubsection}{\numberline {7.2.2}Steps for Bottom-Up DP}{71}{subsubsection.0.7.2.2}%
\contentsline {subsection}{\numberline {7.3}Bottom-up DP: Fibonacci}{72}{subsection.0.7.3}%
\contentsline {subsection}{\numberline {7.4}Memoization (top down DP)}{72}{subsection.0.7.4}%
\contentsline {subsection}{\numberline {7.5}Top-down DP: Fibonacci}{73}{subsection.0.7.5}%
\contentsline {section}{\numberline {8}Dynamic programming}{74}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}LCS (longest common subsequence)}{74}{subsection.0.8.1}%
\contentsline {section}{\numberline {9}Binary trees}{75}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Terminology}{75}{subsection.0.9.1}%
\contentsline {subsection}{\numberline {9.2}Type of binary trees}{76}{subsection.0.9.2}%
\contentsline {subsection}{\numberline {9.3}Maximum height of a binary tree}{77}{subsection.0.9.3}%
\contentsline {subsubsection}{\numberline {9.3.1}Minimum height of a binary tree}{77}{subsubsection.0.9.3.1}%
\contentsline {subsubsection}{\numberline {9.3.2}Number of Leaves in a Binary Tree}{77}{subsubsection.0.9.3.2}%
\contentsline {subsubsection}{\numberline {9.3.3}Relationship Between Internal Nodes and Leaves:}{77}{subsubsection.0.9.3.3}%
\contentsline {subsubsection}{\numberline {9.3.4}Maximum Number of Nodes at Height h}{77}{subsubsection.0.9.3.4}%
\contentsline {subsubsection}{\numberline {9.3.5}Number of Edges in a Binary Tree:}{78}{subsubsection.0.9.3.5}%
\contentsline {subsection}{\numberline {9.4}Full trees}{79}{subsection.0.9.4}%
\contentsline {subsubsection}{\numberline {9.4.1}Number of leaves}{79}{subsubsection.0.9.4.1}%
\contentsline {subsubsection}{\numberline {9.4.2}Number of nodes}{80}{subsubsection.0.9.4.2}%
\contentsline {subsubsection}{\numberline {9.4.3}Number of internal nodes}{80}{subsubsection.0.9.4.3}%
\contentsline {subsection}{\numberline {9.5}Complete Binary Tree}{81}{subsection.0.9.5}%
\contentsline {subsubsection}{\numberline {9.5.1}Number of nodes}{81}{subsubsection.0.9.5.1}%
\contentsline {subsubsection}{\numberline {9.5.2}Height}{81}{subsubsection.0.9.5.2}%
\contentsline {subsubsection}{\numberline {9.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{81}{subsubsection.0.9.5.3}%
\contentsline {subsubsection}{\numberline {9.5.4}Number of internal nodes}{82}{subsubsection.0.9.5.4}%
\contentsline {subsubsection}{\numberline {9.5.5}Parent and Child Relationships in a Complete Binary Tree}{82}{subsubsection.0.9.5.5}%
\contentsline {subsection}{\numberline {9.6}Perfect binary tree}{83}{subsection.0.9.6}%
\contentsline {subsubsection}{\numberline {9.6.1}Number of Nodes}{83}{subsubsection.0.9.6.1}%
\contentsline {subsubsection}{\numberline {9.6.2}Number of Leaf Nodes}{83}{subsubsection.0.9.6.2}%
\contentsline {subsubsection}{\numberline {9.6.3}Height of the Tree}{83}{subsubsection.0.9.6.3}%
\contentsline {subsubsection}{\numberline {9.6.4}Number of Internal Nodes}{83}{subsubsection.0.9.6.4}%
\contentsline {subsubsection}{\numberline {9.6.5}Depth}{83}{subsubsection.0.9.6.5}%
\contentsline {subsection}{\numberline {9.7}Invert a binary tree}{84}{subsection.0.9.7}%
\contentsline {subsubsection}{\numberline {9.7.1}Swap node helper method}{84}{subsubsection.0.9.7.1}%
\contentsline {subsubsection}{\numberline {9.7.2}Level order (BFS) solution}{84}{subsubsection.0.9.7.2}%
\contentsline {subsubsection}{\numberline {9.7.3}Recursive postorder (DFS)}{85}{subsubsection.0.9.7.3}%
\contentsline {section}{\numberline {10}Applications of binary trees}{86}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Binary search trees}{86}{subsection.0.10.1}%
\contentsline {subsubsection}{\numberline {10.1.1}Interface}{86}{subsubsection.0.10.1.1}%
\contentsline {subsubsection}{\numberline {10.1.2}Traversals}{87}{subsubsection.0.10.1.2}%
\contentsline {paragraph}{\numberline {10.1.2.1}Level order}{87}{paragraph.0.10.1.2.1}%
\contentsline {paragraph}{\numberline {10.1.2.2}Preorder}{88}{paragraph.0.10.1.2.2}%
\contentsline {paragraph}{\numberline {10.1.2.3}Inorder}{88}{paragraph.0.10.1.2.3}%
\contentsline {paragraph}{\numberline {10.1.2.4}Postorder}{90}{paragraph.0.10.1.2.4}%
\contentsline {subsubsection}{\numberline {10.1.3}Successor of a node}{90}{subsubsection.0.10.1.3}%
\contentsline {subsubsection}{\numberline {10.1.4}Predecessor}{91}{subsubsection.0.10.1.4}%
\contentsline {subsubsection}{\numberline {10.1.5}The node}{91}{subsubsection.0.10.1.5}%
\contentsline {subsubsection}{\numberline {10.1.6}The class}{91}{subsubsection.0.10.1.6}%
\contentsline {subsubsection}{\numberline {10.1.7}Recursive Insertion}{92}{subsubsection.0.10.1.7}%
\contentsline {subsubsection}{\numberline {10.1.8}A better recursive insert}{93}{subsubsection.0.10.1.8}%
\contentsline {subsubsection}{\numberline {10.1.9}Iterative insert}{94}{subsubsection.0.10.1.9}%
\contentsline {subsubsection}{\numberline {10.1.10}Recursive removing}{95}{subsubsection.0.10.1.10}%
\contentsline {subsubsection}{\numberline {10.1.11}Clearing}{97}{subsubsection.0.10.1.11}%
\contentsline {subsubsection}{\numberline {10.1.12}Counting the height of the tree (root)}{98}{subsubsection.0.10.1.12}%
\contentsline {subsubsection}{\numberline {10.1.13}Counting the height of a node}{98}{subsubsection.0.10.1.13}%
\contentsline {subsubsection}{\numberline {10.1.14}Getting the depth of the node}{99}{subsubsection.0.10.1.14}%
\contentsline {subsubsection}{\numberline {10.1.15}Counting the number of nodes}{100}{subsubsection.0.10.1.15}%
\contentsline {subsubsection}{\numberline {10.1.16}Comparison traversals}{100}{subsubsection.0.10.1.16}%
\contentsline {subsubsection}{\numberline {10.1.17}Finding the smallest and largest values}{102}{subsubsection.0.10.1.17}%
\contentsline {subsubsection}{\numberline {10.1.18}Getting the widths of a bst}{103}{subsubsection.0.10.1.18}%
\contentsline {subsubsection}{\numberline {10.1.19}Degenerate Binary Search trees}{105}{subsubsection.0.10.1.19}%
\contentsline {subsubsection}{\numberline {10.1.20}Verifying a binary search tree}{105}{subsubsection.0.10.1.20}%
\contentsline {subsubsection}{\numberline {10.1.21}Complexities}{106}{subsubsection.0.10.1.21}%
\contentsline {subsection}{\numberline {10.2}Adelson-Velsky and Landis Trees (AVL trees)}{107}{subsection.0.10.2}%
\contentsline {subsubsection}{\numberline {10.2.1}Definition}{107}{subsubsection.0.10.2.1}%
\contentsline {subsubsection}{\numberline {10.2.2}AVL Nodes}{108}{subsubsection.0.10.2.2}%
\contentsline {subsubsection}{\numberline {10.2.3}Storing the height}{108}{subsubsection.0.10.2.3}%
\contentsline {subsubsection}{\numberline {10.2.4}Defining balance factors in C++ with enums}{109}{subsubsection.0.10.2.4}%
\contentsline {subsubsection}{\numberline {10.2.5}Defining balance factors with a height calculation}{109}{subsubsection.0.10.2.5}%
\contentsline {subsubsection}{\numberline {10.2.6}Interface}{110}{subsubsection.0.10.2.6}%
\contentsline {subsubsection}{\numberline {10.2.7}Balancing an AVL tree}{110}{subsubsection.0.10.2.7}%
\contentsline {subsubsection}{\numberline {10.2.8}Rotations: Right tree}{111}{subsubsection.0.10.2.8}%
\contentsline {paragraph}{\numberline {10.2.8.1}Case 1: Right higher}{111}{paragraph.0.10.2.8.1}%
\contentsline {paragraph}{\numberline {10.2.8.2}Case 2: Left higher}{114}{paragraph.0.10.2.8.2}%
\contentsline {subsubsection}{\numberline {10.2.9}C++ Rotations}{116}{subsubsection.0.10.2.9}%
\contentsline {subsubsection}{\numberline {10.2.10}Balancing}{118}{subsubsection.0.10.2.10}%
\contentsline {subsubsection}{\numberline {10.2.11}Insertions}{119}{subsubsection.0.10.2.11}%
\contentsline {subsubsection}{\numberline {10.2.12}Removing nodes}{120}{subsubsection.0.10.2.12}%
\contentsline {subsection}{\numberline {10.3}Red-black trees}{122}{subsection.0.10.3}%
\contentsline {subsubsection}{\numberline {10.3.1}Rotations}{124}{subsubsection.0.10.3.1}%
\contentsline {subsubsection}{\numberline {10.3.2}Inserting}{126}{subsubsection.0.10.3.2}%
\contentsline {subsubsection}{\numberline {10.3.3}Deletion}{131}{subsubsection.0.10.3.3}%
\contentsline {subsubsection}{\numberline {10.3.4}C++ implementation}{135}{subsubsection.0.10.3.4}%
\contentsline {paragraph}{\numberline {10.3.4.1}The node structure}{135}{paragraph.0.10.3.4.1}%
\contentsline {paragraph}{\numberline {10.3.4.2}The tree class and defining nil}{135}{paragraph.0.10.3.4.2}%
\contentsline {paragraph}{\numberline {10.3.4.3}Rotation methods}{136}{paragraph.0.10.3.4.3}%
\contentsline {paragraph}{\numberline {10.3.4.4}Insert}{137}{paragraph.0.10.3.4.4}%
\contentsline {paragraph}{\numberline {10.3.4.5}Insert fixup}{138}{paragraph.0.10.3.4.5}%
\contentsline {subsection}{\numberline {10.4}State space tree}{139}{subsection.0.10.4}%
\contentsline {section}{\numberline {11}Heaps and Priority Queues (Zero based)}{140}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Max and Min heaps}{142}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}Heapify an array}{142}{subsection.0.11.2}%
\contentsline {subsection}{\numberline {11.3}Min-heap in c++}{143}{subsection.0.11.3}%
\contentsline {subsection}{\numberline {11.4}Max-heap in c++}{144}{subsection.0.11.4}%
\contentsline {subsection}{\numberline {11.5}Percolating}{145}{subsection.0.11.5}%
\contentsline {subsubsection}{\numberline {11.5.1}Percolate up}{145}{subsubsection.0.11.5.1}%
\contentsline {subsubsection}{\numberline {11.5.2}Percolate down}{146}{subsubsection.0.11.5.2}%
\contentsline {subsection}{\numberline {11.6}Inserting into a heap}{147}{subsection.0.11.6}%
\contentsline {subsection}{\numberline {11.7}Removing the root}{148}{subsection.0.11.7}%
\contentsline {subsection}{\numberline {11.8}Removing an arbitary node}{149}{subsection.0.11.8}%
\contentsline {subsection}{\numberline {11.9}Priority queues}{150}{subsection.0.11.9}%
\contentsline {subsubsection}{\numberline {11.9.1}Interface}{150}{subsubsection.0.11.9.1}%
\contentsline {subsubsection}{\numberline {11.9.2}Insert, pop, and top}{151}{subsubsection.0.11.9.2}%
\contentsline {subsubsection}{\numberline {11.9.3}Size and Empty}{152}{subsubsection.0.11.9.3}%
\contentsline {subsection}{\numberline {11.10}Median of a Stream}{153}{subsection.0.11.10}%
\contentsline {section}{\numberline {12}Sorting}{154}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Bubble, selection, insertion}{154}{subsection.0.12.1}%
\contentsline {subsubsection}{\numberline {12.1.1}Bubble sort}{154}{subsubsection.0.12.1.1}%
\contentsline {paragraph}{\numberline {12.1.1.1}Complexity}{155}{paragraph.0.12.1.1.1}%
\contentsline {subsubsection}{\numberline {12.1.2}Selection sort}{156}{subsubsection.0.12.1.2}%
\contentsline {paragraph}{\numberline {12.1.2.1}Complexity}{156}{paragraph.0.12.1.2.1}%
\contentsline {subsubsection}{\numberline {12.1.3}Insertion sort}{157}{subsubsection.0.12.1.3}%
\contentsline {paragraph}{\numberline {12.1.3.1}Complexity}{158}{paragraph.0.12.1.3.1}%
\contentsline {subsection}{\numberline {12.2}Heap sort}{159}{subsection.0.12.2}%
\contentsline {subsubsection}{\numberline {12.2.1}Complexity}{159}{subsubsection.0.12.2.1}%
\contentsline {subsection}{\numberline {12.3}BST Sort}{160}{subsection.0.12.3}%
\contentsline {subsubsection}{\numberline {12.3.1}Insert}{160}{subsubsection.0.12.3.1}%
\contentsline {subsubsection}{\numberline {12.3.2}The inorder traversal}{160}{subsubsection.0.12.3.2}%
\contentsline {subsubsection}{\numberline {12.3.3}The BST sort function}{161}{subsubsection.0.12.3.3}%
\contentsline {subsubsection}{\numberline {12.3.4}Inplace sorting}{162}{subsubsection.0.12.3.4}%
\contentsline {subsubsection}{\numberline {12.3.5}Complexity}{162}{subsubsection.0.12.3.5}%
\contentsline {subsection}{\numberline {12.4}Quick sort}{163}{subsection.0.12.4}%
\contentsline {subsubsection}{\numberline {12.4.1}Partitioning}{163}{subsubsection.0.12.4.1}%
\contentsline {subsubsection}{\numberline {12.4.2}The quick sort procedure}{164}{subsubsection.0.12.4.2}%
\contentsline {subsubsection}{\numberline {12.4.3}A better partition}{166}{subsubsection.0.12.4.3}%
\contentsline {subsubsection}{\numberline {12.4.4}Median of three partition}{166}{subsubsection.0.12.4.4}%
\contentsline {subsubsection}{\numberline {12.4.5}Quicksort with iterators}{168}{subsubsection.0.12.4.5}%
\contentsline {section}{\numberline {13}Multi-way (m-way) search trees}{169}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Multi-way Searching}{169}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}2-4 (2-3-4) Trees}{170}{subsection.0.13.2}%
\contentsline {subsubsection}{\numberline {13.2.1}Insertion}{170}{subsubsection.0.13.2.1}%
\contentsline {subsubsection}{\numberline {13.2.2}Removal}{171}{subsubsection.0.13.2.2}%
\contentsline {subsubsection}{\numberline {13.2.3}Properties}{173}{subsubsection.0.13.2.3}%
\contentsline {subsection}{\numberline {13.3}B-trees}{174}{subsection.0.13.3}%
\contentsline {section}{\numberline {14}Hashing (hash tables)}{175}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Direct-address table}{175}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}Hash tables}{176}{subsection.0.14.2}%
\contentsline {subsection}{\numberline {14.3}Independent uniform hashing}{177}{subsection.0.14.3}%
\contentsline {subsection}{\numberline {14.4}Collision resolution by chaining}{177}{subsection.0.14.4}%
\contentsline {subsection}{\numberline {14.5}Analysis of hashing with chaining}{178}{subsection.0.14.5}%
\contentsline {subsection}{\numberline {14.6}Hash functions}{178}{subsection.0.14.6}%
\contentsline {subsubsection}{\numberline {14.6.1}Static hashing}{179}{subsubsection.0.14.6.1}%
\contentsline {subsubsection}{\numberline {14.6.2}The division method}{179}{subsubsection.0.14.6.2}%
\contentsline {subsubsection}{\numberline {14.6.3}The multiplication method}{180}{subsubsection.0.14.6.3}%
\contentsline {subsection}{\numberline {14.7}Open addressing}{180}{subsection.0.14.7}%
\contentsline {subsubsection}{\numberline {14.7.1}Linear probing}{180}{subsubsection.0.14.7.1}%
\contentsline {subsubsection}{\numberline {14.7.2}Quadratic probing}{181}{subsubsection.0.14.7.2}%
\contentsline {subsubsection}{\numberline {14.7.3}Deletion problem in open addressing}{181}{subsubsection.0.14.7.3}%
\contentsline {subsubsection}{\numberline {14.7.4}Tombstoning}{181}{subsubsection.0.14.7.4}%
\contentsline {subsubsection}{\numberline {14.7.5}Lazy deletion}{182}{subsubsection.0.14.7.5}%
\contentsline {subsubsection}{\numberline {14.7.6}Rehashing}{182}{subsubsection.0.14.7.6}%
\contentsline {subsection}{\numberline {14.8}Load factor}{183}{subsection.0.14.8}%
\contentsline {subsection}{\numberline {14.9}Static hashing}{183}{subsection.0.14.9}%
\contentsline {subsection}{\numberline {14.10}Static linear hashing}{183}{subsection.0.14.10}%
\contentsline {subsection}{\numberline {14.11}Static hashing with linear probe implementation}{184}{subsection.0.14.11}%
\contentsline {subsubsection}{\numberline {14.11.1}Interface}{184}{subsubsection.0.14.11.1}%
\contentsline {subsubsection}{\numberline {14.11.2}The basics}{184}{subsubsection.0.14.11.2}%
\contentsline {subsubsection}{\numberline {14.11.3}The hash function}{184}{subsubsection.0.14.11.3}%
\contentsline {subsubsection}{\numberline {14.11.4}Inserts}{185}{subsubsection.0.14.11.4}%
\contentsline {subsubsection}{\numberline {14.11.5}Searching}{186}{subsubsection.0.14.11.5}%
\contentsline {subsubsection}{\numberline {14.11.6}Removing}{186}{subsubsection.0.14.11.6}%
\contentsline {subsubsection}{\numberline {14.11.7}Searching and removing with tombstones}{186}{subsubsection.0.14.11.7}%
\contentsline {subsection}{\numberline {14.12}Static hashing with quadratic probing implementation}{189}{subsection.0.14.12}%
\contentsline {subsubsection}{\numberline {14.12.1}Inserting}{189}{subsubsection.0.14.12.1}%
\contentsline {subsubsection}{\numberline {14.12.2}Searching}{190}{subsubsection.0.14.12.2}%
\contentsline {subsubsection}{\numberline {14.12.3}Removing}{191}{subsubsection.0.14.12.3}%
\contentsline {subsection}{\numberline {14.13}Static hashing with chaining implementation}{192}{subsection.0.14.13}%
\contentsline {subsubsection}{\numberline {14.13.1}The basics}{192}{subsubsection.0.14.13.1}%
\contentsline {subsubsection}{\numberline {14.13.2}Inserting}{192}{subsubsection.0.14.13.2}%
\contentsline {subsubsection}{\numberline {14.13.3}Searching}{192}{subsubsection.0.14.13.3}%
\contentsline {subsubsection}{\numberline {14.13.4}Removing}{193}{subsubsection.0.14.13.4}%
\contentsline {subsection}{\numberline {14.14}Injective hashing}{194}{subsection.0.14.14}%
\contentsline {subsection}{\numberline {14.15}Perfect hashing}{194}{subsection.0.14.15}%
\contentsline {section}{\numberline {15}Implementing an unordered\_map}{195}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Fields}{195}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}Interface}{195}{subsection.0.15.2}%
\contentsline {subsection}{\numberline {15.3}Public methods: Hash and rehash}{196}{subsection.0.15.3}%
\contentsline {subsection}{\numberline {15.4}Inserting and erasing}{196}{subsection.0.15.4}%
\contentsline {subsubsection}{\numberline {15.4.1}Insertion}{196}{subsubsection.0.15.4.1}%
\contentsline {subsubsection}{\numberline {15.4.2}Erasing}{197}{subsubsection.0.15.4.2}%
\contentsline {subsection}{\numberline {15.5}Finding and checking if the map is empty}{197}{subsection.0.15.5}%
\contentsline {subsubsection}{\numberline {15.5.1}Finding}{197}{subsubsection.0.15.5.1}%
\contentsline {subsubsection}{\numberline {15.5.2}Empty}{197}{subsubsection.0.15.5.2}%
\contentsline {subsection}{\numberline {15.6}The subscript operator}{198}{subsection.0.15.6}%
\contentsline {section}{\numberline {16}Table indexing and row-major order}{199}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Row-major order}{199}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Row-major order in c++}{200}{subsection.0.16.2}%
\contentsline {section}{\numberline {17}Graphs}{201}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Simple Graph}{201}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Undirected graph}{201}{subsection.0.17.2}%
\contentsline {subsection}{\numberline {17.3}Directed graph}{201}{subsection.0.17.3}%
\contentsline {subsection}{\numberline {17.4}Weighted Graph}{201}{subsection.0.17.4}%
\contentsline {subsection}{\numberline {17.5}Complete Graph}{202}{subsection.0.17.5}%
\contentsline {subsection}{\numberline {17.6}More terms}{202}{subsection.0.17.6}%
\contentsline {subsection}{\numberline {17.7}Graph representations}{202}{subsection.0.17.7}%
\contentsline {subsection}{\numberline {17.8}Interface of adjacency lists and matrices}{203}{subsection.0.17.8}%
\contentsline {subsection}{\numberline {17.9}Complexities for adjacency operations}{203}{subsection.0.17.9}%
\contentsline {subsection}{\numberline {17.10}Graph traversal/search}{203}{subsection.0.17.10}%
\contentsline {subsubsection}{\numberline {17.10.1}Breadth-first-traversal}{204}{subsubsection.0.17.10.1}%
\contentsline {subsubsection}{\numberline {17.10.2}Depth-first traversal}{204}{subsubsection.0.17.10.2}%
\contentsline {subsection}{\numberline {17.11}Shortest path problems}{204}{subsection.0.17.11}%
\contentsline {subsubsection}{\numberline {17.11.1}Dijkstra's shortest path algorithm}{205}{subsubsection.0.17.11.1}%
\contentsline {subsubsection}{\numberline {17.11.2}Dijkstras's algorithm in c++}{206}{subsubsection.0.17.11.2}%
\contentsline {subsection}{\numberline {17.12}Undirected graph in c++ with an adjacency list}{208}{subsection.0.17.12}%
\contentsline {subsubsection}{\numberline {17.12.1}Internal structure}{208}{subsubsection.0.17.12.1}%
\contentsline {subsubsection}{\numberline {17.12.2}Interface}{208}{subsubsection.0.17.12.2}%
\contentsline {subsubsection}{\numberline {17.12.3}Adding edges}{208}{subsubsection.0.17.12.3}%
\contentsline {subsubsection}{\numberline {17.12.4}Adding nodes}{209}{subsubsection.0.17.12.4}%
\contentsline {subsubsection}{\numberline {17.12.5}Getting the neighbors}{209}{subsubsection.0.17.12.5}%
\contentsline {subsubsection}{\numberline {17.12.6}Checking if an edge exists}{209}{subsubsection.0.17.12.6}%
\contentsline {subsubsection}{\numberline {17.12.7}Breadth first traversal}{210}{subsubsection.0.17.12.7}%
\contentsline {subsubsection}{\numberline {17.12.8}Breadth first search to find the shortest path}{211}{subsubsection.0.17.12.8}%
\contentsline {subsubsection}{\numberline {17.12.9}Depth first traversal}{212}{subsubsection.0.17.12.9}%
\contentsline {subsection}{\numberline {17.13}Undirected graph in c++ with adjacency matrix}{213}{subsection.0.17.13}%
\contentsline {subsubsection}{\numberline {17.13.1}Setup}{213}{subsubsection.0.17.13.1}%
\contentsline {subsubsection}{\numberline {17.13.2}Adding an edge}{213}{subsubsection.0.17.13.2}%
\contentsline {subsubsection}{\numberline {17.13.3}Removing an edge}{213}{subsubsection.0.17.13.3}%
\contentsline {subsubsection}{\numberline {17.13.4}Getting neighbors}{213}{subsubsection.0.17.13.4}%
\contentsline {subsubsection}{\numberline {17.13.5}Checking if an edge exists}{214}{subsubsection.0.17.13.5}%
\contentsline {subsubsection}{\numberline {17.13.6}Breadth-first traversal}{215}{subsubsection.0.17.13.6}%
\contentsline {subsubsection}{\numberline {17.13.7}Depth-first traversal}{216}{subsubsection.0.17.13.7}%
\contentsline {subsection}{\numberline {17.14}Weighted graph in C++ with an adjacency matrix}{217}{subsection.0.17.14}%
\contentsline {subsubsection}{\numberline {17.14.1}Setup}{217}{subsubsection.0.17.14.1}%
\contentsline {subsubsection}{\numberline {17.14.2}Adding and removing edges}{217}{subsubsection.0.17.14.2}%
\contentsline {subsubsection}{\numberline {17.14.3}Dijkstra}{218}{subsubsection.0.17.14.3}%
\contentsline {subsection}{\numberline {17.15}Weighted graph in c++ with structure}{219}{subsection.0.17.15}%
\contentsline {subsection}{\numberline {17.16}Topological sort (DFS approach)}{220}{subsection.0.17.16}%
\contentsline {subsubsection}{\numberline {17.16.1}C++ Setup}{220}{subsubsection.0.17.16.1}%
\contentsline {subsubsection}{\numberline {17.16.2}Topological sort with dfs helper}{220}{subsubsection.0.17.16.2}%
\contentsline {subsection}{\numberline {17.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{222}{subsection.0.17.17}%
\contentsline {subsubsection}{\numberline {17.17.1}Class structure and Fields}{222}{subsubsection.0.17.17.1}%
\contentsline {subsubsection}{\numberline {17.17.2}Find}{222}{subsubsection.0.17.17.2}%
\contentsline {subsubsection}{\numberline {17.17.3}Union}{223}{subsubsection.0.17.17.3}%
\contentsline {subsubsection}{\numberline {17.17.4}Find and union optimizations}{223}{subsubsection.0.17.17.4}%
\contentsline {subsection}{\numberline {17.18}Using UnionFind}{224}{subsection.0.17.18}%
\contentsline {subsection}{\numberline {17.19}Minimum spanning trees}{225}{subsection.0.17.19}%
\contentsline {subsubsection}{\numberline {17.19.1}Kruskal's algorithm}{225}{subsubsection.0.17.19.1}%
\contentsline {section}{\numberline {18}Prefix and suffix sums, products, etc}{228}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Suffix sums and products}{228}{subsection.0.18.1}%
\contentsline {section}{\numberline {19}Two pointer}{230}{section.0.19}%
\contentsline {subsection}{\numberline {19.1}Two Sum II - Input Array Is Sorted}{230}{subsection.0.19.1}%
\contentsline {subsection}{\numberline {19.2}Is valid palindrome}{231}{subsection.0.19.2}%
\contentsline {section}{\numberline {20}Greedy algorithms}{232}{section.0.20}%
\contentsline {section}{\numberline {21}Subarray problems}{233}{section.0.21}%
\contentsline {subsection}{\numberline {21.1}Brute force subarray generation ($O(n^{2})$)}{233}{subsection.0.21.1}%
\contentsline {subsection}{\numberline {21.2}Max subarray sum: Kadane's algorithm ($O(n)$)}{233}{subsection.0.21.2}%
\contentsline {section}{\numberline {22}Divide and conquer}{234}{section.0.22}%
\contentsline {section}{\numberline {23}Math algorithms}{235}{section.0.23}%
\contentsline {subsection}{\numberline {23.1}Euclidean GCD Algorithm}{235}{subsection.0.23.1}%
\contentsline {subsubsection}{\numberline {23.1.1}GCD of some integer collection}{235}{subsubsection.0.23.1.1}%
\contentsline {subsection}{\numberline {23.2}Fibonacci numbers in constant time}{236}{subsection.0.23.2}%
\contentsline {subsection}{\numberline {23.3}Sterlings factorial approximation}{236}{subsection.0.23.3}%
\contentsline {subsection}{\numberline {23.4}square roots}{236}{subsection.0.23.4}%
\contentsline {subsubsection}{\numberline {23.4.1}Naive $O(\sqrt {n})$}{236}{subsubsection.0.23.4.1}%
\contentsline {subsubsection}{\numberline {23.4.2}$O(\lg (n))$ binary search approach}{237}{subsubsection.0.23.4.2}%
\contentsline {subsection}{\numberline {23.5}Fast exponentiation ($O(\lg (n))$)}{238}{subsection.0.23.5}%
\contentsline {subsubsection}{\numberline {23.5.1}Recursive}{238}{subsubsection.0.23.5.1}%
\contentsline {subsection}{\numberline {23.6}Bitwise power of two}{240}{subsection.0.23.6}%
\contentsline {section}{\numberline {24}Number Theory}{241}{section.0.24}%
\contentsline {section}{\numberline {25}STL}{242}{section.0.25}%
\contentsline {subsection}{\numberline {25.1}<algorithm>}{242}{subsection.0.25.1}%
\contentsline {subsubsection}{\numberline {25.1.1}stable\_partition}{242}{subsubsection.0.25.1.1}%
\contentsline {subsubsection}{\numberline {25.1.2}partition}{242}{subsubsection.0.25.1.2}%
\contentsline {subsubsection}{\numberline {25.1.3}partition\_copy}{242}{subsubsection.0.25.1.3}%
\contentsline {subsubsection}{\numberline {25.1.4}is\_partitioned}{243}{subsubsection.0.25.1.4}%
\contentsline {subsubsection}{\numberline {25.1.5}partition\_pont}{243}{subsubsection.0.25.1.5}%
