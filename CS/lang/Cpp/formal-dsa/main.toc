\contentsline {section}{\numberline {1}Preface}{13}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{13}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{13}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{14}{section.0.2}%
\contentsline {section}{\numberline {3}Binary search}{21}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Avoiding overflow with suitable mid calculations}{21}{subsection.0.3.1}%
\contentsline {subsection}{\numberline {3.2}The while(left < right), left = mid+1, right = mid pattern}{21}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}First bad version}{22}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The almost equivalent form}{23}{subsubsection.0.3.2.2}%
\contentsline {subsection}{\numberline {3.3}Search Insert Position}{23}{subsection.0.3.3}%
\contentsline {subsection}{\numberline {3.4}Binary search on two arrays}{25}{subsection.0.3.4}%
\contentsline {subsubsection}{\numberline {3.4.1}Minimum common value}{25}{subsubsection.0.3.4.1}%
\contentsline {subsection}{\numberline {3.5}Advanced application}{26}{subsection.0.3.5}%
\contentsline {section}{\numberline {4}Sliding window}{27}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Types of Sliding Window Problems}{27}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Minimum Recolors to Get K Consecutive Black Blocks}{27}{subsection.0.4.2}%
\contentsline {section}{\numberline {5}Linked lists}{29}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Singly-linked lists}{29}{subsection.0.5.1}%
\contentsline {subsubsection}{\numberline {5.1.1}Structure of the node}{29}{subsubsection.0.5.1.1}%
\contentsline {subsubsection}{\numberline {5.1.2}The list class/struct}{30}{subsubsection.0.5.1.2}%
\contentsline {subsubsection}{\numberline {5.1.3}Interface of a singly linked list stack}{30}{subsubsection.0.5.1.3}%
\contentsline {subsubsection}{\numberline {5.1.4}Traversing}{31}{subsubsection.0.5.1.4}%
\contentsline {subsubsection}{\numberline {5.1.5}Printing}{32}{subsubsection.0.5.1.5}%
\contentsline {subsubsection}{\numberline {5.1.6}Printing in reverse}{33}{subsubsection.0.5.1.6}%
\contentsline {subsubsection}{\numberline {5.1.7}Getting the length}{34}{subsubsection.0.5.1.7}%
\contentsline {subsubsection}{\numberline {5.1.8}Clearing}{35}{subsubsection.0.5.1.8}%
\contentsline {subsubsection}{\numberline {5.1.9}Reversing}{36}{subsubsection.0.5.1.9}%
\contentsline {subsubsection}{\numberline {5.1.10}Pushing}{37}{subsubsection.0.5.1.10}%
\contentsline {subsubsection}{\numberline {5.1.11}Inserting}{38}{subsubsection.0.5.1.11}%
\contentsline {subsubsection}{\numberline {5.1.12}Popping}{39}{subsubsection.0.5.1.12}%
\contentsline {subsubsection}{\numberline {5.1.13}Erasing}{40}{subsubsection.0.5.1.13}%
\contentsline {subsubsection}{\numberline {5.1.14}Searching}{41}{subsubsection.0.5.1.14}%
\contentsline {subsection}{\numberline {5.2}Doubly-linked list}{42}{subsection.0.5.2}%
\contentsline {subsubsection}{\numberline {5.2.1}Node structure}{42}{subsubsection.0.5.2.1}%
\contentsline {subsubsection}{\numberline {5.2.2}The list class}{42}{subsubsection.0.5.2.2}%
\contentsline {subsubsection}{\numberline {5.2.3}push\_back and push\_front}{43}{subsubsection.0.5.2.3}%
\contentsline {subsubsection}{\numberline {5.2.4}pop\_back and pop\_frot}{44}{subsubsection.0.5.2.4}%
\contentsline {subsubsection}{\numberline {5.2.5}Searching}{45}{subsubsection.0.5.2.5}%
\contentsline {section}{\numberline {6}Monotonic stack}{46}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Next greater element}{46}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Next smaller element}{47}{subsection.0.6.2}%
\contentsline {section}{\numberline {7}Recursion}{48}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Recursion vs iteration}{48}{subsection.0.7.1}%
\contentsline {subsection}{\numberline {7.2}Elementary recursion}{49}{subsection.0.7.2}%
\contentsline {subsection}{\numberline {7.3}Base cases}{49}{subsection.0.7.3}%
\contentsline {subsubsection}{\numberline {7.3.1}Factorials}{49}{subsubsection.0.7.3.1}%
\contentsline {subsubsection}{\numberline {7.3.2}Powers}{50}{subsubsection.0.7.3.2}%
\contentsline {subsection}{\numberline {7.4}Tail recursion}{51}{subsection.0.7.4}%
\contentsline {subsection}{\numberline {7.5}Indirect Recursion}{53}{subsection.0.7.5}%
\contentsline {subsection}{\numberline {7.6}Nested Recursion}{54}{subsection.0.7.6}%
\contentsline {subsection}{\numberline {7.7}Excessive Recursion}{54}{subsection.0.7.7}%
\contentsline {subsection}{\numberline {7.8}Backtracking}{56}{subsection.0.7.8}%
\contentsline {subsubsection}{\numberline {7.8.1}N-Queens}{57}{subsubsection.0.7.8.1}%
\contentsline {subsubsection}{\numberline {7.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{58}{subsubsection.0.7.8.2}%
\contentsline {subsubsection}{\numberline {7.8.3}Combinations}{62}{subsubsection.0.7.8.3}%
\contentsline {subsubsection}{\numberline {7.8.4}Combinations that sum to $m$}{63}{subsubsection.0.7.8.4}%
\contentsline {subsubsection}{\numberline {7.8.5}Permutations}{64}{subsubsection.0.7.8.5}%
\contentsline {subsection}{\numberline {7.9}Recursion in singly linked lists}{65}{subsection.0.7.9}%
\contentsline {subsubsection}{\numberline {7.9.1}Traversing}{65}{subsubsection.0.7.9.1}%
\contentsline {subsubsection}{\numberline {7.9.2}Printing}{65}{subsubsection.0.7.9.2}%
\contentsline {subsubsection}{\numberline {7.9.3}Printing in reverse}{65}{subsubsection.0.7.9.3}%
\contentsline {subsubsection}{\numberline {7.9.4}Getting the length}{66}{subsubsection.0.7.9.4}%
\contentsline {subsubsection}{\numberline {7.9.5}Clearing}{66}{subsubsection.0.7.9.5}%
\contentsline {subsubsection}{\numberline {7.9.6}Reversing}{67}{subsubsection.0.7.9.6}%
\contentsline {subsubsection}{\numberline {7.9.7}Pushing}{69}{subsubsection.0.7.9.7}%
\contentsline {subsubsection}{\numberline {7.9.8}Inserting}{70}{subsubsection.0.7.9.8}%
\contentsline {subsubsection}{\numberline {7.9.9}Popping}{71}{subsubsection.0.7.9.9}%
\contentsline {subsubsection}{\numberline {7.9.10}Erasing}{72}{subsubsection.0.7.9.10}%
\contentsline {subsubsection}{\numberline {7.9.11}Searching}{73}{subsubsection.0.7.9.11}%
\contentsline {section}{\numberline {8}More on backtracking}{74}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}(Power set) Subsets}{74}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Power set with duplicates}{75}{subsection.0.8.2}%
\contentsline {subsection}{\numberline {8.3}Generate permutations (Without swaps)}{76}{subsection.0.8.3}%
\contentsline {subsection}{\numberline {8.4}Permutations with repetition}{77}{subsection.0.8.4}%
\contentsline {subsection}{\numberline {8.5}Combinations with repetitions}{78}{subsection.0.8.5}%
\contentsline {subsection}{\numberline {8.6}Backtracking with pruning}{79}{subsection.0.8.6}%
\contentsline {section}{\numberline {9}The basics of Dynamic Programming (DP)}{80}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Key Concepts of DP}{80}{subsection.0.9.1}%
\contentsline {subsection}{\numberline {9.2}Bottom-up DP}{80}{subsection.0.9.2}%
\contentsline {subsubsection}{\numberline {9.2.1}Key Characteristics}{80}{subsubsection.0.9.2.1}%
\contentsline {subsubsection}{\numberline {9.2.2}Steps for Bottom-Up DP}{80}{subsubsection.0.9.2.2}%
\contentsline {subsection}{\numberline {9.3}Bottom-up DP: Fibonacci}{81}{subsection.0.9.3}%
\contentsline {subsection}{\numberline {9.4}Memoization (top down DP)}{81}{subsection.0.9.4}%
\contentsline {subsection}{\numberline {9.5}Top-down DP: Fibonacci}{82}{subsection.0.9.5}%
\contentsline {section}{\numberline {10}Dynamic programming}{83}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}LCS (longest common subsequence)}{83}{subsection.0.10.1}%
\contentsline {section}{\numberline {11}Binary trees}{84}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Terminology}{84}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}Type of binary trees}{85}{subsection.0.11.2}%
\contentsline {subsection}{\numberline {11.3}Maximum height of a binary tree}{86}{subsection.0.11.3}%
\contentsline {subsubsection}{\numberline {11.3.1}Minimum height of a binary tree}{86}{subsubsection.0.11.3.1}%
\contentsline {subsubsection}{\numberline {11.3.2}Number of Leaves in a Binary Tree}{86}{subsubsection.0.11.3.2}%
\contentsline {subsubsection}{\numberline {11.3.3}Relationship Between Internal Nodes and Leaves:}{86}{subsubsection.0.11.3.3}%
\contentsline {subsubsection}{\numberline {11.3.4}Maximum Number of Nodes at Height h}{86}{subsubsection.0.11.3.4}%
\contentsline {subsubsection}{\numberline {11.3.5}Number of Edges in a Binary Tree:}{87}{subsubsection.0.11.3.5}%
\contentsline {subsection}{\numberline {11.4}Full trees}{88}{subsection.0.11.4}%
\contentsline {subsubsection}{\numberline {11.4.1}Number of leaves}{88}{subsubsection.0.11.4.1}%
\contentsline {subsubsection}{\numberline {11.4.2}Number of nodes}{89}{subsubsection.0.11.4.2}%
\contentsline {subsubsection}{\numberline {11.4.3}Number of internal nodes}{89}{subsubsection.0.11.4.3}%
\contentsline {subsection}{\numberline {11.5}Complete Binary Tree}{90}{subsection.0.11.5}%
\contentsline {subsubsection}{\numberline {11.5.1}Number of nodes}{90}{subsubsection.0.11.5.1}%
\contentsline {subsubsection}{\numberline {11.5.2}Height}{90}{subsubsection.0.11.5.2}%
\contentsline {subsubsection}{\numberline {11.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{90}{subsubsection.0.11.5.3}%
\contentsline {subsubsection}{\numberline {11.5.4}Number of internal nodes}{91}{subsubsection.0.11.5.4}%
\contentsline {subsubsection}{\numberline {11.5.5}Parent and Child Relationships in a Complete Binary Tree}{91}{subsubsection.0.11.5.5}%
\contentsline {subsection}{\numberline {11.6}Perfect binary tree}{92}{subsection.0.11.6}%
\contentsline {subsubsection}{\numberline {11.6.1}Number of Nodes}{92}{subsubsection.0.11.6.1}%
\contentsline {subsubsection}{\numberline {11.6.2}Number of Leaf Nodes}{92}{subsubsection.0.11.6.2}%
\contentsline {subsubsection}{\numberline {11.6.3}Height of the Tree}{92}{subsubsection.0.11.6.3}%
\contentsline {subsubsection}{\numberline {11.6.4}Number of Internal Nodes}{92}{subsubsection.0.11.6.4}%
\contentsline {subsubsection}{\numberline {11.6.5}Depth}{92}{subsubsection.0.11.6.5}%
\contentsline {subsection}{\numberline {11.7}Invert a binary tree}{93}{subsection.0.11.7}%
\contentsline {subsubsection}{\numberline {11.7.1}Swap node helper method}{93}{subsubsection.0.11.7.1}%
\contentsline {subsubsection}{\numberline {11.7.2}Level order (BFS) solution}{93}{subsubsection.0.11.7.2}%
\contentsline {subsubsection}{\numberline {11.7.3}Recursive postorder (DFS)}{94}{subsubsection.0.11.7.3}%
\contentsline {subsection}{\numberline {11.8}Lowest common ancestor (LCA)}{95}{subsection.0.11.8}%
\contentsline {section}{\numberline {12}Applications of binary trees}{96}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Binary search trees}{96}{subsection.0.12.1}%
\contentsline {subsubsection}{\numberline {12.1.1}Interface}{96}{subsubsection.0.12.1.1}%
\contentsline {subsubsection}{\numberline {12.1.2}Traversals}{97}{subsubsection.0.12.1.2}%
\contentsline {paragraph}{\numberline {12.1.2.1}Level order}{97}{paragraph.0.12.1.2.1}%
\contentsline {paragraph}{\numberline {12.1.2.2}Preorder}{98}{paragraph.0.12.1.2.2}%
\contentsline {paragraph}{\numberline {12.1.2.3}Inorder}{98}{paragraph.0.12.1.2.3}%
\contentsline {paragraph}{\numberline {12.1.2.4}Postorder}{100}{paragraph.0.12.1.2.4}%
\contentsline {subsubsection}{\numberline {12.1.3}Successor of a node}{100}{subsubsection.0.12.1.3}%
\contentsline {subsubsection}{\numberline {12.1.4}Predecessor}{101}{subsubsection.0.12.1.4}%
\contentsline {subsubsection}{\numberline {12.1.5}The node}{101}{subsubsection.0.12.1.5}%
\contentsline {subsubsection}{\numberline {12.1.6}The class}{101}{subsubsection.0.12.1.6}%
\contentsline {subsubsection}{\numberline {12.1.7}Recursive Insertion}{102}{subsubsection.0.12.1.7}%
\contentsline {subsubsection}{\numberline {12.1.8}A better recursive insert}{103}{subsubsection.0.12.1.8}%
\contentsline {subsubsection}{\numberline {12.1.9}Iterative insert}{104}{subsubsection.0.12.1.9}%
\contentsline {subsubsection}{\numberline {12.1.10}Recursive removing}{105}{subsubsection.0.12.1.10}%
\contentsline {subsubsection}{\numberline {12.1.11}Clearing}{107}{subsubsection.0.12.1.11}%
\contentsline {subsubsection}{\numberline {12.1.12}Counting the height of the tree (root)}{108}{subsubsection.0.12.1.12}%
\contentsline {subsubsection}{\numberline {12.1.13}Counting the height of a node}{108}{subsubsection.0.12.1.13}%
\contentsline {subsubsection}{\numberline {12.1.14}Getting the depth of the node}{109}{subsubsection.0.12.1.14}%
\contentsline {subsubsection}{\numberline {12.1.15}Counting the number of nodes}{110}{subsubsection.0.12.1.15}%
\contentsline {subsubsection}{\numberline {12.1.16}Comparison traversals}{110}{subsubsection.0.12.1.16}%
\contentsline {subsubsection}{\numberline {12.1.17}Finding the smallest and largest values}{112}{subsubsection.0.12.1.17}%
\contentsline {subsubsection}{\numberline {12.1.18}Getting the widths of a bst}{113}{subsubsection.0.12.1.18}%
\contentsline {subsubsection}{\numberline {12.1.19}Degenerate Binary Search trees}{115}{subsubsection.0.12.1.19}%
\contentsline {subsubsection}{\numberline {12.1.20}Verifying a binary search tree}{115}{subsubsection.0.12.1.20}%
\contentsline {subsubsection}{\numberline {12.1.21}Complexities}{116}{subsubsection.0.12.1.21}%
\contentsline {subsection}{\numberline {12.2}Adelson-Velsky and Landis Trees (AVL trees)}{117}{subsection.0.12.2}%
\contentsline {subsubsection}{\numberline {12.2.1}Definition}{117}{subsubsection.0.12.2.1}%
\contentsline {subsubsection}{\numberline {12.2.2}AVL Nodes}{118}{subsubsection.0.12.2.2}%
\contentsline {subsubsection}{\numberline {12.2.3}Storing the height}{118}{subsubsection.0.12.2.3}%
\contentsline {subsubsection}{\numberline {12.2.4}Defining balance factors in C++ with enums}{119}{subsubsection.0.12.2.4}%
\contentsline {subsubsection}{\numberline {12.2.5}Defining balance factors with a height calculation}{119}{subsubsection.0.12.2.5}%
\contentsline {subsubsection}{\numberline {12.2.6}Interface}{120}{subsubsection.0.12.2.6}%
\contentsline {subsubsection}{\numberline {12.2.7}Balancing an AVL tree}{120}{subsubsection.0.12.2.7}%
\contentsline {subsubsection}{\numberline {12.2.8}Rotations: Right tree}{121}{subsubsection.0.12.2.8}%
\contentsline {paragraph}{\numberline {12.2.8.1}Case 1: Right higher}{121}{paragraph.0.12.2.8.1}%
\contentsline {paragraph}{\numberline {12.2.8.2}Case 2: Left higher}{124}{paragraph.0.12.2.8.2}%
\contentsline {subsubsection}{\numberline {12.2.9}C++ Rotations}{126}{subsubsection.0.12.2.9}%
\contentsline {subsubsection}{\numberline {12.2.10}Balancing}{128}{subsubsection.0.12.2.10}%
\contentsline {subsubsection}{\numberline {12.2.11}Insertions}{129}{subsubsection.0.12.2.11}%
\contentsline {subsubsection}{\numberline {12.2.12}Removing nodes}{130}{subsubsection.0.12.2.12}%
\contentsline {subsection}{\numberline {12.3}Red-black trees}{132}{subsection.0.12.3}%
\contentsline {subsubsection}{\numberline {12.3.1}Rotations}{134}{subsubsection.0.12.3.1}%
\contentsline {subsubsection}{\numberline {12.3.2}Inserting}{136}{subsubsection.0.12.3.2}%
\contentsline {subsubsection}{\numberline {12.3.3}Deletion}{141}{subsubsection.0.12.3.3}%
\contentsline {subsubsection}{\numberline {12.3.4}C++ implementation}{145}{subsubsection.0.12.3.4}%
\contentsline {paragraph}{\numberline {12.3.4.1}The node structure}{145}{paragraph.0.12.3.4.1}%
\contentsline {paragraph}{\numberline {12.3.4.2}The tree class and defining nil}{145}{paragraph.0.12.3.4.2}%
\contentsline {paragraph}{\numberline {12.3.4.3}Rotation methods}{146}{paragraph.0.12.3.4.3}%
\contentsline {paragraph}{\numberline {12.3.4.4}Insert}{147}{paragraph.0.12.3.4.4}%
\contentsline {paragraph}{\numberline {12.3.4.5}Insert fixup}{148}{paragraph.0.12.3.4.5}%
\contentsline {subsection}{\numberline {12.4}State space tree}{149}{subsection.0.12.4}%
\contentsline {section}{\numberline {13}Heaps and Priority Queues (Zero based)}{150}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Max and Min heaps}{152}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}Heapify an array}{152}{subsection.0.13.2}%
\contentsline {subsection}{\numberline {13.3}Min-heap in c++}{153}{subsection.0.13.3}%
\contentsline {subsection}{\numberline {13.4}Max-heap in c++}{154}{subsection.0.13.4}%
\contentsline {subsection}{\numberline {13.5}Percolating}{155}{subsection.0.13.5}%
\contentsline {subsubsection}{\numberline {13.5.1}Percolate up}{155}{subsubsection.0.13.5.1}%
\contentsline {subsubsection}{\numberline {13.5.2}Percolate down}{156}{subsubsection.0.13.5.2}%
\contentsline {subsection}{\numberline {13.6}Inserting into a heap}{157}{subsection.0.13.6}%
\contentsline {subsection}{\numberline {13.7}Removing the root}{158}{subsection.0.13.7}%
\contentsline {subsection}{\numberline {13.8}Removing an arbitary node}{159}{subsection.0.13.8}%
\contentsline {subsection}{\numberline {13.9}Priority queues}{160}{subsection.0.13.9}%
\contentsline {subsubsection}{\numberline {13.9.1}Interface}{160}{subsubsection.0.13.9.1}%
\contentsline {subsubsection}{\numberline {13.9.2}Insert, pop, and top}{161}{subsubsection.0.13.9.2}%
\contentsline {subsubsection}{\numberline {13.9.3}Size and Empty}{162}{subsubsection.0.13.9.3}%
\contentsline {subsection}{\numberline {13.10}Median of a Stream}{163}{subsection.0.13.10}%
\contentsline {section}{\numberline {14}Sorting}{164}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Bubble, selection, insertion}{164}{subsection.0.14.1}%
\contentsline {subsubsection}{\numberline {14.1.1}Bubble sort}{164}{subsubsection.0.14.1.1}%
\contentsline {paragraph}{\numberline {14.1.1.1}Complexity}{165}{paragraph.0.14.1.1.1}%
\contentsline {subsubsection}{\numberline {14.1.2}Selection sort}{166}{subsubsection.0.14.1.2}%
\contentsline {paragraph}{\numberline {14.1.2.1}Complexity}{166}{paragraph.0.14.1.2.1}%
\contentsline {subsubsection}{\numberline {14.1.3}Insertion sort}{167}{subsubsection.0.14.1.3}%
\contentsline {paragraph}{\numberline {14.1.3.1}Complexity}{168}{paragraph.0.14.1.3.1}%
\contentsline {subsection}{\numberline {14.2}Heap sort}{169}{subsection.0.14.2}%
\contentsline {subsubsection}{\numberline {14.2.1}Complexity}{169}{subsubsection.0.14.2.1}%
\contentsline {subsection}{\numberline {14.3}BST Sort}{170}{subsection.0.14.3}%
\contentsline {subsubsection}{\numberline {14.3.1}Insert}{170}{subsubsection.0.14.3.1}%
\contentsline {subsubsection}{\numberline {14.3.2}The inorder traversal}{170}{subsubsection.0.14.3.2}%
\contentsline {subsubsection}{\numberline {14.3.3}The BST sort function}{171}{subsubsection.0.14.3.3}%
\contentsline {subsubsection}{\numberline {14.3.4}Inplace sorting}{172}{subsubsection.0.14.3.4}%
\contentsline {subsubsection}{\numberline {14.3.5}Complexity}{172}{subsubsection.0.14.3.5}%
\contentsline {subsection}{\numberline {14.4}Quick sort}{173}{subsection.0.14.4}%
\contentsline {subsubsection}{\numberline {14.4.1}Partitioning}{173}{subsubsection.0.14.4.1}%
\contentsline {subsubsection}{\numberline {14.4.2}The quick sort procedure}{174}{subsubsection.0.14.4.2}%
\contentsline {subsubsection}{\numberline {14.4.3}A better partition}{176}{subsubsection.0.14.4.3}%
\contentsline {subsubsection}{\numberline {14.4.4}Median of three partition}{176}{subsubsection.0.14.4.4}%
\contentsline {subsubsection}{\numberline {14.4.5}Quicksort with iterators}{178}{subsubsection.0.14.4.5}%
\contentsline {section}{\numberline {15}Multi-way (m-way) search trees}{179}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Multi-way Searching}{179}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}2-4 (2-3-4) Trees}{180}{subsection.0.15.2}%
\contentsline {subsubsection}{\numberline {15.2.1}Insertion}{180}{subsubsection.0.15.2.1}%
\contentsline {subsubsection}{\numberline {15.2.2}Removal}{181}{subsubsection.0.15.2.2}%
\contentsline {subsubsection}{\numberline {15.2.3}Properties}{183}{subsubsection.0.15.2.3}%
\contentsline {subsection}{\numberline {15.3}B-trees}{184}{subsection.0.15.3}%
\contentsline {section}{\numberline {16}Hashing (hash tables)}{185}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Direct-address table}{185}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Hash tables}{186}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Independent uniform hashing}{187}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}Collision resolution by chaining}{187}{subsection.0.16.4}%
\contentsline {subsection}{\numberline {16.5}Analysis of hashing with chaining}{188}{subsection.0.16.5}%
\contentsline {subsection}{\numberline {16.6}Hash functions}{188}{subsection.0.16.6}%
\contentsline {subsubsection}{\numberline {16.6.1}Static hashing}{189}{subsubsection.0.16.6.1}%
\contentsline {subsubsection}{\numberline {16.6.2}The division method}{189}{subsubsection.0.16.6.2}%
\contentsline {subsubsection}{\numberline {16.6.3}The multiplication method}{190}{subsubsection.0.16.6.3}%
\contentsline {subsection}{\numberline {16.7}Open addressing}{190}{subsection.0.16.7}%
\contentsline {subsubsection}{\numberline {16.7.1}Linear probing}{190}{subsubsection.0.16.7.1}%
\contentsline {subsubsection}{\numberline {16.7.2}Quadratic probing}{191}{subsubsection.0.16.7.2}%
\contentsline {subsubsection}{\numberline {16.7.3}Deletion problem in open addressing}{191}{subsubsection.0.16.7.3}%
\contentsline {subsubsection}{\numberline {16.7.4}Tombstoning}{191}{subsubsection.0.16.7.4}%
\contentsline {subsubsection}{\numberline {16.7.5}Lazy deletion}{192}{subsubsection.0.16.7.5}%
\contentsline {subsubsection}{\numberline {16.7.6}Rehashing}{192}{subsubsection.0.16.7.6}%
\contentsline {subsection}{\numberline {16.8}Load factor}{193}{subsection.0.16.8}%
\contentsline {subsection}{\numberline {16.9}Static hashing}{193}{subsection.0.16.9}%
\contentsline {subsection}{\numberline {16.10}Static linear hashing}{193}{subsection.0.16.10}%
\contentsline {subsection}{\numberline {16.11}Static hashing with linear probe implementation}{194}{subsection.0.16.11}%
\contentsline {subsubsection}{\numberline {16.11.1}Interface}{194}{subsubsection.0.16.11.1}%
\contentsline {subsubsection}{\numberline {16.11.2}The basics}{194}{subsubsection.0.16.11.2}%
\contentsline {subsubsection}{\numberline {16.11.3}The hash function}{194}{subsubsection.0.16.11.3}%
\contentsline {subsubsection}{\numberline {16.11.4}Inserts}{195}{subsubsection.0.16.11.4}%
\contentsline {subsubsection}{\numberline {16.11.5}Searching}{196}{subsubsection.0.16.11.5}%
\contentsline {subsubsection}{\numberline {16.11.6}Removing}{196}{subsubsection.0.16.11.6}%
\contentsline {subsubsection}{\numberline {16.11.7}Searching and removing with tombstones}{196}{subsubsection.0.16.11.7}%
\contentsline {subsection}{\numberline {16.12}Static hashing with quadratic probing implementation}{199}{subsection.0.16.12}%
\contentsline {subsubsection}{\numberline {16.12.1}Inserting}{199}{subsubsection.0.16.12.1}%
\contentsline {subsubsection}{\numberline {16.12.2}Searching}{200}{subsubsection.0.16.12.2}%
\contentsline {subsubsection}{\numberline {16.12.3}Removing}{201}{subsubsection.0.16.12.3}%
\contentsline {subsection}{\numberline {16.13}Static hashing with chaining implementation}{202}{subsection.0.16.13}%
\contentsline {subsubsection}{\numberline {16.13.1}The basics}{202}{subsubsection.0.16.13.1}%
\contentsline {subsubsection}{\numberline {16.13.2}Inserting}{202}{subsubsection.0.16.13.2}%
\contentsline {subsubsection}{\numberline {16.13.3}Searching}{202}{subsubsection.0.16.13.3}%
\contentsline {subsubsection}{\numberline {16.13.4}Removing}{203}{subsubsection.0.16.13.4}%
\contentsline {subsection}{\numberline {16.14}Injective hashing}{204}{subsection.0.16.14}%
\contentsline {subsection}{\numberline {16.15}Perfect hashing}{204}{subsection.0.16.15}%
\contentsline {section}{\numberline {17}Implementing an unordered\_map}{205}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Fields}{205}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Interface}{205}{subsection.0.17.2}%
\contentsline {subsection}{\numberline {17.3}Public methods: Hash and rehash}{206}{subsection.0.17.3}%
\contentsline {subsection}{\numberline {17.4}Inserting and erasing}{206}{subsection.0.17.4}%
\contentsline {subsubsection}{\numberline {17.4.1}Insertion}{206}{subsubsection.0.17.4.1}%
\contentsline {subsubsection}{\numberline {17.4.2}Erasing}{207}{subsubsection.0.17.4.2}%
\contentsline {subsection}{\numberline {17.5}Finding and checking if the map is empty}{207}{subsection.0.17.5}%
\contentsline {subsubsection}{\numberline {17.5.1}Finding}{207}{subsubsection.0.17.5.1}%
\contentsline {subsubsection}{\numberline {17.5.2}Empty}{207}{subsubsection.0.17.5.2}%
\contentsline {subsection}{\numberline {17.6}The subscript operator}{208}{subsection.0.17.6}%
\contentsline {section}{\numberline {18}Table indexing and row-major order}{209}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Row-major order}{209}{subsection.0.18.1}%
\contentsline {subsection}{\numberline {18.2}Row-major order in c++}{210}{subsection.0.18.2}%
\contentsline {section}{\numberline {19}Graphs}{211}{section.0.19}%
\contentsline {subsection}{\numberline {19.1}Simple Graph}{211}{subsection.0.19.1}%
\contentsline {subsection}{\numberline {19.2}Undirected graph}{211}{subsection.0.19.2}%
\contentsline {subsection}{\numberline {19.3}Directed graph}{211}{subsection.0.19.3}%
\contentsline {subsection}{\numberline {19.4}Weighted Graph}{211}{subsection.0.19.4}%
\contentsline {subsection}{\numberline {19.5}Complete Graph}{212}{subsection.0.19.5}%
\contentsline {subsection}{\numberline {19.6}More terms}{212}{subsection.0.19.6}%
\contentsline {subsection}{\numberline {19.7}Graph representations}{212}{subsection.0.19.7}%
\contentsline {subsection}{\numberline {19.8}Interface of adjacency lists and matrices}{213}{subsection.0.19.8}%
\contentsline {subsection}{\numberline {19.9}Complexities for adjacency operations}{213}{subsection.0.19.9}%
\contentsline {subsection}{\numberline {19.10}Graph traversal/search}{213}{subsection.0.19.10}%
\contentsline {subsubsection}{\numberline {19.10.1}Breadth-first-traversal}{214}{subsubsection.0.19.10.1}%
\contentsline {subsubsection}{\numberline {19.10.2}Depth-first traversal}{214}{subsubsection.0.19.10.2}%
\contentsline {subsection}{\numberline {19.11}Shortest path problems}{214}{subsection.0.19.11}%
\contentsline {subsubsection}{\numberline {19.11.1}Dijkstra's shortest path algorithm}{215}{subsubsection.0.19.11.1}%
\contentsline {subsubsection}{\numberline {19.11.2}Dijkstras's algorithm in c++}{216}{subsubsection.0.19.11.2}%
\contentsline {subsection}{\numberline {19.12}Undirected graph in c++ with an adjacency list}{218}{subsection.0.19.12}%
\contentsline {subsubsection}{\numberline {19.12.1}Internal structure}{218}{subsubsection.0.19.12.1}%
\contentsline {subsubsection}{\numberline {19.12.2}Interface}{218}{subsubsection.0.19.12.2}%
\contentsline {subsubsection}{\numberline {19.12.3}Adding edges}{218}{subsubsection.0.19.12.3}%
\contentsline {subsubsection}{\numberline {19.12.4}Adding nodes}{219}{subsubsection.0.19.12.4}%
\contentsline {subsubsection}{\numberline {19.12.5}Getting the neighbors}{219}{subsubsection.0.19.12.5}%
\contentsline {subsubsection}{\numberline {19.12.6}Checking if an edge exists}{219}{subsubsection.0.19.12.6}%
\contentsline {subsubsection}{\numberline {19.12.7}Breadth first traversal}{220}{subsubsection.0.19.12.7}%
\contentsline {subsubsection}{\numberline {19.12.8}Breadth first search to find the shortest path}{221}{subsubsection.0.19.12.8}%
\contentsline {subsubsection}{\numberline {19.12.9}Depth first traversal}{222}{subsubsection.0.19.12.9}%
\contentsline {subsection}{\numberline {19.13}Undirected graph in c++ with adjacency matrix}{223}{subsection.0.19.13}%
\contentsline {subsubsection}{\numberline {19.13.1}Setup}{223}{subsubsection.0.19.13.1}%
\contentsline {subsubsection}{\numberline {19.13.2}Adding an edge}{223}{subsubsection.0.19.13.2}%
\contentsline {subsubsection}{\numberline {19.13.3}Removing an edge}{223}{subsubsection.0.19.13.3}%
\contentsline {subsubsection}{\numberline {19.13.4}Getting neighbors}{223}{subsubsection.0.19.13.4}%
\contentsline {subsubsection}{\numberline {19.13.5}Checking if an edge exists}{224}{subsubsection.0.19.13.5}%
\contentsline {subsubsection}{\numberline {19.13.6}Breadth-first traversal}{225}{subsubsection.0.19.13.6}%
\contentsline {subsubsection}{\numberline {19.13.7}Depth-first traversal}{226}{subsubsection.0.19.13.7}%
\contentsline {subsection}{\numberline {19.14}Weighted graph in C++ with an adjacency matrix}{227}{subsection.0.19.14}%
\contentsline {subsubsection}{\numberline {19.14.1}Setup}{227}{subsubsection.0.19.14.1}%
\contentsline {subsubsection}{\numberline {19.14.2}Adding and removing edges}{227}{subsubsection.0.19.14.2}%
\contentsline {subsubsection}{\numberline {19.14.3}Dijkstra}{228}{subsubsection.0.19.14.3}%
\contentsline {subsection}{\numberline {19.15}Weighted graph in c++ with structure}{229}{subsection.0.19.15}%
\contentsline {subsection}{\numberline {19.16}Topological sort (DFS approach)}{230}{subsection.0.19.16}%
\contentsline {subsubsection}{\numberline {19.16.1}C++ Setup}{230}{subsubsection.0.19.16.1}%
\contentsline {subsubsection}{\numberline {19.16.2}Topological sort with dfs helper}{230}{subsubsection.0.19.16.2}%
\contentsline {subsection}{\numberline {19.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{232}{subsection.0.19.17}%
\contentsline {subsubsection}{\numberline {19.17.1}Class structure and Fields}{232}{subsubsection.0.19.17.1}%
\contentsline {subsubsection}{\numberline {19.17.2}Find}{232}{subsubsection.0.19.17.2}%
\contentsline {subsubsection}{\numberline {19.17.3}Union}{233}{subsubsection.0.19.17.3}%
\contentsline {subsubsection}{\numberline {19.17.4}Find and union optimizations}{233}{subsubsection.0.19.17.4}%
\contentsline {subsection}{\numberline {19.18}Using UnionFind}{234}{subsection.0.19.18}%
\contentsline {subsection}{\numberline {19.19}Minimum spanning trees}{235}{subsection.0.19.19}%
\contentsline {subsubsection}{\numberline {19.19.1}Kruskal's algorithm}{235}{subsubsection.0.19.19.1}%
\contentsline {section}{\numberline {20}Prefix and suffix sums, products, etc}{238}{section.0.20}%
\contentsline {subsection}{\numberline {20.1}Suffix sums and products}{238}{subsection.0.20.1}%
\contentsline {section}{\numberline {21}Two pointer}{240}{section.0.21}%
\contentsline {subsection}{\numberline {21.1}Two Sum II - Input Array Is Sorted}{240}{subsection.0.21.1}%
\contentsline {subsection}{\numberline {21.2}Is valid palindrome}{241}{subsection.0.21.2}%
\contentsline {section}{\numberline {22}Greedy algorithms}{242}{section.0.22}%
\contentsline {section}{\numberline {23}Subarray problems}{243}{section.0.23}%
\contentsline {subsection}{\numberline {23.1}Brute force subarray generation ($O(n^{2})$)}{243}{subsection.0.23.1}%
\contentsline {subsection}{\numberline {23.2}Max subarray sum: Kadane's algorithm ($O(n)$)}{243}{subsection.0.23.2}%
\contentsline {section}{\numberline {24}Divide and conquer}{244}{section.0.24}%
\contentsline {section}{\numberline {25}Range queries}{245}{section.0.25}%
\contentsline {subsection}{\numberline {25.1}Difference arrays}{245}{subsection.0.25.1}%
\contentsline {subsubsection}{\numberline {25.1.1}Why it works}{246}{subsubsection.0.25.1.1}%
\contentsline {section}{\numberline {26}Math algorithms}{247}{section.0.26}%
\contentsline {subsection}{\numberline {26.1}Euclidean GCD Algorithm}{247}{subsection.0.26.1}%
\contentsline {subsubsection}{\numberline {26.1.1}GCD of some integer collection}{247}{subsubsection.0.26.1.1}%
\contentsline {subsection}{\numberline {26.2}Fibonacci numbers in constant time}{248}{subsection.0.26.2}%
\contentsline {subsection}{\numberline {26.3}Sterlings factorial approximation}{248}{subsection.0.26.3}%
\contentsline {subsection}{\numberline {26.4}square roots}{248}{subsection.0.26.4}%
\contentsline {subsubsection}{\numberline {26.4.1}Naive $O(\sqrt {n})$}{248}{subsubsection.0.26.4.1}%
\contentsline {subsubsection}{\numberline {26.4.2}$O(\lg (n))$ binary search approach}{249}{subsubsection.0.26.4.2}%
\contentsline {subsection}{\numberline {26.5}Fast exponentiation ($O(\lg (n))$)}{250}{subsection.0.26.5}%
\contentsline {subsubsection}{\numberline {26.5.1}Recursive}{250}{subsubsection.0.26.5.1}%
\contentsline {subsection}{\numberline {26.6}Bitwise power of two}{252}{subsection.0.26.6}%
\contentsline {section}{\numberline {27}Number Theory}{253}{section.0.27}%
\contentsline {section}{\numberline {28}STL}{254}{section.0.28}%
\contentsline {subsection}{\numberline {28.1}<algorithm>}{254}{subsection.0.28.1}%
\contentsline {subsubsection}{\numberline {28.1.1}stable\_partition}{254}{subsubsection.0.28.1.1}%
\contentsline {subsubsection}{\numberline {28.1.2}partition}{254}{subsubsection.0.28.1.2}%
\contentsline {subsubsection}{\numberline {28.1.3}partition\_copy}{254}{subsubsection.0.28.1.3}%
\contentsline {subsubsection}{\numberline {28.1.4}is\_partitioned}{255}{subsubsection.0.28.1.4}%
\contentsline {subsubsection}{\numberline {28.1.5}partition\_pont}{255}{subsubsection.0.28.1.5}%
