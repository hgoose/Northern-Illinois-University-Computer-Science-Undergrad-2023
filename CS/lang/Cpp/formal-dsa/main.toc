\contentsline {section}{\numberline {1}Preface}{12}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{12}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{12}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{13}{section.0.2}%
\contentsline {section}{\numberline {3}Linked lists}{20}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Singly-linked lists}{20}{subsection.0.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Structure of the node}{20}{subsubsection.0.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}The list class/struct}{21}{subsubsection.0.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Interface of a singly linked list stack}{21}{subsubsection.0.3.1.3}%
\contentsline {subsubsection}{\numberline {3.1.4}Traversing}{22}{subsubsection.0.3.1.4}%
\contentsline {subsubsection}{\numberline {3.1.5}Printing}{23}{subsubsection.0.3.1.5}%
\contentsline {subsubsection}{\numberline {3.1.6}Printing in reverse}{24}{subsubsection.0.3.1.6}%
\contentsline {subsubsection}{\numberline {3.1.7}Getting the length}{25}{subsubsection.0.3.1.7}%
\contentsline {subsubsection}{\numberline {3.1.8}Clearing}{26}{subsubsection.0.3.1.8}%
\contentsline {subsubsection}{\numberline {3.1.9}Reversing}{27}{subsubsection.0.3.1.9}%
\contentsline {subsubsection}{\numberline {3.1.10}Pushing}{28}{subsubsection.0.3.1.10}%
\contentsline {subsubsection}{\numberline {3.1.11}Inserting}{29}{subsubsection.0.3.1.11}%
\contentsline {subsubsection}{\numberline {3.1.12}Popping}{30}{subsubsection.0.3.1.12}%
\contentsline {subsubsection}{\numberline {3.1.13}Erasing}{31}{subsubsection.0.3.1.13}%
\contentsline {subsubsection}{\numberline {3.1.14}Searching}{32}{subsubsection.0.3.1.14}%
\contentsline {subsection}{\numberline {3.2}Doubly-linked list}{33}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}Node structure}{33}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The list class}{33}{subsubsection.0.3.2.2}%
\contentsline {subsubsection}{\numberline {3.2.3}push\_back and push\_front}{34}{subsubsection.0.3.2.3}%
\contentsline {subsubsection}{\numberline {3.2.4}pop\_back and pop\_frot}{35}{subsubsection.0.3.2.4}%
\contentsline {subsubsection}{\numberline {3.2.5}Searching}{36}{subsubsection.0.3.2.5}%
\contentsline {section}{\numberline {4}Recursion}{37}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Recursion vs iteration}{37}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Elementary recursion}{38}{subsection.0.4.2}%
\contentsline {subsection}{\numberline {4.3}Base cases}{38}{subsection.0.4.3}%
\contentsline {subsubsection}{\numberline {4.3.1}Factorials}{38}{subsubsection.0.4.3.1}%
\contentsline {subsubsection}{\numberline {4.3.2}Powers}{39}{subsubsection.0.4.3.2}%
\contentsline {subsection}{\numberline {4.4}Tail recursion}{40}{subsection.0.4.4}%
\contentsline {subsection}{\numberline {4.5}Indirect Recursion}{42}{subsection.0.4.5}%
\contentsline {subsection}{\numberline {4.6}Nested Recursion}{43}{subsection.0.4.6}%
\contentsline {subsection}{\numberline {4.7}Excessive Recursion}{43}{subsection.0.4.7}%
\contentsline {subsection}{\numberline {4.8}Backtracking}{45}{subsection.0.4.8}%
\contentsline {subsubsection}{\numberline {4.8.1}N-Queens}{46}{subsubsection.0.4.8.1}%
\contentsline {subsubsection}{\numberline {4.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{47}{subsubsection.0.4.8.2}%
\contentsline {subsubsection}{\numberline {4.8.3}Combinations}{51}{subsubsection.0.4.8.3}%
\contentsline {subsubsection}{\numberline {4.8.4}Combinations that sum to $m$}{52}{subsubsection.0.4.8.4}%
\contentsline {subsubsection}{\numberline {4.8.5}Permutations}{53}{subsubsection.0.4.8.5}%
\contentsline {subsection}{\numberline {4.9}Recursion in singly linked lists}{54}{subsection.0.4.9}%
\contentsline {subsubsection}{\numberline {4.9.1}Traversing}{54}{subsubsection.0.4.9.1}%
\contentsline {subsubsection}{\numberline {4.9.2}Printing}{54}{subsubsection.0.4.9.2}%
\contentsline {subsubsection}{\numberline {4.9.3}Printing in reverse}{54}{subsubsection.0.4.9.3}%
\contentsline {subsubsection}{\numberline {4.9.4}Getting the length}{55}{subsubsection.0.4.9.4}%
\contentsline {subsubsection}{\numberline {4.9.5}Clearing}{55}{subsubsection.0.4.9.5}%
\contentsline {subsubsection}{\numberline {4.9.6}Reversing}{56}{subsubsection.0.4.9.6}%
\contentsline {subsubsection}{\numberline {4.9.7}Pushing}{58}{subsubsection.0.4.9.7}%
\contentsline {subsubsection}{\numberline {4.9.8}Inserting}{59}{subsubsection.0.4.9.8}%
\contentsline {subsubsection}{\numberline {4.9.9}Popping}{60}{subsubsection.0.4.9.9}%
\contentsline {subsubsection}{\numberline {4.9.10}Erasing}{61}{subsubsection.0.4.9.10}%
\contentsline {subsubsection}{\numberline {4.9.11}Searching}{62}{subsubsection.0.4.9.11}%
\contentsline {section}{\numberline {5}More on backtracking}{63}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}(Power set) Subsets}{63}{subsection.0.5.1}%
\contentsline {subsection}{\numberline {5.2}Power set with duplicates}{64}{subsection.0.5.2}%
\contentsline {section}{\numberline {6}The basics of Dynamic Programming (DP)}{65}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Key Concepts of DP}{65}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Bottom-up DP}{65}{subsection.0.6.2}%
\contentsline {subsubsection}{\numberline {6.2.1}Key Characteristics}{65}{subsubsection.0.6.2.1}%
\contentsline {subsubsection}{\numberline {6.2.2}Steps for Bottom-Up DP}{65}{subsubsection.0.6.2.2}%
\contentsline {subsection}{\numberline {6.3}Bottom-up DP: Fibonacci}{66}{subsection.0.6.3}%
\contentsline {subsection}{\numberline {6.4}Memoization (top down DP)}{66}{subsection.0.6.4}%
\contentsline {subsection}{\numberline {6.5}Top-down DP: Fibonacci}{67}{subsection.0.6.5}%
\contentsline {section}{\numberline {7}Dynamic programming}{68}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}LCS (longest common subsequence)}{68}{subsection.0.7.1}%
\contentsline {section}{\numberline {8}Binary trees}{69}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}Terminology}{69}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Type of binary trees}{70}{subsection.0.8.2}%
\contentsline {subsection}{\numberline {8.3}Maximum height of a binary tree}{71}{subsection.0.8.3}%
\contentsline {subsubsection}{\numberline {8.3.1}Minimum height of a binary tree}{71}{subsubsection.0.8.3.1}%
\contentsline {subsubsection}{\numberline {8.3.2}Number of Leaves in a Binary Tree}{71}{subsubsection.0.8.3.2}%
\contentsline {subsubsection}{\numberline {8.3.3}Relationship Between Internal Nodes and Leaves:}{71}{subsubsection.0.8.3.3}%
\contentsline {subsubsection}{\numberline {8.3.4}Maximum Number of Nodes at Height h}{71}{subsubsection.0.8.3.4}%
\contentsline {subsubsection}{\numberline {8.3.5}Number of Edges in a Binary Tree:}{72}{subsubsection.0.8.3.5}%
\contentsline {subsection}{\numberline {8.4}Full trees}{73}{subsection.0.8.4}%
\contentsline {subsubsection}{\numberline {8.4.1}Number of leaves}{73}{subsubsection.0.8.4.1}%
\contentsline {subsubsection}{\numberline {8.4.2}Number of nodes}{74}{subsubsection.0.8.4.2}%
\contentsline {subsubsection}{\numberline {8.4.3}Number of internal nodes}{74}{subsubsection.0.8.4.3}%
\contentsline {subsection}{\numberline {8.5}Complete Binary Tree}{75}{subsection.0.8.5}%
\contentsline {subsubsection}{\numberline {8.5.1}Number of nodes}{75}{subsubsection.0.8.5.1}%
\contentsline {subsubsection}{\numberline {8.5.2}Height}{75}{subsubsection.0.8.5.2}%
\contentsline {subsubsection}{\numberline {8.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{75}{subsubsection.0.8.5.3}%
\contentsline {subsubsection}{\numberline {8.5.4}Number of internal nodes}{76}{subsubsection.0.8.5.4}%
\contentsline {subsubsection}{\numberline {8.5.5}Parent and Child Relationships in a Complete Binary Tree}{76}{subsubsection.0.8.5.5}%
\contentsline {subsection}{\numberline {8.6}Perfect binary tree}{77}{subsection.0.8.6}%
\contentsline {subsubsection}{\numberline {8.6.1}Number of Nodes}{77}{subsubsection.0.8.6.1}%
\contentsline {subsubsection}{\numberline {8.6.2}Number of Leaf Nodes}{77}{subsubsection.0.8.6.2}%
\contentsline {subsubsection}{\numberline {8.6.3}Height of the Tree}{77}{subsubsection.0.8.6.3}%
\contentsline {subsubsection}{\numberline {8.6.4}Number of Internal Nodes}{77}{subsubsection.0.8.6.4}%
\contentsline {subsubsection}{\numberline {8.6.5}Depth}{77}{subsubsection.0.8.6.5}%
\contentsline {subsection}{\numberline {8.7}Invert a binary tree}{78}{subsection.0.8.7}%
\contentsline {subsubsection}{\numberline {8.7.1}Swap node helper method}{78}{subsubsection.0.8.7.1}%
\contentsline {subsubsection}{\numberline {8.7.2}Level order (BFS) solution}{78}{subsubsection.0.8.7.2}%
\contentsline {subsubsection}{\numberline {8.7.3}Recursive postorder (DFS)}{79}{subsubsection.0.8.7.3}%
\contentsline {section}{\numberline {9}Applications of binary trees}{80}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Binary search trees}{80}{subsection.0.9.1}%
\contentsline {subsubsection}{\numberline {9.1.1}Interface}{80}{subsubsection.0.9.1.1}%
\contentsline {subsubsection}{\numberline {9.1.2}Traversals}{81}{subsubsection.0.9.1.2}%
\contentsline {paragraph}{\numberline {9.1.2.1}Level order}{81}{paragraph.0.9.1.2.1}%
\contentsline {paragraph}{\numberline {9.1.2.2}Preorder}{82}{paragraph.0.9.1.2.2}%
\contentsline {paragraph}{\numberline {9.1.2.3}Inorder}{82}{paragraph.0.9.1.2.3}%
\contentsline {paragraph}{\numberline {9.1.2.4}Postorder}{84}{paragraph.0.9.1.2.4}%
\contentsline {subsubsection}{\numberline {9.1.3}Successor of a node}{84}{subsubsection.0.9.1.3}%
\contentsline {subsubsection}{\numberline {9.1.4}Predecessor}{85}{subsubsection.0.9.1.4}%
\contentsline {subsubsection}{\numberline {9.1.5}The node}{85}{subsubsection.0.9.1.5}%
\contentsline {subsubsection}{\numberline {9.1.6}The class}{85}{subsubsection.0.9.1.6}%
\contentsline {subsubsection}{\numberline {9.1.7}Recursive Insertion}{86}{subsubsection.0.9.1.7}%
\contentsline {subsubsection}{\numberline {9.1.8}A better recursive insert}{87}{subsubsection.0.9.1.8}%
\contentsline {subsubsection}{\numberline {9.1.9}Iterative insert}{88}{subsubsection.0.9.1.9}%
\contentsline {subsubsection}{\numberline {9.1.10}Recursive removing}{89}{subsubsection.0.9.1.10}%
\contentsline {subsubsection}{\numberline {9.1.11}Clearing}{91}{subsubsection.0.9.1.11}%
\contentsline {subsubsection}{\numberline {9.1.12}Counting the height of the tree (root)}{92}{subsubsection.0.9.1.12}%
\contentsline {subsubsection}{\numberline {9.1.13}Counting the height of a node}{92}{subsubsection.0.9.1.13}%
\contentsline {subsubsection}{\numberline {9.1.14}Getting the depth of the node}{93}{subsubsection.0.9.1.14}%
\contentsline {subsubsection}{\numberline {9.1.15}Counting the number of nodes}{94}{subsubsection.0.9.1.15}%
\contentsline {subsubsection}{\numberline {9.1.16}Comparison traversals}{94}{subsubsection.0.9.1.16}%
\contentsline {subsubsection}{\numberline {9.1.17}Finding the smallest and largest values}{96}{subsubsection.0.9.1.17}%
\contentsline {subsubsection}{\numberline {9.1.18}Getting the widths of a bst}{97}{subsubsection.0.9.1.18}%
\contentsline {subsubsection}{\numberline {9.1.19}Degenerate Binary Search trees}{99}{subsubsection.0.9.1.19}%
\contentsline {subsubsection}{\numberline {9.1.20}Verifying a binary search tree}{99}{subsubsection.0.9.1.20}%
\contentsline {subsubsection}{\numberline {9.1.21}Complexities}{100}{subsubsection.0.9.1.21}%
\contentsline {subsection}{\numberline {9.2}Adelson-Velsky and Landis Trees (AVL trees)}{101}{subsection.0.9.2}%
\contentsline {subsubsection}{\numberline {9.2.1}Definition}{101}{subsubsection.0.9.2.1}%
\contentsline {subsubsection}{\numberline {9.2.2}AVL Nodes}{102}{subsubsection.0.9.2.2}%
\contentsline {subsubsection}{\numberline {9.2.3}Storing the height}{102}{subsubsection.0.9.2.3}%
\contentsline {subsubsection}{\numberline {9.2.4}Defining balance factors in C++ with enums}{103}{subsubsection.0.9.2.4}%
\contentsline {subsubsection}{\numberline {9.2.5}Defining balance factors with a height calculation}{103}{subsubsection.0.9.2.5}%
\contentsline {subsubsection}{\numberline {9.2.6}Interface}{104}{subsubsection.0.9.2.6}%
\contentsline {subsubsection}{\numberline {9.2.7}Balancing an AVL tree}{104}{subsubsection.0.9.2.7}%
\contentsline {subsubsection}{\numberline {9.2.8}Rotations: Right tree}{105}{subsubsection.0.9.2.8}%
\contentsline {paragraph}{\numberline {9.2.8.1}Case 1: Right higher}{105}{paragraph.0.9.2.8.1}%
\contentsline {paragraph}{\numberline {9.2.8.2}Case 2: Left higher}{108}{paragraph.0.9.2.8.2}%
\contentsline {subsubsection}{\numberline {9.2.9}C++ Rotations}{110}{subsubsection.0.9.2.9}%
\contentsline {subsubsection}{\numberline {9.2.10}Balancing}{112}{subsubsection.0.9.2.10}%
\contentsline {subsubsection}{\numberline {9.2.11}Insertions}{113}{subsubsection.0.9.2.11}%
\contentsline {subsubsection}{\numberline {9.2.12}Removing nodes}{114}{subsubsection.0.9.2.12}%
\contentsline {subsection}{\numberline {9.3}Red-black trees}{116}{subsection.0.9.3}%
\contentsline {subsubsection}{\numberline {9.3.1}Rotations}{118}{subsubsection.0.9.3.1}%
\contentsline {subsubsection}{\numberline {9.3.2}Inserting}{120}{subsubsection.0.9.3.2}%
\contentsline {subsubsection}{\numberline {9.3.3}Deletion}{125}{subsubsection.0.9.3.3}%
\contentsline {subsubsection}{\numberline {9.3.4}C++ implementation}{129}{subsubsection.0.9.3.4}%
\contentsline {paragraph}{\numberline {9.3.4.1}The node structure}{129}{paragraph.0.9.3.4.1}%
\contentsline {paragraph}{\numberline {9.3.4.2}The tree class and defining nil}{129}{paragraph.0.9.3.4.2}%
\contentsline {paragraph}{\numberline {9.3.4.3}Rotation methods}{130}{paragraph.0.9.3.4.3}%
\contentsline {paragraph}{\numberline {9.3.4.4}Insert}{131}{paragraph.0.9.3.4.4}%
\contentsline {paragraph}{\numberline {9.3.4.5}Insert fixup}{132}{paragraph.0.9.3.4.5}%
\contentsline {subsection}{\numberline {9.4}State space tree}{133}{subsection.0.9.4}%
\contentsline {subsubsection}{\numberline {9.4.1}Generate permutations (Backtracking)}{134}{subsubsection.0.9.4.1}%
\contentsline {section}{\numberline {10}Heaps and Priority Queues (Zero based)}{135}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Max and Min heaps}{137}{subsection.0.10.1}%
\contentsline {subsection}{\numberline {10.2}Heapify an array}{137}{subsection.0.10.2}%
\contentsline {subsection}{\numberline {10.3}Min-heap in c++}{138}{subsection.0.10.3}%
\contentsline {subsection}{\numberline {10.4}Max-heap in c++}{139}{subsection.0.10.4}%
\contentsline {subsection}{\numberline {10.5}Percolating}{140}{subsection.0.10.5}%
\contentsline {subsubsection}{\numberline {10.5.1}Percolate up}{140}{subsubsection.0.10.5.1}%
\contentsline {subsubsection}{\numberline {10.5.2}Percolate down}{141}{subsubsection.0.10.5.2}%
\contentsline {subsection}{\numberline {10.6}Inserting into a heap}{142}{subsection.0.10.6}%
\contentsline {subsection}{\numberline {10.7}Removing the root}{143}{subsection.0.10.7}%
\contentsline {subsection}{\numberline {10.8}Removing an arbitary node}{144}{subsection.0.10.8}%
\contentsline {subsection}{\numberline {10.9}Priority queues}{145}{subsection.0.10.9}%
\contentsline {subsubsection}{\numberline {10.9.1}Interface}{145}{subsubsection.0.10.9.1}%
\contentsline {subsubsection}{\numberline {10.9.2}Insert, pop, and top}{146}{subsubsection.0.10.9.2}%
\contentsline {subsubsection}{\numberline {10.9.3}Size and Empty}{147}{subsubsection.0.10.9.3}%
\contentsline {subsection}{\numberline {10.10}Median of a Stream}{148}{subsection.0.10.10}%
\contentsline {section}{\numberline {11}Sorting}{149}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Bubble, selection, insertion}{149}{subsection.0.11.1}%
\contentsline {subsubsection}{\numberline {11.1.1}Bubble sort}{149}{subsubsection.0.11.1.1}%
\contentsline {paragraph}{\numberline {11.1.1.1}Complexity}{150}{paragraph.0.11.1.1.1}%
\contentsline {subsubsection}{\numberline {11.1.2}Selection sort}{151}{subsubsection.0.11.1.2}%
\contentsline {paragraph}{\numberline {11.1.2.1}Complexity}{151}{paragraph.0.11.1.2.1}%
\contentsline {subsubsection}{\numberline {11.1.3}Insertion sort}{152}{subsubsection.0.11.1.3}%
\contentsline {paragraph}{\numberline {11.1.3.1}Complexity}{153}{paragraph.0.11.1.3.1}%
\contentsline {subsection}{\numberline {11.2}Heap sort}{154}{subsection.0.11.2}%
\contentsline {subsubsection}{\numberline {11.2.1}Complexity}{154}{subsubsection.0.11.2.1}%
\contentsline {subsection}{\numberline {11.3}BST Sort}{155}{subsection.0.11.3}%
\contentsline {subsubsection}{\numberline {11.3.1}Insert}{155}{subsubsection.0.11.3.1}%
\contentsline {subsubsection}{\numberline {11.3.2}The inorder traversal}{155}{subsubsection.0.11.3.2}%
\contentsline {subsubsection}{\numberline {11.3.3}The BST sort function}{156}{subsubsection.0.11.3.3}%
\contentsline {subsubsection}{\numberline {11.3.4}Inplace sorting}{157}{subsubsection.0.11.3.4}%
\contentsline {subsubsection}{\numberline {11.3.5}Complexity}{157}{subsubsection.0.11.3.5}%
\contentsline {subsection}{\numberline {11.4}Quick sort}{158}{subsection.0.11.4}%
\contentsline {subsubsection}{\numberline {11.4.1}Partitioning}{158}{subsubsection.0.11.4.1}%
\contentsline {subsubsection}{\numberline {11.4.2}The quick sort procedure}{159}{subsubsection.0.11.4.2}%
\contentsline {subsubsection}{\numberline {11.4.3}A better partition}{161}{subsubsection.0.11.4.3}%
\contentsline {subsubsection}{\numberline {11.4.4}Median of three partition}{161}{subsubsection.0.11.4.4}%
\contentsline {subsubsection}{\numberline {11.4.5}Quicksort with iterators}{163}{subsubsection.0.11.4.5}%
\contentsline {section}{\numberline {12}Multi-way (m-way) search trees}{164}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Multi-way Searching}{164}{subsection.0.12.1}%
\contentsline {subsection}{\numberline {12.2}2-4 (2-3-4) Trees}{165}{subsection.0.12.2}%
\contentsline {subsubsection}{\numberline {12.2.1}Insertion}{165}{subsubsection.0.12.2.1}%
\contentsline {subsubsection}{\numberline {12.2.2}Removal}{166}{subsubsection.0.12.2.2}%
\contentsline {subsubsection}{\numberline {12.2.3}Properties}{168}{subsubsection.0.12.2.3}%
\contentsline {subsection}{\numberline {12.3}B-trees}{169}{subsection.0.12.3}%
\contentsline {section}{\numberline {13}Hashing (hash tables)}{170}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Direct-address table}{170}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}Hash tables}{171}{subsection.0.13.2}%
\contentsline {subsection}{\numberline {13.3}Independent uniform hashing}{172}{subsection.0.13.3}%
\contentsline {subsection}{\numberline {13.4}Collision resolution by chaining}{172}{subsection.0.13.4}%
\contentsline {subsection}{\numberline {13.5}Analysis of hashing with chaining}{173}{subsection.0.13.5}%
\contentsline {subsection}{\numberline {13.6}Hash functions}{173}{subsection.0.13.6}%
\contentsline {subsubsection}{\numberline {13.6.1}Static hashing}{174}{subsubsection.0.13.6.1}%
\contentsline {subsubsection}{\numberline {13.6.2}The division method}{174}{subsubsection.0.13.6.2}%
\contentsline {subsubsection}{\numberline {13.6.3}The multiplication method}{175}{subsubsection.0.13.6.3}%
\contentsline {subsection}{\numberline {13.7}Open addressing}{175}{subsection.0.13.7}%
\contentsline {subsubsection}{\numberline {13.7.1}Linear probing}{175}{subsubsection.0.13.7.1}%
\contentsline {subsubsection}{\numberline {13.7.2}Quadratic probing}{176}{subsubsection.0.13.7.2}%
\contentsline {subsubsection}{\numberline {13.7.3}Deletion problem in open addressing}{176}{subsubsection.0.13.7.3}%
\contentsline {subsubsection}{\numberline {13.7.4}Tombstoning}{176}{subsubsection.0.13.7.4}%
\contentsline {subsubsection}{\numberline {13.7.5}Lazy deletion}{177}{subsubsection.0.13.7.5}%
\contentsline {subsubsection}{\numberline {13.7.6}Rehashing}{177}{subsubsection.0.13.7.6}%
\contentsline {subsection}{\numberline {13.8}Load factor}{178}{subsection.0.13.8}%
\contentsline {subsection}{\numberline {13.9}Static hashing}{178}{subsection.0.13.9}%
\contentsline {subsection}{\numberline {13.10}Static linear hashing}{178}{subsection.0.13.10}%
\contentsline {subsection}{\numberline {13.11}Static hashing with linear probe implementation}{179}{subsection.0.13.11}%
\contentsline {subsubsection}{\numberline {13.11.1}Interface}{179}{subsubsection.0.13.11.1}%
\contentsline {subsubsection}{\numberline {13.11.2}The basics}{179}{subsubsection.0.13.11.2}%
\contentsline {subsubsection}{\numberline {13.11.3}The hash function}{179}{subsubsection.0.13.11.3}%
\contentsline {subsubsection}{\numberline {13.11.4}Inserts}{180}{subsubsection.0.13.11.4}%
\contentsline {subsubsection}{\numberline {13.11.5}Searching}{181}{subsubsection.0.13.11.5}%
\contentsline {subsubsection}{\numberline {13.11.6}Removing}{181}{subsubsection.0.13.11.6}%
\contentsline {subsubsection}{\numberline {13.11.7}Searching and removing with tombstones}{181}{subsubsection.0.13.11.7}%
\contentsline {subsection}{\numberline {13.12}Static hashing with quadratic probing implementation}{184}{subsection.0.13.12}%
\contentsline {subsubsection}{\numberline {13.12.1}Inserting}{184}{subsubsection.0.13.12.1}%
\contentsline {subsubsection}{\numberline {13.12.2}Searching}{185}{subsubsection.0.13.12.2}%
\contentsline {subsubsection}{\numberline {13.12.3}Removing}{186}{subsubsection.0.13.12.3}%
\contentsline {subsection}{\numberline {13.13}Static hashing with chaining implementation}{187}{subsection.0.13.13}%
\contentsline {subsubsection}{\numberline {13.13.1}The basics}{187}{subsubsection.0.13.13.1}%
\contentsline {subsubsection}{\numberline {13.13.2}Inserting}{187}{subsubsection.0.13.13.2}%
\contentsline {subsubsection}{\numberline {13.13.3}Searching}{187}{subsubsection.0.13.13.3}%
\contentsline {subsubsection}{\numberline {13.13.4}Removing}{188}{subsubsection.0.13.13.4}%
\contentsline {subsection}{\numberline {13.14}Injective hashing}{189}{subsection.0.13.14}%
\contentsline {subsection}{\numberline {13.15}Perfect hashing}{189}{subsection.0.13.15}%
\contentsline {section}{\numberline {14}Implementing an unordered\_map}{190}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Fields}{190}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}Interface}{190}{subsection.0.14.2}%
\contentsline {subsection}{\numberline {14.3}Public methods: Hash and rehash}{191}{subsection.0.14.3}%
\contentsline {subsection}{\numberline {14.4}Inserting and erasing}{191}{subsection.0.14.4}%
\contentsline {subsubsection}{\numberline {14.4.1}Insertion}{191}{subsubsection.0.14.4.1}%
\contentsline {subsubsection}{\numberline {14.4.2}Erasing}{192}{subsubsection.0.14.4.2}%
\contentsline {subsection}{\numberline {14.5}Finding and checking if the map is empty}{192}{subsection.0.14.5}%
\contentsline {subsubsection}{\numberline {14.5.1}Finding}{192}{subsubsection.0.14.5.1}%
\contentsline {subsubsection}{\numberline {14.5.2}Empty}{192}{subsubsection.0.14.5.2}%
\contentsline {subsection}{\numberline {14.6}The subscript operator}{193}{subsection.0.14.6}%
\contentsline {section}{\numberline {15}Table indexing and row-major order}{194}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Row-major order}{194}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}Row-major order in c++}{195}{subsection.0.15.2}%
\contentsline {section}{\numberline {16}Graphs}{196}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Simple Graph}{196}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Undirected graph}{196}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Directed graph}{196}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}Weighted Graph}{196}{subsection.0.16.4}%
\contentsline {subsection}{\numberline {16.5}Complete Graph}{197}{subsection.0.16.5}%
\contentsline {subsection}{\numberline {16.6}More terms}{197}{subsection.0.16.6}%
\contentsline {subsection}{\numberline {16.7}Graph representations}{197}{subsection.0.16.7}%
\contentsline {subsection}{\numberline {16.8}Interface of adjacency lists and matrices}{198}{subsection.0.16.8}%
\contentsline {subsection}{\numberline {16.9}Complexities for adjacency operations}{198}{subsection.0.16.9}%
\contentsline {subsection}{\numberline {16.10}Graph traversal/search}{198}{subsection.0.16.10}%
\contentsline {subsubsection}{\numberline {16.10.1}Breadth-first-traversal}{199}{subsubsection.0.16.10.1}%
\contentsline {subsubsection}{\numberline {16.10.2}Depth-first traversal}{199}{subsubsection.0.16.10.2}%
\contentsline {subsection}{\numberline {16.11}Shortest path problems}{199}{subsection.0.16.11}%
\contentsline {subsubsection}{\numberline {16.11.1}Dijkstra's shortest path algorithm}{200}{subsubsection.0.16.11.1}%
\contentsline {subsubsection}{\numberline {16.11.2}Dijkstras's algorithm in c++}{201}{subsubsection.0.16.11.2}%
\contentsline {subsection}{\numberline {16.12}Undirected graph in c++ with an adjacency list}{203}{subsection.0.16.12}%
\contentsline {subsubsection}{\numberline {16.12.1}Internal structure}{203}{subsubsection.0.16.12.1}%
\contentsline {subsubsection}{\numberline {16.12.2}Interface}{203}{subsubsection.0.16.12.2}%
\contentsline {subsubsection}{\numberline {16.12.3}Adding edges}{203}{subsubsection.0.16.12.3}%
\contentsline {subsubsection}{\numberline {16.12.4}Adding nodes}{204}{subsubsection.0.16.12.4}%
\contentsline {subsubsection}{\numberline {16.12.5}Getting the neighbors}{204}{subsubsection.0.16.12.5}%
\contentsline {subsubsection}{\numberline {16.12.6}Checking if an edge exists}{204}{subsubsection.0.16.12.6}%
\contentsline {subsubsection}{\numberline {16.12.7}Breadth first traversal}{205}{subsubsection.0.16.12.7}%
\contentsline {subsubsection}{\numberline {16.12.8}Breadth first search to find the shortest path}{206}{subsubsection.0.16.12.8}%
\contentsline {subsubsection}{\numberline {16.12.9}Depth first traversal}{207}{subsubsection.0.16.12.9}%
\contentsline {subsection}{\numberline {16.13}Undirected graph in c++ with adjacency matrix}{208}{subsection.0.16.13}%
\contentsline {subsubsection}{\numberline {16.13.1}Setup}{208}{subsubsection.0.16.13.1}%
\contentsline {subsubsection}{\numberline {16.13.2}Adding an edge}{208}{subsubsection.0.16.13.2}%
\contentsline {subsubsection}{\numberline {16.13.3}Removing an edge}{208}{subsubsection.0.16.13.3}%
\contentsline {subsubsection}{\numberline {16.13.4}Getting neighbors}{208}{subsubsection.0.16.13.4}%
\contentsline {subsubsection}{\numberline {16.13.5}Checking if an edge exists}{209}{subsubsection.0.16.13.5}%
\contentsline {subsubsection}{\numberline {16.13.6}Breadth-first traversal}{210}{subsubsection.0.16.13.6}%
\contentsline {subsubsection}{\numberline {16.13.7}Depth-first traversal}{211}{subsubsection.0.16.13.7}%
\contentsline {subsection}{\numberline {16.14}Weighted graph in C++ with an adjacency matrix}{212}{subsection.0.16.14}%
\contentsline {subsubsection}{\numberline {16.14.1}Setup}{212}{subsubsection.0.16.14.1}%
\contentsline {subsubsection}{\numberline {16.14.2}Adding and removing edges}{212}{subsubsection.0.16.14.2}%
\contentsline {subsubsection}{\numberline {16.14.3}Dijkstra}{213}{subsubsection.0.16.14.3}%
\contentsline {subsection}{\numberline {16.15}Weighted graph in c++ with structure}{214}{subsection.0.16.15}%
\contentsline {subsection}{\numberline {16.16}Topological sort (DFS approach)}{215}{subsection.0.16.16}%
\contentsline {subsubsection}{\numberline {16.16.1}C++ Setup}{215}{subsubsection.0.16.16.1}%
\contentsline {subsubsection}{\numberline {16.16.2}Topological sort with dfs helper}{215}{subsubsection.0.16.16.2}%
\contentsline {subsection}{\numberline {16.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{217}{subsection.0.16.17}%
\contentsline {subsubsection}{\numberline {16.17.1}Class structure and Fields}{217}{subsubsection.0.16.17.1}%
\contentsline {subsubsection}{\numberline {16.17.2}Find}{217}{subsubsection.0.16.17.2}%
\contentsline {subsubsection}{\numberline {16.17.3}Union}{218}{subsubsection.0.16.17.3}%
\contentsline {subsubsection}{\numberline {16.17.4}Find and union optimizations}{218}{subsubsection.0.16.17.4}%
\contentsline {subsection}{\numberline {16.18}Using UnionFind}{219}{subsection.0.16.18}%
\contentsline {subsection}{\numberline {16.19}Minimum spanning trees}{220}{subsection.0.16.19}%
\contentsline {subsubsection}{\numberline {16.19.1}Kruskal's algorithm}{220}{subsubsection.0.16.19.1}%
\contentsline {section}{\numberline {17}Prefix and suffix sums, products, etc}{223}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Suffix sums and products}{223}{subsection.0.17.1}%
\contentsline {section}{\numberline {18}Two pointer}{225}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Two Sum II - Input Array Is Sorted}{225}{subsection.0.18.1}%
\contentsline {subsection}{\numberline {18.2}Is valid palindrome}{226}{subsection.0.18.2}%
\contentsline {section}{\numberline {19}Greedy algorithms}{227}{section.0.19}%
\contentsline {section}{\numberline {20}Subarray problems}{228}{section.0.20}%
\contentsline {subsection}{\numberline {20.1}Brute force subarray generation ($O(n^{2})$)}{228}{subsection.0.20.1}%
\contentsline {subsection}{\numberline {20.2}Max subarray sum: Kadane's algorithm ($O(n)$)}{228}{subsection.0.20.2}%
\contentsline {section}{\numberline {21}Divide and conquer}{229}{section.0.21}%
\contentsline {section}{\numberline {22}Math algorithms}{230}{section.0.22}%
\contentsline {subsection}{\numberline {22.1}Euclidean GCD Algorithm}{230}{subsection.0.22.1}%
\contentsline {subsubsection}{\numberline {22.1.1}GCD of some integer collection}{230}{subsubsection.0.22.1.1}%
\contentsline {subsection}{\numberline {22.2}Fibonacci numbers in constant time}{231}{subsection.0.22.2}%
\contentsline {subsection}{\numberline {22.3}Sterlings factorial approximation}{231}{subsection.0.22.3}%
\contentsline {subsection}{\numberline {22.4}square roots}{231}{subsection.0.22.4}%
\contentsline {subsubsection}{\numberline {22.4.1}Naive $O(\sqrt {n})$}{231}{subsubsection.0.22.4.1}%
\contentsline {subsubsection}{\numberline {22.4.2}$O(\lg (n))$ binary search approach}{232}{subsubsection.0.22.4.2}%
\contentsline {subsection}{\numberline {22.5}Fast exponentiation ($O(\lg (n))$)}{233}{subsection.0.22.5}%
\contentsline {subsubsection}{\numberline {22.5.1}Recursive}{233}{subsubsection.0.22.5.1}%
\contentsline {subsection}{\numberline {22.6}Bitwise power of two}{235}{subsection.0.22.6}%
