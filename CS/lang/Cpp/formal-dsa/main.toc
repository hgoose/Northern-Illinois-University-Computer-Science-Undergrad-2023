\contentsline {section}{\numberline {1}Preface}{11}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{11}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{11}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{12}{section.0.2}%
\contentsline {section}{\numberline {3}Linked lists}{19}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Singly-linked lists}{19}{subsection.0.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Structure of the node}{19}{subsubsection.0.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}The list class/struct}{20}{subsubsection.0.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Interface of a singly linked list stack}{20}{subsubsection.0.3.1.3}%
\contentsline {subsubsection}{\numberline {3.1.4}Traversing}{21}{subsubsection.0.3.1.4}%
\contentsline {subsubsection}{\numberline {3.1.5}Printing}{22}{subsubsection.0.3.1.5}%
\contentsline {subsubsection}{\numberline {3.1.6}Printing in reverse}{23}{subsubsection.0.3.1.6}%
\contentsline {subsubsection}{\numberline {3.1.7}Getting the length}{24}{subsubsection.0.3.1.7}%
\contentsline {subsubsection}{\numberline {3.1.8}Clearing}{25}{subsubsection.0.3.1.8}%
\contentsline {subsubsection}{\numberline {3.1.9}Reversing}{26}{subsubsection.0.3.1.9}%
\contentsline {subsubsection}{\numberline {3.1.10}Pushing}{27}{subsubsection.0.3.1.10}%
\contentsline {subsubsection}{\numberline {3.1.11}Inserting}{28}{subsubsection.0.3.1.11}%
\contentsline {subsubsection}{\numberline {3.1.12}Popping}{29}{subsubsection.0.3.1.12}%
\contentsline {subsubsection}{\numberline {3.1.13}Erasing}{30}{subsubsection.0.3.1.13}%
\contentsline {subsubsection}{\numberline {3.1.14}Searching}{31}{subsubsection.0.3.1.14}%
\contentsline {subsection}{\numberline {3.2}Doubly-linked list}{32}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}Node structure}{32}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The list class}{32}{subsubsection.0.3.2.2}%
\contentsline {subsubsection}{\numberline {3.2.3}push\_back and push\_front}{33}{subsubsection.0.3.2.3}%
\contentsline {subsubsection}{\numberline {3.2.4}pop\_back and pop\_frot}{34}{subsubsection.0.3.2.4}%
\contentsline {subsubsection}{\numberline {3.2.5}Searching}{35}{subsubsection.0.3.2.5}%
\contentsline {section}{\numberline {4}Recursion}{36}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Recursion vs iteration}{36}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Elementary recursion}{37}{subsection.0.4.2}%
\contentsline {subsection}{\numberline {4.3}Base cases}{37}{subsection.0.4.3}%
\contentsline {subsubsection}{\numberline {4.3.1}Factorials}{37}{subsubsection.0.4.3.1}%
\contentsline {subsubsection}{\numberline {4.3.2}Powers}{38}{subsubsection.0.4.3.2}%
\contentsline {subsection}{\numberline {4.4}Tail recursion}{39}{subsection.0.4.4}%
\contentsline {subsection}{\numberline {4.5}Indirect Recursion}{41}{subsection.0.4.5}%
\contentsline {subsection}{\numberline {4.6}Nested Recursion}{42}{subsection.0.4.6}%
\contentsline {subsection}{\numberline {4.7}Excessive Recursion}{42}{subsection.0.4.7}%
\contentsline {subsection}{\numberline {4.8}Backtracking}{44}{subsection.0.4.8}%
\contentsline {subsubsection}{\numberline {4.8.1}N-Queens}{45}{subsubsection.0.4.8.1}%
\contentsline {subsubsection}{\numberline {4.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{46}{subsubsection.0.4.8.2}%
\contentsline {subsubsection}{\numberline {4.8.3}Combinations}{50}{subsubsection.0.4.8.3}%
\contentsline {subsubsection}{\numberline {4.8.4}Combinations that sum to $m$}{51}{subsubsection.0.4.8.4}%
\contentsline {subsubsection}{\numberline {4.8.5}Permutations}{52}{subsubsection.0.4.8.5}%
\contentsline {subsection}{\numberline {4.9}Recursion in singly linked lists}{53}{subsection.0.4.9}%
\contentsline {subsubsection}{\numberline {4.9.1}Traversing}{53}{subsubsection.0.4.9.1}%
\contentsline {subsubsection}{\numberline {4.9.2}Printing}{53}{subsubsection.0.4.9.2}%
\contentsline {subsubsection}{\numberline {4.9.3}Printing in reverse}{53}{subsubsection.0.4.9.3}%
\contentsline {subsubsection}{\numberline {4.9.4}Getting the length}{54}{subsubsection.0.4.9.4}%
\contentsline {subsubsection}{\numberline {4.9.5}Clearing}{54}{subsubsection.0.4.9.5}%
\contentsline {subsubsection}{\numberline {4.9.6}Reversing}{55}{subsubsection.0.4.9.6}%
\contentsline {subsubsection}{\numberline {4.9.7}Pushing}{57}{subsubsection.0.4.9.7}%
\contentsline {subsubsection}{\numberline {4.9.8}Inserting}{58}{subsubsection.0.4.9.8}%
\contentsline {subsubsection}{\numberline {4.9.9}Popping}{59}{subsubsection.0.4.9.9}%
\contentsline {subsubsection}{\numberline {4.9.10}Erasing}{60}{subsubsection.0.4.9.10}%
\contentsline {subsubsection}{\numberline {4.9.11}Searching}{61}{subsubsection.0.4.9.11}%
\contentsline {section}{\numberline {5}Dynamic programming}{62}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Key Concepts of DP}{62}{subsection.0.5.1}%
\contentsline {subsection}{\numberline {5.2}Bottom-up DP}{62}{subsection.0.5.2}%
\contentsline {subsubsection}{\numberline {5.2.1}Key Characteristics}{62}{subsubsection.0.5.2.1}%
\contentsline {subsubsection}{\numberline {5.2.2}Steps for Bottom-Up DP}{62}{subsubsection.0.5.2.2}%
\contentsline {subsection}{\numberline {5.3}Bottom-up DP: Fibonacci}{63}{subsection.0.5.3}%
\contentsline {subsection}{\numberline {5.4}Memoization (top down DP)}{63}{subsection.0.5.4}%
\contentsline {subsection}{\numberline {5.5}Top-down DP: Fibonacci}{64}{subsection.0.5.5}%
\contentsline {section}{\numberline {6}Binary trees}{65}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Terminology}{65}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Type of binary trees}{66}{subsection.0.6.2}%
\contentsline {subsection}{\numberline {6.3}Maximum height of a binary tree}{67}{subsection.0.6.3}%
\contentsline {subsubsection}{\numberline {6.3.1}Minimum height of a binary tree}{67}{subsubsection.0.6.3.1}%
\contentsline {subsubsection}{\numberline {6.3.2}Number of Leaves in a Binary Tree}{67}{subsubsection.0.6.3.2}%
\contentsline {subsubsection}{\numberline {6.3.3}Relationship Between Internal Nodes and Leaves:}{67}{subsubsection.0.6.3.3}%
\contentsline {subsubsection}{\numberline {6.3.4}Maximum Number of Nodes at Height h}{67}{subsubsection.0.6.3.4}%
\contentsline {subsubsection}{\numberline {6.3.5}Number of Edges in a Binary Tree:}{68}{subsubsection.0.6.3.5}%
\contentsline {subsection}{\numberline {6.4}Full trees}{69}{subsection.0.6.4}%
\contentsline {subsubsection}{\numberline {6.4.1}Number of leaves}{69}{subsubsection.0.6.4.1}%
\contentsline {subsubsection}{\numberline {6.4.2}Number of nodes}{70}{subsubsection.0.6.4.2}%
\contentsline {subsubsection}{\numberline {6.4.3}Number of internal nodes}{70}{subsubsection.0.6.4.3}%
\contentsline {subsection}{\numberline {6.5}Complete Binary Tree}{71}{subsection.0.6.5}%
\contentsline {subsubsection}{\numberline {6.5.1}Number of nodes}{71}{subsubsection.0.6.5.1}%
\contentsline {subsubsection}{\numberline {6.5.2}Height}{71}{subsubsection.0.6.5.2}%
\contentsline {subsubsection}{\numberline {6.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{71}{subsubsection.0.6.5.3}%
\contentsline {subsubsection}{\numberline {6.5.4}Number of internal nodes}{72}{subsubsection.0.6.5.4}%
\contentsline {subsubsection}{\numberline {6.5.5}Parent and Child Relationships in a Complete Binary Tree}{72}{subsubsection.0.6.5.5}%
\contentsline {subsection}{\numberline {6.6}Perfect binary tree}{73}{subsection.0.6.6}%
\contentsline {subsubsection}{\numberline {6.6.1}Number of Nodes}{73}{subsubsection.0.6.6.1}%
\contentsline {subsubsection}{\numberline {6.6.2}Number of Leaf Nodes}{73}{subsubsection.0.6.6.2}%
\contentsline {subsubsection}{\numberline {6.6.3}Height of the Tree}{73}{subsubsection.0.6.6.3}%
\contentsline {subsubsection}{\numberline {6.6.4}Number of Internal Nodes}{73}{subsubsection.0.6.6.4}%
\contentsline {subsubsection}{\numberline {6.6.5}Depth}{73}{subsubsection.0.6.6.5}%
\contentsline {section}{\numberline {7}Applications of binary trees}{74}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Binary search trees}{74}{subsection.0.7.1}%
\contentsline {subsubsection}{\numberline {7.1.1}Interface}{74}{subsubsection.0.7.1.1}%
\contentsline {subsubsection}{\numberline {7.1.2}Traversals}{75}{subsubsection.0.7.1.2}%
\contentsline {paragraph}{\numberline {7.1.2.1}Level order}{75}{paragraph.0.7.1.2.1}%
\contentsline {paragraph}{\numberline {7.1.2.2}Preorder}{76}{paragraph.0.7.1.2.2}%
\contentsline {paragraph}{\numberline {7.1.2.3}Inorder}{76}{paragraph.0.7.1.2.3}%
\contentsline {paragraph}{\numberline {7.1.2.4}Postorder}{78}{paragraph.0.7.1.2.4}%
\contentsline {subsubsection}{\numberline {7.1.3}Successor of a node}{78}{subsubsection.0.7.1.3}%
\contentsline {subsubsection}{\numberline {7.1.4}Predecessor}{79}{subsubsection.0.7.1.4}%
\contentsline {subsubsection}{\numberline {7.1.5}The node}{79}{subsubsection.0.7.1.5}%
\contentsline {subsubsection}{\numberline {7.1.6}The class}{79}{subsubsection.0.7.1.6}%
\contentsline {subsubsection}{\numberline {7.1.7}Recursive Insertion}{80}{subsubsection.0.7.1.7}%
\contentsline {subsubsection}{\numberline {7.1.8}A better recursive insert}{81}{subsubsection.0.7.1.8}%
\contentsline {subsubsection}{\numberline {7.1.9}Iterative insert}{82}{subsubsection.0.7.1.9}%
\contentsline {subsubsection}{\numberline {7.1.10}Recursive removing}{83}{subsubsection.0.7.1.10}%
\contentsline {subsubsection}{\numberline {7.1.11}Clearing}{85}{subsubsection.0.7.1.11}%
\contentsline {subsubsection}{\numberline {7.1.12}Counting the height of the tree (root)}{86}{subsubsection.0.7.1.12}%
\contentsline {subsubsection}{\numberline {7.1.13}Counting the height of a node}{86}{subsubsection.0.7.1.13}%
\contentsline {subsubsection}{\numberline {7.1.14}Getting the depth of the node}{87}{subsubsection.0.7.1.14}%
\contentsline {subsubsection}{\numberline {7.1.15}Counting the number of nodes}{88}{subsubsection.0.7.1.15}%
\contentsline {subsubsection}{\numberline {7.1.16}Comparison traversals}{88}{subsubsection.0.7.1.16}%
\contentsline {subsubsection}{\numberline {7.1.17}Finding the smallest and largest values}{90}{subsubsection.0.7.1.17}%
\contentsline {subsubsection}{\numberline {7.1.18}Getting the widths of a bst}{91}{subsubsection.0.7.1.18}%
\contentsline {subsubsection}{\numberline {7.1.19}Degenerate Binary Search trees}{93}{subsubsection.0.7.1.19}%
\contentsline {subsubsection}{\numberline {7.1.20}Verifying a binary search tree}{93}{subsubsection.0.7.1.20}%
\contentsline {subsubsection}{\numberline {7.1.21}Complexities}{94}{subsubsection.0.7.1.21}%
\contentsline {subsection}{\numberline {7.2}Adelson-Velsky and Landis Trees (AVL trees)}{95}{subsection.0.7.2}%
\contentsline {subsubsection}{\numberline {7.2.1}Definition}{95}{subsubsection.0.7.2.1}%
\contentsline {subsubsection}{\numberline {7.2.2}AVL Nodes}{96}{subsubsection.0.7.2.2}%
\contentsline {subsubsection}{\numberline {7.2.3}Storing the height}{96}{subsubsection.0.7.2.3}%
\contentsline {subsubsection}{\numberline {7.2.4}Defining balance factors in C++ with enums}{97}{subsubsection.0.7.2.4}%
\contentsline {subsubsection}{\numberline {7.2.5}Defining balance factors with a height calculation}{97}{subsubsection.0.7.2.5}%
\contentsline {subsubsection}{\numberline {7.2.6}Interface}{98}{subsubsection.0.7.2.6}%
\contentsline {subsubsection}{\numberline {7.2.7}Balancing an AVL tree}{98}{subsubsection.0.7.2.7}%
\contentsline {subsubsection}{\numberline {7.2.8}Rotations: Right tree}{99}{subsubsection.0.7.2.8}%
\contentsline {paragraph}{\numberline {7.2.8.1}Case 1: Right higher}{99}{paragraph.0.7.2.8.1}%
\contentsline {paragraph}{\numberline {7.2.8.2}Case 2: Left higher}{102}{paragraph.0.7.2.8.2}%
\contentsline {subsubsection}{\numberline {7.2.9}C++ Rotations}{104}{subsubsection.0.7.2.9}%
\contentsline {subsubsection}{\numberline {7.2.10}Balancing}{106}{subsubsection.0.7.2.10}%
\contentsline {subsubsection}{\numberline {7.2.11}Insertions}{107}{subsubsection.0.7.2.11}%
\contentsline {subsubsection}{\numberline {7.2.12}Removing nodes}{108}{subsubsection.0.7.2.12}%
\contentsline {subsection}{\numberline {7.3}Red-black trees}{110}{subsection.0.7.3}%
\contentsline {subsubsection}{\numberline {7.3.1}Rotations}{112}{subsubsection.0.7.3.1}%
\contentsline {subsubsection}{\numberline {7.3.2}Inserting}{114}{subsubsection.0.7.3.2}%
\contentsline {subsubsection}{\numberline {7.3.3}Deletion}{119}{subsubsection.0.7.3.3}%
\contentsline {subsubsection}{\numberline {7.3.4}C++ implementation}{123}{subsubsection.0.7.3.4}%
\contentsline {paragraph}{\numberline {7.3.4.1}The node structure}{123}{paragraph.0.7.3.4.1}%
\contentsline {paragraph}{\numberline {7.3.4.2}The tree class and defining nil}{123}{paragraph.0.7.3.4.2}%
\contentsline {paragraph}{\numberline {7.3.4.3}Rotation methods}{124}{paragraph.0.7.3.4.3}%
\contentsline {paragraph}{\numberline {7.3.4.4}Insert}{125}{paragraph.0.7.3.4.4}%
\contentsline {paragraph}{\numberline {7.3.4.5}Insert fixup}{126}{paragraph.0.7.3.4.5}%
\contentsline {subsection}{\numberline {7.4}State space tree}{127}{subsection.0.7.4}%
\contentsline {subsubsection}{\numberline {7.4.1}Generate permutations (Backtracking)}{128}{subsubsection.0.7.4.1}%
\contentsline {section}{\numberline {8}Heaps and Priority Queues (Zero based)}{129}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}Max and Min heaps}{131}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Heapify an array}{131}{subsection.0.8.2}%
\contentsline {subsection}{\numberline {8.3}Min-heap in c++}{132}{subsection.0.8.3}%
\contentsline {subsection}{\numberline {8.4}Max-heap in c++}{133}{subsection.0.8.4}%
\contentsline {subsection}{\numberline {8.5}Percolating}{134}{subsection.0.8.5}%
\contentsline {subsubsection}{\numberline {8.5.1}Percolate up}{134}{subsubsection.0.8.5.1}%
\contentsline {subsubsection}{\numberline {8.5.2}Percolate down}{135}{subsubsection.0.8.5.2}%
\contentsline {subsection}{\numberline {8.6}Inserting into a heap}{136}{subsection.0.8.6}%
\contentsline {subsection}{\numberline {8.7}Removing the root}{137}{subsection.0.8.7}%
\contentsline {subsection}{\numberline {8.8}Removing an arbitary node}{138}{subsection.0.8.8}%
\contentsline {subsection}{\numberline {8.9}Priority queues}{139}{subsection.0.8.9}%
\contentsline {subsubsection}{\numberline {8.9.1}Interface}{139}{subsubsection.0.8.9.1}%
\contentsline {subsubsection}{\numberline {8.9.2}Insert, pop, and top}{140}{subsubsection.0.8.9.2}%
\contentsline {subsubsection}{\numberline {8.9.3}Size and Empty}{141}{subsubsection.0.8.9.3}%
\contentsline {section}{\numberline {9}Sorting}{142}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Bubble, selection, insertion}{142}{subsection.0.9.1}%
\contentsline {subsubsection}{\numberline {9.1.1}Bubble sort}{142}{subsubsection.0.9.1.1}%
\contentsline {paragraph}{\numberline {9.1.1.1}Complexity}{143}{paragraph.0.9.1.1.1}%
\contentsline {subsubsection}{\numberline {9.1.2}Selection sort}{144}{subsubsection.0.9.1.2}%
\contentsline {paragraph}{\numberline {9.1.2.1}Complexity}{144}{paragraph.0.9.1.2.1}%
\contentsline {subsubsection}{\numberline {9.1.3}Insertion sort}{145}{subsubsection.0.9.1.3}%
\contentsline {paragraph}{\numberline {9.1.3.1}Complexity}{146}{paragraph.0.9.1.3.1}%
\contentsline {subsection}{\numberline {9.2}Heap sort}{147}{subsection.0.9.2}%
\contentsline {subsubsection}{\numberline {9.2.1}Complexity}{147}{subsubsection.0.9.2.1}%
\contentsline {subsection}{\numberline {9.3}BST Sort}{148}{subsection.0.9.3}%
\contentsline {subsubsection}{\numberline {9.3.1}Insert}{148}{subsubsection.0.9.3.1}%
\contentsline {subsubsection}{\numberline {9.3.2}The inorder traversal}{148}{subsubsection.0.9.3.2}%
\contentsline {subsubsection}{\numberline {9.3.3}The BST sort function}{149}{subsubsection.0.9.3.3}%
\contentsline {subsubsection}{\numberline {9.3.4}Inplace sorting}{150}{subsubsection.0.9.3.4}%
\contentsline {subsubsection}{\numberline {9.3.5}Complexity}{150}{subsubsection.0.9.3.5}%
\contentsline {subsection}{\numberline {9.4}Quick sort}{151}{subsection.0.9.4}%
\contentsline {subsubsection}{\numberline {9.4.1}Partitioning}{151}{subsubsection.0.9.4.1}%
\contentsline {subsubsection}{\numberline {9.4.2}The quick sort procedure}{152}{subsubsection.0.9.4.2}%
\contentsline {subsubsection}{\numberline {9.4.3}A better partition}{154}{subsubsection.0.9.4.3}%
\contentsline {subsubsection}{\numberline {9.4.4}Median of three partition}{154}{subsubsection.0.9.4.4}%
\contentsline {subsubsection}{\numberline {9.4.5}Quicksort with iterators}{156}{subsubsection.0.9.4.5}%
\contentsline {section}{\numberline {10}Multi-way (m-way) search trees}{157}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Multi-way Searching}{157}{subsection.0.10.1}%
\contentsline {subsection}{\numberline {10.2}2-4 (2-3-4) Trees}{158}{subsection.0.10.2}%
\contentsline {subsubsection}{\numberline {10.2.1}Insertion}{158}{subsubsection.0.10.2.1}%
\contentsline {subsubsection}{\numberline {10.2.2}Removal}{159}{subsubsection.0.10.2.2}%
\contentsline {subsubsection}{\numberline {10.2.3}Properties}{161}{subsubsection.0.10.2.3}%
\contentsline {subsection}{\numberline {10.3}B-trees}{162}{subsection.0.10.3}%
\contentsline {section}{\numberline {11}Hashing (hash tables)}{163}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Direct-address table}{163}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}Hash tables}{164}{subsection.0.11.2}%
\contentsline {subsection}{\numberline {11.3}Independent uniform hashing}{165}{subsection.0.11.3}%
\contentsline {subsection}{\numberline {11.4}Collision resolution by chaining}{165}{subsection.0.11.4}%
\contentsline {subsection}{\numberline {11.5}Analysis of hashing with chaining}{166}{subsection.0.11.5}%
\contentsline {subsection}{\numberline {11.6}Hash functions}{166}{subsection.0.11.6}%
\contentsline {subsubsection}{\numberline {11.6.1}Static hashing}{167}{subsubsection.0.11.6.1}%
\contentsline {subsubsection}{\numberline {11.6.2}The division method}{167}{subsubsection.0.11.6.2}%
\contentsline {subsubsection}{\numberline {11.6.3}The multiplication method}{168}{subsubsection.0.11.6.3}%
\contentsline {subsection}{\numberline {11.7}Open addressing}{168}{subsection.0.11.7}%
\contentsline {subsubsection}{\numberline {11.7.1}Linear probing}{168}{subsubsection.0.11.7.1}%
\contentsline {subsubsection}{\numberline {11.7.2}Quadratic probing}{169}{subsubsection.0.11.7.2}%
\contentsline {subsubsection}{\numberline {11.7.3}Deletion problem in open addressing}{169}{subsubsection.0.11.7.3}%
\contentsline {subsubsection}{\numberline {11.7.4}Tombstoning}{169}{subsubsection.0.11.7.4}%
\contentsline {subsubsection}{\numberline {11.7.5}Lazy deletion}{170}{subsubsection.0.11.7.5}%
\contentsline {subsubsection}{\numberline {11.7.6}Rehashing}{170}{subsubsection.0.11.7.6}%
\contentsline {subsection}{\numberline {11.8}Load factor}{171}{subsection.0.11.8}%
\contentsline {subsection}{\numberline {11.9}Static hashing}{171}{subsection.0.11.9}%
\contentsline {subsection}{\numberline {11.10}Static linear hashing}{171}{subsection.0.11.10}%
\contentsline {subsection}{\numberline {11.11}Static hashing with linear probe implementation}{172}{subsection.0.11.11}%
\contentsline {subsubsection}{\numberline {11.11.1}Interface}{172}{subsubsection.0.11.11.1}%
\contentsline {subsubsection}{\numberline {11.11.2}The basics}{172}{subsubsection.0.11.11.2}%
\contentsline {subsubsection}{\numberline {11.11.3}The hash function}{172}{subsubsection.0.11.11.3}%
\contentsline {subsubsection}{\numberline {11.11.4}Inserts}{173}{subsubsection.0.11.11.4}%
\contentsline {subsubsection}{\numberline {11.11.5}Searching}{174}{subsubsection.0.11.11.5}%
\contentsline {subsubsection}{\numberline {11.11.6}Removing}{174}{subsubsection.0.11.11.6}%
\contentsline {subsubsection}{\numberline {11.11.7}Searching and removing with tombstones}{174}{subsubsection.0.11.11.7}%
\contentsline {subsection}{\numberline {11.12}Static hashing with quadratic probing implementation}{177}{subsection.0.11.12}%
\contentsline {subsubsection}{\numberline {11.12.1}Inserting}{177}{subsubsection.0.11.12.1}%
\contentsline {subsubsection}{\numberline {11.12.2}Searching}{178}{subsubsection.0.11.12.2}%
\contentsline {subsubsection}{\numberline {11.12.3}Removing}{179}{subsubsection.0.11.12.3}%
\contentsline {subsection}{\numberline {11.13}Static hashing with chaining implementation}{180}{subsection.0.11.13}%
\contentsline {subsubsection}{\numberline {11.13.1}The basics}{180}{subsubsection.0.11.13.1}%
\contentsline {subsubsection}{\numberline {11.13.2}Inserting}{180}{subsubsection.0.11.13.2}%
\contentsline {subsubsection}{\numberline {11.13.3}Searching}{180}{subsubsection.0.11.13.3}%
\contentsline {subsubsection}{\numberline {11.13.4}Removing}{181}{subsubsection.0.11.13.4}%
\contentsline {subsection}{\numberline {11.14}Injective hashing}{182}{subsection.0.11.14}%
\contentsline {subsection}{\numberline {11.15}Perfect hashing}{182}{subsection.0.11.15}%
\contentsline {section}{\numberline {12}Implementing an unordered\_map}{183}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Fields}{183}{subsection.0.12.1}%
\contentsline {subsection}{\numberline {12.2}Interface}{183}{subsection.0.12.2}%
\contentsline {subsection}{\numberline {12.3}Public methods: Hash and rehash}{184}{subsection.0.12.3}%
\contentsline {subsection}{\numberline {12.4}Inserting and erasing}{184}{subsection.0.12.4}%
\contentsline {subsubsection}{\numberline {12.4.1}Insertion}{184}{subsubsection.0.12.4.1}%
\contentsline {subsubsection}{\numberline {12.4.2}Erasing}{185}{subsubsection.0.12.4.2}%
\contentsline {subsection}{\numberline {12.5}Finding and checking if the map is empty}{185}{subsection.0.12.5}%
\contentsline {subsubsection}{\numberline {12.5.1}Finding}{185}{subsubsection.0.12.5.1}%
\contentsline {subsubsection}{\numberline {12.5.2}Empty}{185}{subsubsection.0.12.5.2}%
\contentsline {subsection}{\numberline {12.6}The subscript operator}{186}{subsection.0.12.6}%
\contentsline {section}{\numberline {13}Table indexing and row-major order}{187}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Row-major order}{187}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}Row-major order in c++}{188}{subsection.0.13.2}%
\contentsline {section}{\numberline {14}Graphs}{189}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Simple Graph}{189}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}Undirected graph}{189}{subsection.0.14.2}%
\contentsline {subsection}{\numberline {14.3}Directed graph}{189}{subsection.0.14.3}%
\contentsline {subsection}{\numberline {14.4}Weighted Graph}{189}{subsection.0.14.4}%
\contentsline {subsection}{\numberline {14.5}Complete Graph}{190}{subsection.0.14.5}%
\contentsline {subsection}{\numberline {14.6}More terms}{190}{subsection.0.14.6}%
\contentsline {subsection}{\numberline {14.7}Graph representations}{190}{subsection.0.14.7}%
\contentsline {subsection}{\numberline {14.8}Interface of adjacency lists and matrices}{191}{subsection.0.14.8}%
\contentsline {subsection}{\numberline {14.9}Complexities for adjacency operations}{191}{subsection.0.14.9}%
\contentsline {subsection}{\numberline {14.10}Graph traversal/search}{191}{subsection.0.14.10}%
\contentsline {subsubsection}{\numberline {14.10.1}Breadth-first-traversal}{192}{subsubsection.0.14.10.1}%
\contentsline {subsubsection}{\numberline {14.10.2}Depth-first traversal}{192}{subsubsection.0.14.10.2}%
\contentsline {subsection}{\numberline {14.11}Shortest path problems}{192}{subsection.0.14.11}%
\contentsline {subsubsection}{\numberline {14.11.1}Dijkstra's shortest path algorithm}{193}{subsubsection.0.14.11.1}%
\contentsline {subsubsection}{\numberline {14.11.2}Dijkstras's algorithm in c++}{194}{subsubsection.0.14.11.2}%
\contentsline {subsection}{\numberline {14.12}Undirected graph in c++ with an adjacency list}{196}{subsection.0.14.12}%
\contentsline {subsubsection}{\numberline {14.12.1}Internal structure}{196}{subsubsection.0.14.12.1}%
\contentsline {subsubsection}{\numberline {14.12.2}Interface}{196}{subsubsection.0.14.12.2}%
\contentsline {subsubsection}{\numberline {14.12.3}Adding edges}{196}{subsubsection.0.14.12.3}%
\contentsline {subsubsection}{\numberline {14.12.4}Adding nodes}{197}{subsubsection.0.14.12.4}%
\contentsline {subsubsection}{\numberline {14.12.5}Getting the neighbors}{197}{subsubsection.0.14.12.5}%
\contentsline {subsubsection}{\numberline {14.12.6}Checking if an edge exists}{197}{subsubsection.0.14.12.6}%
\contentsline {subsubsection}{\numberline {14.12.7}Breadth first traversal}{198}{subsubsection.0.14.12.7}%
\contentsline {subsubsection}{\numberline {14.12.8}Breadth first search to find the shortest path}{199}{subsubsection.0.14.12.8}%
\contentsline {subsubsection}{\numberline {14.12.9}Depth first traversal}{200}{subsubsection.0.14.12.9}%
\contentsline {subsection}{\numberline {14.13}Undirected graph in c++ with adjacency matrix}{201}{subsection.0.14.13}%
\contentsline {subsubsection}{\numberline {14.13.1}Setup}{201}{subsubsection.0.14.13.1}%
\contentsline {subsubsection}{\numberline {14.13.2}Adding an edge}{201}{subsubsection.0.14.13.2}%
\contentsline {subsubsection}{\numberline {14.13.3}Removing an edge}{201}{subsubsection.0.14.13.3}%
\contentsline {subsubsection}{\numberline {14.13.4}Getting neighbors}{201}{subsubsection.0.14.13.4}%
\contentsline {subsubsection}{\numberline {14.13.5}Checking if an edge exists}{202}{subsubsection.0.14.13.5}%
\contentsline {subsubsection}{\numberline {14.13.6}Breadth-first traversal}{203}{subsubsection.0.14.13.6}%
\contentsline {subsubsection}{\numberline {14.13.7}Depth-first traversal}{204}{subsubsection.0.14.13.7}%
\contentsline {subsection}{\numberline {14.14}Weighted graph in C++ with an adjacency matrix}{205}{subsection.0.14.14}%
\contentsline {subsubsection}{\numberline {14.14.1}Setup}{205}{subsubsection.0.14.14.1}%
\contentsline {subsubsection}{\numberline {14.14.2}Adding and removing edges}{205}{subsubsection.0.14.14.2}%
\contentsline {subsubsection}{\numberline {14.14.3}Dijkstra}{206}{subsubsection.0.14.14.3}%
\contentsline {subsection}{\numberline {14.15}Weighted graph in c++ with structure}{207}{subsection.0.14.15}%
\contentsline {subsection}{\numberline {14.16}Topological sort (DFS approach)}{208}{subsection.0.14.16}%
\contentsline {subsubsection}{\numberline {14.16.1}C++ Setup}{208}{subsubsection.0.14.16.1}%
\contentsline {subsubsection}{\numberline {14.16.2}Topological sort with dfs helper}{208}{subsubsection.0.14.16.2}%
\contentsline {subsection}{\numberline {14.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{210}{subsection.0.14.17}%
\contentsline {subsubsection}{\numberline {14.17.1}Class structure and Fields}{210}{subsubsection.0.14.17.1}%
\contentsline {subsubsection}{\numberline {14.17.2}Find}{210}{subsubsection.0.14.17.2}%
\contentsline {subsubsection}{\numberline {14.17.3}Union}{211}{subsubsection.0.14.17.3}%
\contentsline {subsubsection}{\numberline {14.17.4}Find and union optimizations}{211}{subsubsection.0.14.17.4}%
\contentsline {subsection}{\numberline {14.18}Using UnionFind}{212}{subsection.0.14.18}%
\contentsline {subsection}{\numberline {14.19}Minimum spanning trees}{213}{subsection.0.14.19}%
\contentsline {subsubsection}{\numberline {14.19.1}Kruskal's algorithm}{213}{subsubsection.0.14.19.1}%
\contentsline {section}{\numberline {15}Prefix and suffix sums, products, etc}{216}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Suffix sums and products}{216}{subsection.0.15.1}%
\contentsline {section}{\numberline {16}Math algorithms}{218}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Euclidean GCD Algorithm}{218}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Fibonacci numbers in constant time}{218}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Sterlings factorial approximation}{218}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}square roots}{218}{subsection.0.16.4}%
\contentsline {subsubsection}{\numberline {16.4.1}Naive $O(\sqrt {n})$}{219}{subsubsection.0.16.4.1}%
\contentsline {subsubsection}{\numberline {16.4.2}$O(\lg (n))$ binary search approach}{219}{subsubsection.0.16.4.2}%
