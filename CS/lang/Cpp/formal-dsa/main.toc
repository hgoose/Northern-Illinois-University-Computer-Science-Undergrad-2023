\contentsline {section}{\numberline {1}Preface}{12}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{12}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{12}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{13}{section.0.2}%
\contentsline {section}{\numberline {3}Sliding window}{20}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Types of Sliding Window Problems}{20}{subsection.0.3.1}%
\contentsline {subsection}{\numberline {3.2}Minimum Recolors to Get K Consecutive Black Blocks}{20}{subsection.0.3.2}%
\contentsline {section}{\numberline {4}Linked lists}{22}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Singly-linked lists}{22}{subsection.0.4.1}%
\contentsline {subsubsection}{\numberline {4.1.1}Structure of the node}{22}{subsubsection.0.4.1.1}%
\contentsline {subsubsection}{\numberline {4.1.2}The list class/struct}{23}{subsubsection.0.4.1.2}%
\contentsline {subsubsection}{\numberline {4.1.3}Interface of a singly linked list stack}{23}{subsubsection.0.4.1.3}%
\contentsline {subsubsection}{\numberline {4.1.4}Traversing}{24}{subsubsection.0.4.1.4}%
\contentsline {subsubsection}{\numberline {4.1.5}Printing}{25}{subsubsection.0.4.1.5}%
\contentsline {subsubsection}{\numberline {4.1.6}Printing in reverse}{26}{subsubsection.0.4.1.6}%
\contentsline {subsubsection}{\numberline {4.1.7}Getting the length}{27}{subsubsection.0.4.1.7}%
\contentsline {subsubsection}{\numberline {4.1.8}Clearing}{28}{subsubsection.0.4.1.8}%
\contentsline {subsubsection}{\numberline {4.1.9}Reversing}{29}{subsubsection.0.4.1.9}%
\contentsline {subsubsection}{\numberline {4.1.10}Pushing}{30}{subsubsection.0.4.1.10}%
\contentsline {subsubsection}{\numberline {4.1.11}Inserting}{31}{subsubsection.0.4.1.11}%
\contentsline {subsubsection}{\numberline {4.1.12}Popping}{32}{subsubsection.0.4.1.12}%
\contentsline {subsubsection}{\numberline {4.1.13}Erasing}{33}{subsubsection.0.4.1.13}%
\contentsline {subsubsection}{\numberline {4.1.14}Searching}{34}{subsubsection.0.4.1.14}%
\contentsline {subsection}{\numberline {4.2}Doubly-linked list}{35}{subsection.0.4.2}%
\contentsline {subsubsection}{\numberline {4.2.1}Node structure}{35}{subsubsection.0.4.2.1}%
\contentsline {subsubsection}{\numberline {4.2.2}The list class}{35}{subsubsection.0.4.2.2}%
\contentsline {subsubsection}{\numberline {4.2.3}push\_back and push\_front}{36}{subsubsection.0.4.2.3}%
\contentsline {subsubsection}{\numberline {4.2.4}pop\_back and pop\_frot}{37}{subsubsection.0.4.2.4}%
\contentsline {subsubsection}{\numberline {4.2.5}Searching}{38}{subsubsection.0.4.2.5}%
\contentsline {section}{\numberline {5}Monotonic stack}{39}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Next greater element}{39}{subsection.0.5.1}%
\contentsline {subsection}{\numberline {5.2}Next smaller element}{40}{subsection.0.5.2}%
\contentsline {section}{\numberline {6}Recursion}{41}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Recursion vs iteration}{41}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Elementary recursion}{42}{subsection.0.6.2}%
\contentsline {subsection}{\numberline {6.3}Base cases}{42}{subsection.0.6.3}%
\contentsline {subsubsection}{\numberline {6.3.1}Factorials}{42}{subsubsection.0.6.3.1}%
\contentsline {subsubsection}{\numberline {6.3.2}Powers}{43}{subsubsection.0.6.3.2}%
\contentsline {subsection}{\numberline {6.4}Tail recursion}{44}{subsection.0.6.4}%
\contentsline {subsection}{\numberline {6.5}Indirect Recursion}{46}{subsection.0.6.5}%
\contentsline {subsection}{\numberline {6.6}Nested Recursion}{47}{subsection.0.6.6}%
\contentsline {subsection}{\numberline {6.7}Excessive Recursion}{47}{subsection.0.6.7}%
\contentsline {subsection}{\numberline {6.8}Backtracking}{49}{subsection.0.6.8}%
\contentsline {subsubsection}{\numberline {6.8.1}N-Queens}{50}{subsubsection.0.6.8.1}%
\contentsline {subsubsection}{\numberline {6.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{51}{subsubsection.0.6.8.2}%
\contentsline {subsubsection}{\numberline {6.8.3}Combinations}{55}{subsubsection.0.6.8.3}%
\contentsline {subsubsection}{\numberline {6.8.4}Combinations that sum to $m$}{56}{subsubsection.0.6.8.4}%
\contentsline {subsubsection}{\numberline {6.8.5}Permutations}{57}{subsubsection.0.6.8.5}%
\contentsline {subsection}{\numberline {6.9}Recursion in singly linked lists}{58}{subsection.0.6.9}%
\contentsline {subsubsection}{\numberline {6.9.1}Traversing}{58}{subsubsection.0.6.9.1}%
\contentsline {subsubsection}{\numberline {6.9.2}Printing}{58}{subsubsection.0.6.9.2}%
\contentsline {subsubsection}{\numberline {6.9.3}Printing in reverse}{58}{subsubsection.0.6.9.3}%
\contentsline {subsubsection}{\numberline {6.9.4}Getting the length}{59}{subsubsection.0.6.9.4}%
\contentsline {subsubsection}{\numberline {6.9.5}Clearing}{59}{subsubsection.0.6.9.5}%
\contentsline {subsubsection}{\numberline {6.9.6}Reversing}{60}{subsubsection.0.6.9.6}%
\contentsline {subsubsection}{\numberline {6.9.7}Pushing}{62}{subsubsection.0.6.9.7}%
\contentsline {subsubsection}{\numberline {6.9.8}Inserting}{63}{subsubsection.0.6.9.8}%
\contentsline {subsubsection}{\numberline {6.9.9}Popping}{64}{subsubsection.0.6.9.9}%
\contentsline {subsubsection}{\numberline {6.9.10}Erasing}{65}{subsubsection.0.6.9.10}%
\contentsline {subsubsection}{\numberline {6.9.11}Searching}{66}{subsubsection.0.6.9.11}%
\contentsline {section}{\numberline {7}More on backtracking}{67}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}(Power set) Subsets}{67}{subsection.0.7.1}%
\contentsline {subsection}{\numberline {7.2}Power set with duplicates}{68}{subsection.0.7.2}%
\contentsline {subsection}{\numberline {7.3}Generate permutations (Without swaps)}{69}{subsection.0.7.3}%
\contentsline {subsection}{\numberline {7.4}Permutations with repetition}{70}{subsection.0.7.4}%
\contentsline {subsection}{\numberline {7.5}Combinations with repetitions}{71}{subsection.0.7.5}%
\contentsline {subsection}{\numberline {7.6}Backtracking with pruning}{72}{subsection.0.7.6}%
\contentsline {section}{\numberline {8}The basics of Dynamic Programming (DP)}{73}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}Key Concepts of DP}{73}{subsection.0.8.1}%
\contentsline {subsection}{\numberline {8.2}Bottom-up DP}{73}{subsection.0.8.2}%
\contentsline {subsubsection}{\numberline {8.2.1}Key Characteristics}{73}{subsubsection.0.8.2.1}%
\contentsline {subsubsection}{\numberline {8.2.2}Steps for Bottom-Up DP}{73}{subsubsection.0.8.2.2}%
\contentsline {subsection}{\numberline {8.3}Bottom-up DP: Fibonacci}{74}{subsection.0.8.3}%
\contentsline {subsection}{\numberline {8.4}Memoization (top down DP)}{74}{subsection.0.8.4}%
\contentsline {subsection}{\numberline {8.5}Top-down DP: Fibonacci}{75}{subsection.0.8.5}%
\contentsline {section}{\numberline {9}Dynamic programming}{76}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}LCS (longest common subsequence)}{76}{subsection.0.9.1}%
\contentsline {section}{\numberline {10}Binary trees}{77}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Terminology}{77}{subsection.0.10.1}%
\contentsline {subsection}{\numberline {10.2}Type of binary trees}{78}{subsection.0.10.2}%
\contentsline {subsection}{\numberline {10.3}Maximum height of a binary tree}{79}{subsection.0.10.3}%
\contentsline {subsubsection}{\numberline {10.3.1}Minimum height of a binary tree}{79}{subsubsection.0.10.3.1}%
\contentsline {subsubsection}{\numberline {10.3.2}Number of Leaves in a Binary Tree}{79}{subsubsection.0.10.3.2}%
\contentsline {subsubsection}{\numberline {10.3.3}Relationship Between Internal Nodes and Leaves:}{79}{subsubsection.0.10.3.3}%
\contentsline {subsubsection}{\numberline {10.3.4}Maximum Number of Nodes at Height h}{79}{subsubsection.0.10.3.4}%
\contentsline {subsubsection}{\numberline {10.3.5}Number of Edges in a Binary Tree:}{80}{subsubsection.0.10.3.5}%
\contentsline {subsection}{\numberline {10.4}Full trees}{81}{subsection.0.10.4}%
\contentsline {subsubsection}{\numberline {10.4.1}Number of leaves}{81}{subsubsection.0.10.4.1}%
\contentsline {subsubsection}{\numberline {10.4.2}Number of nodes}{82}{subsubsection.0.10.4.2}%
\contentsline {subsubsection}{\numberline {10.4.3}Number of internal nodes}{82}{subsubsection.0.10.4.3}%
\contentsline {subsection}{\numberline {10.5}Complete Binary Tree}{83}{subsection.0.10.5}%
\contentsline {subsubsection}{\numberline {10.5.1}Number of nodes}{83}{subsubsection.0.10.5.1}%
\contentsline {subsubsection}{\numberline {10.5.2}Height}{83}{subsubsection.0.10.5.2}%
\contentsline {subsubsection}{\numberline {10.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{83}{subsubsection.0.10.5.3}%
\contentsline {subsubsection}{\numberline {10.5.4}Number of internal nodes}{84}{subsubsection.0.10.5.4}%
\contentsline {subsubsection}{\numberline {10.5.5}Parent and Child Relationships in a Complete Binary Tree}{84}{subsubsection.0.10.5.5}%
\contentsline {subsection}{\numberline {10.6}Perfect binary tree}{85}{subsection.0.10.6}%
\contentsline {subsubsection}{\numberline {10.6.1}Number of Nodes}{85}{subsubsection.0.10.6.1}%
\contentsline {subsubsection}{\numberline {10.6.2}Number of Leaf Nodes}{85}{subsubsection.0.10.6.2}%
\contentsline {subsubsection}{\numberline {10.6.3}Height of the Tree}{85}{subsubsection.0.10.6.3}%
\contentsline {subsubsection}{\numberline {10.6.4}Number of Internal Nodes}{85}{subsubsection.0.10.6.4}%
\contentsline {subsubsection}{\numberline {10.6.5}Depth}{85}{subsubsection.0.10.6.5}%
\contentsline {subsection}{\numberline {10.7}Invert a binary tree}{86}{subsection.0.10.7}%
\contentsline {subsubsection}{\numberline {10.7.1}Swap node helper method}{86}{subsubsection.0.10.7.1}%
\contentsline {subsubsection}{\numberline {10.7.2}Level order (BFS) solution}{86}{subsubsection.0.10.7.2}%
\contentsline {subsubsection}{\numberline {10.7.3}Recursive postorder (DFS)}{87}{subsubsection.0.10.7.3}%
\contentsline {section}{\numberline {11}Applications of binary trees}{88}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Binary search trees}{88}{subsection.0.11.1}%
\contentsline {subsubsection}{\numberline {11.1.1}Interface}{88}{subsubsection.0.11.1.1}%
\contentsline {subsubsection}{\numberline {11.1.2}Traversals}{89}{subsubsection.0.11.1.2}%
\contentsline {paragraph}{\numberline {11.1.2.1}Level order}{89}{paragraph.0.11.1.2.1}%
\contentsline {paragraph}{\numberline {11.1.2.2}Preorder}{90}{paragraph.0.11.1.2.2}%
\contentsline {paragraph}{\numberline {11.1.2.3}Inorder}{90}{paragraph.0.11.1.2.3}%
\contentsline {paragraph}{\numberline {11.1.2.4}Postorder}{92}{paragraph.0.11.1.2.4}%
\contentsline {subsubsection}{\numberline {11.1.3}Successor of a node}{92}{subsubsection.0.11.1.3}%
\contentsline {subsubsection}{\numberline {11.1.4}Predecessor}{93}{subsubsection.0.11.1.4}%
\contentsline {subsubsection}{\numberline {11.1.5}The node}{93}{subsubsection.0.11.1.5}%
\contentsline {subsubsection}{\numberline {11.1.6}The class}{93}{subsubsection.0.11.1.6}%
\contentsline {subsubsection}{\numberline {11.1.7}Recursive Insertion}{94}{subsubsection.0.11.1.7}%
\contentsline {subsubsection}{\numberline {11.1.8}A better recursive insert}{95}{subsubsection.0.11.1.8}%
\contentsline {subsubsection}{\numberline {11.1.9}Iterative insert}{96}{subsubsection.0.11.1.9}%
\contentsline {subsubsection}{\numberline {11.1.10}Recursive removing}{97}{subsubsection.0.11.1.10}%
\contentsline {subsubsection}{\numberline {11.1.11}Clearing}{99}{subsubsection.0.11.1.11}%
\contentsline {subsubsection}{\numberline {11.1.12}Counting the height of the tree (root)}{100}{subsubsection.0.11.1.12}%
\contentsline {subsubsection}{\numberline {11.1.13}Counting the height of a node}{100}{subsubsection.0.11.1.13}%
\contentsline {subsubsection}{\numberline {11.1.14}Getting the depth of the node}{101}{subsubsection.0.11.1.14}%
\contentsline {subsubsection}{\numberline {11.1.15}Counting the number of nodes}{102}{subsubsection.0.11.1.15}%
\contentsline {subsubsection}{\numberline {11.1.16}Comparison traversals}{102}{subsubsection.0.11.1.16}%
\contentsline {subsubsection}{\numberline {11.1.17}Finding the smallest and largest values}{104}{subsubsection.0.11.1.17}%
\contentsline {subsubsection}{\numberline {11.1.18}Getting the widths of a bst}{105}{subsubsection.0.11.1.18}%
\contentsline {subsubsection}{\numberline {11.1.19}Degenerate Binary Search trees}{107}{subsubsection.0.11.1.19}%
\contentsline {subsubsection}{\numberline {11.1.20}Verifying a binary search tree}{107}{subsubsection.0.11.1.20}%
\contentsline {subsubsection}{\numberline {11.1.21}Complexities}{108}{subsubsection.0.11.1.21}%
\contentsline {subsection}{\numberline {11.2}Adelson-Velsky and Landis Trees (AVL trees)}{109}{subsection.0.11.2}%
\contentsline {subsubsection}{\numberline {11.2.1}Definition}{109}{subsubsection.0.11.2.1}%
\contentsline {subsubsection}{\numberline {11.2.2}AVL Nodes}{110}{subsubsection.0.11.2.2}%
\contentsline {subsubsection}{\numberline {11.2.3}Storing the height}{110}{subsubsection.0.11.2.3}%
\contentsline {subsubsection}{\numberline {11.2.4}Defining balance factors in C++ with enums}{111}{subsubsection.0.11.2.4}%
\contentsline {subsubsection}{\numberline {11.2.5}Defining balance factors with a height calculation}{111}{subsubsection.0.11.2.5}%
\contentsline {subsubsection}{\numberline {11.2.6}Interface}{112}{subsubsection.0.11.2.6}%
\contentsline {subsubsection}{\numberline {11.2.7}Balancing an AVL tree}{112}{subsubsection.0.11.2.7}%
\contentsline {subsubsection}{\numberline {11.2.8}Rotations: Right tree}{113}{subsubsection.0.11.2.8}%
\contentsline {paragraph}{\numberline {11.2.8.1}Case 1: Right higher}{113}{paragraph.0.11.2.8.1}%
\contentsline {paragraph}{\numberline {11.2.8.2}Case 2: Left higher}{116}{paragraph.0.11.2.8.2}%
\contentsline {subsubsection}{\numberline {11.2.9}C++ Rotations}{118}{subsubsection.0.11.2.9}%
\contentsline {subsubsection}{\numberline {11.2.10}Balancing}{120}{subsubsection.0.11.2.10}%
\contentsline {subsubsection}{\numberline {11.2.11}Insertions}{121}{subsubsection.0.11.2.11}%
\contentsline {subsubsection}{\numberline {11.2.12}Removing nodes}{122}{subsubsection.0.11.2.12}%
\contentsline {subsection}{\numberline {11.3}Red-black trees}{124}{subsection.0.11.3}%
\contentsline {subsubsection}{\numberline {11.3.1}Rotations}{126}{subsubsection.0.11.3.1}%
\contentsline {subsubsection}{\numberline {11.3.2}Inserting}{128}{subsubsection.0.11.3.2}%
\contentsline {subsubsection}{\numberline {11.3.3}Deletion}{133}{subsubsection.0.11.3.3}%
\contentsline {subsubsection}{\numberline {11.3.4}C++ implementation}{137}{subsubsection.0.11.3.4}%
\contentsline {paragraph}{\numberline {11.3.4.1}The node structure}{137}{paragraph.0.11.3.4.1}%
\contentsline {paragraph}{\numberline {11.3.4.2}The tree class and defining nil}{137}{paragraph.0.11.3.4.2}%
\contentsline {paragraph}{\numberline {11.3.4.3}Rotation methods}{138}{paragraph.0.11.3.4.3}%
\contentsline {paragraph}{\numberline {11.3.4.4}Insert}{139}{paragraph.0.11.3.4.4}%
\contentsline {paragraph}{\numberline {11.3.4.5}Insert fixup}{140}{paragraph.0.11.3.4.5}%
\contentsline {subsection}{\numberline {11.4}State space tree}{141}{subsection.0.11.4}%
\contentsline {section}{\numberline {12}Heaps and Priority Queues (Zero based)}{142}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Max and Min heaps}{144}{subsection.0.12.1}%
\contentsline {subsection}{\numberline {12.2}Heapify an array}{144}{subsection.0.12.2}%
\contentsline {subsection}{\numberline {12.3}Min-heap in c++}{145}{subsection.0.12.3}%
\contentsline {subsection}{\numberline {12.4}Max-heap in c++}{146}{subsection.0.12.4}%
\contentsline {subsection}{\numberline {12.5}Percolating}{147}{subsection.0.12.5}%
\contentsline {subsubsection}{\numberline {12.5.1}Percolate up}{147}{subsubsection.0.12.5.1}%
\contentsline {subsubsection}{\numberline {12.5.2}Percolate down}{148}{subsubsection.0.12.5.2}%
\contentsline {subsection}{\numberline {12.6}Inserting into a heap}{149}{subsection.0.12.6}%
\contentsline {subsection}{\numberline {12.7}Removing the root}{150}{subsection.0.12.7}%
\contentsline {subsection}{\numberline {12.8}Removing an arbitary node}{151}{subsection.0.12.8}%
\contentsline {subsection}{\numberline {12.9}Priority queues}{152}{subsection.0.12.9}%
\contentsline {subsubsection}{\numberline {12.9.1}Interface}{152}{subsubsection.0.12.9.1}%
\contentsline {subsubsection}{\numberline {12.9.2}Insert, pop, and top}{153}{subsubsection.0.12.9.2}%
\contentsline {subsubsection}{\numberline {12.9.3}Size and Empty}{154}{subsubsection.0.12.9.3}%
\contentsline {subsection}{\numberline {12.10}Median of a Stream}{155}{subsection.0.12.10}%
\contentsline {section}{\numberline {13}Sorting}{156}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Bubble, selection, insertion}{156}{subsection.0.13.1}%
\contentsline {subsubsection}{\numberline {13.1.1}Bubble sort}{156}{subsubsection.0.13.1.1}%
\contentsline {paragraph}{\numberline {13.1.1.1}Complexity}{157}{paragraph.0.13.1.1.1}%
\contentsline {subsubsection}{\numberline {13.1.2}Selection sort}{158}{subsubsection.0.13.1.2}%
\contentsline {paragraph}{\numberline {13.1.2.1}Complexity}{158}{paragraph.0.13.1.2.1}%
\contentsline {subsubsection}{\numberline {13.1.3}Insertion sort}{159}{subsubsection.0.13.1.3}%
\contentsline {paragraph}{\numberline {13.1.3.1}Complexity}{160}{paragraph.0.13.1.3.1}%
\contentsline {subsection}{\numberline {13.2}Heap sort}{161}{subsection.0.13.2}%
\contentsline {subsubsection}{\numberline {13.2.1}Complexity}{161}{subsubsection.0.13.2.1}%
\contentsline {subsection}{\numberline {13.3}BST Sort}{162}{subsection.0.13.3}%
\contentsline {subsubsection}{\numberline {13.3.1}Insert}{162}{subsubsection.0.13.3.1}%
\contentsline {subsubsection}{\numberline {13.3.2}The inorder traversal}{162}{subsubsection.0.13.3.2}%
\contentsline {subsubsection}{\numberline {13.3.3}The BST sort function}{163}{subsubsection.0.13.3.3}%
\contentsline {subsubsection}{\numberline {13.3.4}Inplace sorting}{164}{subsubsection.0.13.3.4}%
\contentsline {subsubsection}{\numberline {13.3.5}Complexity}{164}{subsubsection.0.13.3.5}%
\contentsline {subsection}{\numberline {13.4}Quick sort}{165}{subsection.0.13.4}%
\contentsline {subsubsection}{\numberline {13.4.1}Partitioning}{165}{subsubsection.0.13.4.1}%
\contentsline {subsubsection}{\numberline {13.4.2}The quick sort procedure}{166}{subsubsection.0.13.4.2}%
\contentsline {subsubsection}{\numberline {13.4.3}A better partition}{168}{subsubsection.0.13.4.3}%
\contentsline {subsubsection}{\numberline {13.4.4}Median of three partition}{168}{subsubsection.0.13.4.4}%
\contentsline {subsubsection}{\numberline {13.4.5}Quicksort with iterators}{170}{subsubsection.0.13.4.5}%
\contentsline {section}{\numberline {14}Multi-way (m-way) search trees}{171}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Multi-way Searching}{171}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}2-4 (2-3-4) Trees}{172}{subsection.0.14.2}%
\contentsline {subsubsection}{\numberline {14.2.1}Insertion}{172}{subsubsection.0.14.2.1}%
\contentsline {subsubsection}{\numberline {14.2.2}Removal}{173}{subsubsection.0.14.2.2}%
\contentsline {subsubsection}{\numberline {14.2.3}Properties}{175}{subsubsection.0.14.2.3}%
\contentsline {subsection}{\numberline {14.3}B-trees}{176}{subsection.0.14.3}%
\contentsline {section}{\numberline {15}Hashing (hash tables)}{177}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Direct-address table}{177}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}Hash tables}{178}{subsection.0.15.2}%
\contentsline {subsection}{\numberline {15.3}Independent uniform hashing}{179}{subsection.0.15.3}%
\contentsline {subsection}{\numberline {15.4}Collision resolution by chaining}{179}{subsection.0.15.4}%
\contentsline {subsection}{\numberline {15.5}Analysis of hashing with chaining}{180}{subsection.0.15.5}%
\contentsline {subsection}{\numberline {15.6}Hash functions}{180}{subsection.0.15.6}%
\contentsline {subsubsection}{\numberline {15.6.1}Static hashing}{181}{subsubsection.0.15.6.1}%
\contentsline {subsubsection}{\numberline {15.6.2}The division method}{181}{subsubsection.0.15.6.2}%
\contentsline {subsubsection}{\numberline {15.6.3}The multiplication method}{182}{subsubsection.0.15.6.3}%
\contentsline {subsection}{\numberline {15.7}Open addressing}{182}{subsection.0.15.7}%
\contentsline {subsubsection}{\numberline {15.7.1}Linear probing}{182}{subsubsection.0.15.7.1}%
\contentsline {subsubsection}{\numberline {15.7.2}Quadratic probing}{183}{subsubsection.0.15.7.2}%
\contentsline {subsubsection}{\numberline {15.7.3}Deletion problem in open addressing}{183}{subsubsection.0.15.7.3}%
\contentsline {subsubsection}{\numberline {15.7.4}Tombstoning}{183}{subsubsection.0.15.7.4}%
\contentsline {subsubsection}{\numberline {15.7.5}Lazy deletion}{184}{subsubsection.0.15.7.5}%
\contentsline {subsubsection}{\numberline {15.7.6}Rehashing}{184}{subsubsection.0.15.7.6}%
\contentsline {subsection}{\numberline {15.8}Load factor}{185}{subsection.0.15.8}%
\contentsline {subsection}{\numberline {15.9}Static hashing}{185}{subsection.0.15.9}%
\contentsline {subsection}{\numberline {15.10}Static linear hashing}{185}{subsection.0.15.10}%
\contentsline {subsection}{\numberline {15.11}Static hashing with linear probe implementation}{186}{subsection.0.15.11}%
\contentsline {subsubsection}{\numberline {15.11.1}Interface}{186}{subsubsection.0.15.11.1}%
\contentsline {subsubsection}{\numberline {15.11.2}The basics}{186}{subsubsection.0.15.11.2}%
\contentsline {subsubsection}{\numberline {15.11.3}The hash function}{186}{subsubsection.0.15.11.3}%
\contentsline {subsubsection}{\numberline {15.11.4}Inserts}{187}{subsubsection.0.15.11.4}%
\contentsline {subsubsection}{\numberline {15.11.5}Searching}{188}{subsubsection.0.15.11.5}%
\contentsline {subsubsection}{\numberline {15.11.6}Removing}{188}{subsubsection.0.15.11.6}%
\contentsline {subsubsection}{\numberline {15.11.7}Searching and removing with tombstones}{188}{subsubsection.0.15.11.7}%
\contentsline {subsection}{\numberline {15.12}Static hashing with quadratic probing implementation}{191}{subsection.0.15.12}%
\contentsline {subsubsection}{\numberline {15.12.1}Inserting}{191}{subsubsection.0.15.12.1}%
\contentsline {subsubsection}{\numberline {15.12.2}Searching}{192}{subsubsection.0.15.12.2}%
\contentsline {subsubsection}{\numberline {15.12.3}Removing}{193}{subsubsection.0.15.12.3}%
\contentsline {subsection}{\numberline {15.13}Static hashing with chaining implementation}{194}{subsection.0.15.13}%
\contentsline {subsubsection}{\numberline {15.13.1}The basics}{194}{subsubsection.0.15.13.1}%
\contentsline {subsubsection}{\numberline {15.13.2}Inserting}{194}{subsubsection.0.15.13.2}%
\contentsline {subsubsection}{\numberline {15.13.3}Searching}{194}{subsubsection.0.15.13.3}%
\contentsline {subsubsection}{\numberline {15.13.4}Removing}{195}{subsubsection.0.15.13.4}%
\contentsline {subsection}{\numberline {15.14}Injective hashing}{196}{subsection.0.15.14}%
\contentsline {subsection}{\numberline {15.15}Perfect hashing}{196}{subsection.0.15.15}%
\contentsline {section}{\numberline {16}Implementing an unordered\_map}{197}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Fields}{197}{subsection.0.16.1}%
\contentsline {subsection}{\numberline {16.2}Interface}{197}{subsection.0.16.2}%
\contentsline {subsection}{\numberline {16.3}Public methods: Hash and rehash}{198}{subsection.0.16.3}%
\contentsline {subsection}{\numberline {16.4}Inserting and erasing}{198}{subsection.0.16.4}%
\contentsline {subsubsection}{\numberline {16.4.1}Insertion}{198}{subsubsection.0.16.4.1}%
\contentsline {subsubsection}{\numberline {16.4.2}Erasing}{199}{subsubsection.0.16.4.2}%
\contentsline {subsection}{\numberline {16.5}Finding and checking if the map is empty}{199}{subsection.0.16.5}%
\contentsline {subsubsection}{\numberline {16.5.1}Finding}{199}{subsubsection.0.16.5.1}%
\contentsline {subsubsection}{\numberline {16.5.2}Empty}{199}{subsubsection.0.16.5.2}%
\contentsline {subsection}{\numberline {16.6}The subscript operator}{200}{subsection.0.16.6}%
\contentsline {section}{\numberline {17}Table indexing and row-major order}{201}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Row-major order}{201}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Row-major order in c++}{202}{subsection.0.17.2}%
\contentsline {section}{\numberline {18}Graphs}{203}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Simple Graph}{203}{subsection.0.18.1}%
\contentsline {subsection}{\numberline {18.2}Undirected graph}{203}{subsection.0.18.2}%
\contentsline {subsection}{\numberline {18.3}Directed graph}{203}{subsection.0.18.3}%
\contentsline {subsection}{\numberline {18.4}Weighted Graph}{203}{subsection.0.18.4}%
\contentsline {subsection}{\numberline {18.5}Complete Graph}{204}{subsection.0.18.5}%
\contentsline {subsection}{\numberline {18.6}More terms}{204}{subsection.0.18.6}%
\contentsline {subsection}{\numberline {18.7}Graph representations}{204}{subsection.0.18.7}%
\contentsline {subsection}{\numberline {18.8}Interface of adjacency lists and matrices}{205}{subsection.0.18.8}%
\contentsline {subsection}{\numberline {18.9}Complexities for adjacency operations}{205}{subsection.0.18.9}%
\contentsline {subsection}{\numberline {18.10}Graph traversal/search}{205}{subsection.0.18.10}%
\contentsline {subsubsection}{\numberline {18.10.1}Breadth-first-traversal}{206}{subsubsection.0.18.10.1}%
\contentsline {subsubsection}{\numberline {18.10.2}Depth-first traversal}{206}{subsubsection.0.18.10.2}%
\contentsline {subsection}{\numberline {18.11}Shortest path problems}{206}{subsection.0.18.11}%
\contentsline {subsubsection}{\numberline {18.11.1}Dijkstra's shortest path algorithm}{207}{subsubsection.0.18.11.1}%
\contentsline {subsubsection}{\numberline {18.11.2}Dijkstras's algorithm in c++}{208}{subsubsection.0.18.11.2}%
\contentsline {subsection}{\numberline {18.12}Undirected graph in c++ with an adjacency list}{210}{subsection.0.18.12}%
\contentsline {subsubsection}{\numberline {18.12.1}Internal structure}{210}{subsubsection.0.18.12.1}%
\contentsline {subsubsection}{\numberline {18.12.2}Interface}{210}{subsubsection.0.18.12.2}%
\contentsline {subsubsection}{\numberline {18.12.3}Adding edges}{210}{subsubsection.0.18.12.3}%
\contentsline {subsubsection}{\numberline {18.12.4}Adding nodes}{211}{subsubsection.0.18.12.4}%
\contentsline {subsubsection}{\numberline {18.12.5}Getting the neighbors}{211}{subsubsection.0.18.12.5}%
\contentsline {subsubsection}{\numberline {18.12.6}Checking if an edge exists}{211}{subsubsection.0.18.12.6}%
\contentsline {subsubsection}{\numberline {18.12.7}Breadth first traversal}{212}{subsubsection.0.18.12.7}%
\contentsline {subsubsection}{\numberline {18.12.8}Breadth first search to find the shortest path}{213}{subsubsection.0.18.12.8}%
\contentsline {subsubsection}{\numberline {18.12.9}Depth first traversal}{214}{subsubsection.0.18.12.9}%
\contentsline {subsection}{\numberline {18.13}Undirected graph in c++ with adjacency matrix}{215}{subsection.0.18.13}%
\contentsline {subsubsection}{\numberline {18.13.1}Setup}{215}{subsubsection.0.18.13.1}%
\contentsline {subsubsection}{\numberline {18.13.2}Adding an edge}{215}{subsubsection.0.18.13.2}%
\contentsline {subsubsection}{\numberline {18.13.3}Removing an edge}{215}{subsubsection.0.18.13.3}%
\contentsline {subsubsection}{\numberline {18.13.4}Getting neighbors}{215}{subsubsection.0.18.13.4}%
\contentsline {subsubsection}{\numberline {18.13.5}Checking if an edge exists}{216}{subsubsection.0.18.13.5}%
\contentsline {subsubsection}{\numberline {18.13.6}Breadth-first traversal}{217}{subsubsection.0.18.13.6}%
\contentsline {subsubsection}{\numberline {18.13.7}Depth-first traversal}{218}{subsubsection.0.18.13.7}%
\contentsline {subsection}{\numberline {18.14}Weighted graph in C++ with an adjacency matrix}{219}{subsection.0.18.14}%
\contentsline {subsubsection}{\numberline {18.14.1}Setup}{219}{subsubsection.0.18.14.1}%
\contentsline {subsubsection}{\numberline {18.14.2}Adding and removing edges}{219}{subsubsection.0.18.14.2}%
\contentsline {subsubsection}{\numberline {18.14.3}Dijkstra}{220}{subsubsection.0.18.14.3}%
\contentsline {subsection}{\numberline {18.15}Weighted graph in c++ with structure}{221}{subsection.0.18.15}%
\contentsline {subsection}{\numberline {18.16}Topological sort (DFS approach)}{222}{subsection.0.18.16}%
\contentsline {subsubsection}{\numberline {18.16.1}C++ Setup}{222}{subsubsection.0.18.16.1}%
\contentsline {subsubsection}{\numberline {18.16.2}Topological sort with dfs helper}{222}{subsubsection.0.18.16.2}%
\contentsline {subsection}{\numberline {18.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{224}{subsection.0.18.17}%
\contentsline {subsubsection}{\numberline {18.17.1}Class structure and Fields}{224}{subsubsection.0.18.17.1}%
\contentsline {subsubsection}{\numberline {18.17.2}Find}{224}{subsubsection.0.18.17.2}%
\contentsline {subsubsection}{\numberline {18.17.3}Union}{225}{subsubsection.0.18.17.3}%
\contentsline {subsubsection}{\numberline {18.17.4}Find and union optimizations}{225}{subsubsection.0.18.17.4}%
\contentsline {subsection}{\numberline {18.18}Using UnionFind}{226}{subsection.0.18.18}%
\contentsline {subsection}{\numberline {18.19}Minimum spanning trees}{227}{subsection.0.18.19}%
\contentsline {subsubsection}{\numberline {18.19.1}Kruskal's algorithm}{227}{subsubsection.0.18.19.1}%
\contentsline {section}{\numberline {19}Prefix and suffix sums, products, etc}{230}{section.0.19}%
\contentsline {subsection}{\numberline {19.1}Suffix sums and products}{230}{subsection.0.19.1}%
\contentsline {section}{\numberline {20}Two pointer}{232}{section.0.20}%
\contentsline {subsection}{\numberline {20.1}Two Sum II - Input Array Is Sorted}{232}{subsection.0.20.1}%
\contentsline {subsection}{\numberline {20.2}Is valid palindrome}{233}{subsection.0.20.2}%
\contentsline {section}{\numberline {21}Greedy algorithms}{234}{section.0.21}%
\contentsline {section}{\numberline {22}Subarray problems}{235}{section.0.22}%
\contentsline {subsection}{\numberline {22.1}Brute force subarray generation ($O(n^{2})$)}{235}{subsection.0.22.1}%
\contentsline {subsection}{\numberline {22.2}Max subarray sum: Kadane's algorithm ($O(n)$)}{235}{subsection.0.22.2}%
\contentsline {section}{\numberline {23}Divide and conquer}{236}{section.0.23}%
\contentsline {section}{\numberline {24}Math algorithms}{237}{section.0.24}%
\contentsline {subsection}{\numberline {24.1}Euclidean GCD Algorithm}{237}{subsection.0.24.1}%
\contentsline {subsubsection}{\numberline {24.1.1}GCD of some integer collection}{237}{subsubsection.0.24.1.1}%
\contentsline {subsection}{\numberline {24.2}Fibonacci numbers in constant time}{238}{subsection.0.24.2}%
\contentsline {subsection}{\numberline {24.3}Sterlings factorial approximation}{238}{subsection.0.24.3}%
\contentsline {subsection}{\numberline {24.4}square roots}{238}{subsection.0.24.4}%
\contentsline {subsubsection}{\numberline {24.4.1}Naive $O(\sqrt {n})$}{238}{subsubsection.0.24.4.1}%
\contentsline {subsubsection}{\numberline {24.4.2}$O(\lg (n))$ binary search approach}{239}{subsubsection.0.24.4.2}%
\contentsline {subsection}{\numberline {24.5}Fast exponentiation ($O(\lg (n))$)}{240}{subsection.0.24.5}%
\contentsline {subsubsection}{\numberline {24.5.1}Recursive}{240}{subsubsection.0.24.5.1}%
\contentsline {subsection}{\numberline {24.6}Bitwise power of two}{242}{subsection.0.24.6}%
\contentsline {section}{\numberline {25}Number Theory}{243}{section.0.25}%
\contentsline {section}{\numberline {26}STL}{244}{section.0.26}%
\contentsline {subsection}{\numberline {26.1}<algorithm>}{244}{subsection.0.26.1}%
\contentsline {subsubsection}{\numberline {26.1.1}stable\_partition}{244}{subsubsection.0.26.1.1}%
\contentsline {subsubsection}{\numberline {26.1.2}partition}{244}{subsubsection.0.26.1.2}%
\contentsline {subsubsection}{\numberline {26.1.3}partition\_copy}{244}{subsubsection.0.26.1.3}%
\contentsline {subsubsection}{\numberline {26.1.4}is\_partitioned}{245}{subsubsection.0.26.1.4}%
\contentsline {subsubsection}{\numberline {26.1.5}partition\_pont}{245}{subsubsection.0.26.1.5}%
