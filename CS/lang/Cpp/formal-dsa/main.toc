\contentsline {section}{\numberline {1}Preface}{11}{section.0.1}%
\contentsline {subsection}{\numberline {1.1}Universe}{11}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {1.2}Dynamic and static sets}{11}{subsection.0.1.2}%
\contentsline {section}{\numberline {2}Elementary complexity theory}{12}{section.0.2}%
\contentsline {section}{\numberline {3}Linked lists}{19}{section.0.3}%
\contentsline {subsection}{\numberline {3.1}Singly-linked lists}{19}{subsection.0.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Structure of the node}{19}{subsubsection.0.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}The list class/struct}{20}{subsubsection.0.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Interface of a singly linked list stack}{20}{subsubsection.0.3.1.3}%
\contentsline {subsubsection}{\numberline {3.1.4}Traversing}{21}{subsubsection.0.3.1.4}%
\contentsline {subsubsection}{\numberline {3.1.5}Printing}{22}{subsubsection.0.3.1.5}%
\contentsline {subsubsection}{\numberline {3.1.6}Printing in reverse}{23}{subsubsection.0.3.1.6}%
\contentsline {subsubsection}{\numberline {3.1.7}Getting the length}{24}{subsubsection.0.3.1.7}%
\contentsline {subsubsection}{\numberline {3.1.8}Clearing}{25}{subsubsection.0.3.1.8}%
\contentsline {subsubsection}{\numberline {3.1.9}Reversing}{26}{subsubsection.0.3.1.9}%
\contentsline {subsubsection}{\numberline {3.1.10}Pushing}{27}{subsubsection.0.3.1.10}%
\contentsline {subsubsection}{\numberline {3.1.11}Inserting}{28}{subsubsection.0.3.1.11}%
\contentsline {subsubsection}{\numberline {3.1.12}Popping}{29}{subsubsection.0.3.1.12}%
\contentsline {subsubsection}{\numberline {3.1.13}Erasing}{30}{subsubsection.0.3.1.13}%
\contentsline {subsubsection}{\numberline {3.1.14}Searching}{31}{subsubsection.0.3.1.14}%
\contentsline {subsection}{\numberline {3.2}Doubly-linked list}{32}{subsection.0.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}Node structure}{32}{subsubsection.0.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}The list class}{32}{subsubsection.0.3.2.2}%
\contentsline {subsubsection}{\numberline {3.2.3}push\_back and push\_front}{33}{subsubsection.0.3.2.3}%
\contentsline {subsubsection}{\numberline {3.2.4}pop\_back and pop\_frot}{34}{subsubsection.0.3.2.4}%
\contentsline {subsubsection}{\numberline {3.2.5}Searching}{35}{subsubsection.0.3.2.5}%
\contentsline {section}{\numberline {4}Recursion}{36}{section.0.4}%
\contentsline {subsection}{\numberline {4.1}Recursion vs iteration}{36}{subsection.0.4.1}%
\contentsline {subsection}{\numberline {4.2}Elementary recursion}{37}{subsection.0.4.2}%
\contentsline {subsection}{\numberline {4.3}Base cases}{37}{subsection.0.4.3}%
\contentsline {subsubsection}{\numberline {4.3.1}Factorials}{37}{subsubsection.0.4.3.1}%
\contentsline {subsubsection}{\numberline {4.3.2}Powers}{38}{subsubsection.0.4.3.2}%
\contentsline {subsection}{\numberline {4.4}Tail recursion}{39}{subsection.0.4.4}%
\contentsline {subsection}{\numberline {4.5}Indirect Recursion}{41}{subsection.0.4.5}%
\contentsline {subsection}{\numberline {4.6}Nested Recursion}{42}{subsection.0.4.6}%
\contentsline {subsection}{\numberline {4.7}Excessive Recursion}{42}{subsection.0.4.7}%
\contentsline {subsection}{\numberline {4.8}Backtracking}{44}{subsection.0.4.8}%
\contentsline {subsubsection}{\numberline {4.8.1}N-Queens}{45}{subsubsection.0.4.8.1}%
\contentsline {subsubsection}{\numberline {4.8.2}Greedy backtracking: Traveling salesman problem (TSP)}{46}{subsubsection.0.4.8.2}%
\contentsline {subsubsection}{\numberline {4.8.3}Combinations}{50}{subsubsection.0.4.8.3}%
\contentsline {subsubsection}{\numberline {4.8.4}Combinations that sum to $m$}{51}{subsubsection.0.4.8.4}%
\contentsline {subsubsection}{\numberline {4.8.5}Permutations}{52}{subsubsection.0.4.8.5}%
\contentsline {subsection}{\numberline {4.9}Recursion in singly linked lists}{53}{subsection.0.4.9}%
\contentsline {subsubsection}{\numberline {4.9.1}Traversing}{53}{subsubsection.0.4.9.1}%
\contentsline {subsubsection}{\numberline {4.9.2}Printing}{53}{subsubsection.0.4.9.2}%
\contentsline {subsubsection}{\numberline {4.9.3}Printing in reverse}{53}{subsubsection.0.4.9.3}%
\contentsline {subsubsection}{\numberline {4.9.4}Getting the length}{54}{subsubsection.0.4.9.4}%
\contentsline {subsubsection}{\numberline {4.9.5}Clearing}{54}{subsubsection.0.4.9.5}%
\contentsline {subsubsection}{\numberline {4.9.6}Reversing}{55}{subsubsection.0.4.9.6}%
\contentsline {subsubsection}{\numberline {4.9.7}Pushing}{57}{subsubsection.0.4.9.7}%
\contentsline {subsubsection}{\numberline {4.9.8}Inserting}{58}{subsubsection.0.4.9.8}%
\contentsline {subsubsection}{\numberline {4.9.9}Popping}{59}{subsubsection.0.4.9.9}%
\contentsline {subsubsection}{\numberline {4.9.10}Erasing}{60}{subsubsection.0.4.9.10}%
\contentsline {subsubsection}{\numberline {4.9.11}Searching}{61}{subsubsection.0.4.9.11}%
\contentsline {section}{\numberline {5}More on backtracking}{62}{section.0.5}%
\contentsline {subsection}{\numberline {5.1}Subsets}{62}{subsection.0.5.1}%
\contentsline {section}{\numberline {6}Dynamic programming}{63}{section.0.6}%
\contentsline {subsection}{\numberline {6.1}Key Concepts of DP}{63}{subsection.0.6.1}%
\contentsline {subsection}{\numberline {6.2}Bottom-up DP}{63}{subsection.0.6.2}%
\contentsline {subsubsection}{\numberline {6.2.1}Key Characteristics}{63}{subsubsection.0.6.2.1}%
\contentsline {subsubsection}{\numberline {6.2.2}Steps for Bottom-Up DP}{63}{subsubsection.0.6.2.2}%
\contentsline {subsection}{\numberline {6.3}Bottom-up DP: Fibonacci}{64}{subsection.0.6.3}%
\contentsline {subsection}{\numberline {6.4}Memoization (top down DP)}{64}{subsection.0.6.4}%
\contentsline {subsection}{\numberline {6.5}Top-down DP: Fibonacci}{65}{subsection.0.6.5}%
\contentsline {section}{\numberline {7}Binary trees}{66}{section.0.7}%
\contentsline {subsection}{\numberline {7.1}Terminology}{66}{subsection.0.7.1}%
\contentsline {subsection}{\numberline {7.2}Type of binary trees}{67}{subsection.0.7.2}%
\contentsline {subsection}{\numberline {7.3}Maximum height of a binary tree}{68}{subsection.0.7.3}%
\contentsline {subsubsection}{\numberline {7.3.1}Minimum height of a binary tree}{68}{subsubsection.0.7.3.1}%
\contentsline {subsubsection}{\numberline {7.3.2}Number of Leaves in a Binary Tree}{68}{subsubsection.0.7.3.2}%
\contentsline {subsubsection}{\numberline {7.3.3}Relationship Between Internal Nodes and Leaves:}{68}{subsubsection.0.7.3.3}%
\contentsline {subsubsection}{\numberline {7.3.4}Maximum Number of Nodes at Height h}{68}{subsubsection.0.7.3.4}%
\contentsline {subsubsection}{\numberline {7.3.5}Number of Edges in a Binary Tree:}{69}{subsubsection.0.7.3.5}%
\contentsline {subsection}{\numberline {7.4}Full trees}{70}{subsection.0.7.4}%
\contentsline {subsubsection}{\numberline {7.4.1}Number of leaves}{70}{subsubsection.0.7.4.1}%
\contentsline {subsubsection}{\numberline {7.4.2}Number of nodes}{71}{subsubsection.0.7.4.2}%
\contentsline {subsubsection}{\numberline {7.4.3}Number of internal nodes}{71}{subsubsection.0.7.4.3}%
\contentsline {subsection}{\numberline {7.5}Complete Binary Tree}{72}{subsection.0.7.5}%
\contentsline {subsubsection}{\numberline {7.5.1}Number of nodes}{72}{subsubsection.0.7.5.1}%
\contentsline {subsubsection}{\numberline {7.5.2}Height}{72}{subsubsection.0.7.5.2}%
\contentsline {subsubsection}{\numberline {7.5.3}Number of Leaf Nodes (L) in a Complete Binary Tree}{72}{subsubsection.0.7.5.3}%
\contentsline {subsubsection}{\numberline {7.5.4}Number of internal nodes}{73}{subsubsection.0.7.5.4}%
\contentsline {subsubsection}{\numberline {7.5.5}Parent and Child Relationships in a Complete Binary Tree}{73}{subsubsection.0.7.5.5}%
\contentsline {subsection}{\numberline {7.6}Perfect binary tree}{74}{subsection.0.7.6}%
\contentsline {subsubsection}{\numberline {7.6.1}Number of Nodes}{74}{subsubsection.0.7.6.1}%
\contentsline {subsubsection}{\numberline {7.6.2}Number of Leaf Nodes}{74}{subsubsection.0.7.6.2}%
\contentsline {subsubsection}{\numberline {7.6.3}Height of the Tree}{74}{subsubsection.0.7.6.3}%
\contentsline {subsubsection}{\numberline {7.6.4}Number of Internal Nodes}{74}{subsubsection.0.7.6.4}%
\contentsline {subsubsection}{\numberline {7.6.5}Depth}{74}{subsubsection.0.7.6.5}%
\contentsline {subsection}{\numberline {7.7}Invert a binary tree}{75}{subsection.0.7.7}%
\contentsline {subsubsection}{\numberline {7.7.1}Swap node helper method}{75}{subsubsection.0.7.7.1}%
\contentsline {subsubsection}{\numberline {7.7.2}Level order (BFS) solution}{75}{subsubsection.0.7.7.2}%
\contentsline {subsubsection}{\numberline {7.7.3}Recursive postorder (DFS)}{76}{subsubsection.0.7.7.3}%
\contentsline {section}{\numberline {8}Applications of binary trees}{77}{section.0.8}%
\contentsline {subsection}{\numberline {8.1}Binary search trees}{77}{subsection.0.8.1}%
\contentsline {subsubsection}{\numberline {8.1.1}Interface}{77}{subsubsection.0.8.1.1}%
\contentsline {subsubsection}{\numberline {8.1.2}Traversals}{78}{subsubsection.0.8.1.2}%
\contentsline {paragraph}{\numberline {8.1.2.1}Level order}{78}{paragraph.0.8.1.2.1}%
\contentsline {paragraph}{\numberline {8.1.2.2}Preorder}{79}{paragraph.0.8.1.2.2}%
\contentsline {paragraph}{\numberline {8.1.2.3}Inorder}{79}{paragraph.0.8.1.2.3}%
\contentsline {paragraph}{\numberline {8.1.2.4}Postorder}{81}{paragraph.0.8.1.2.4}%
\contentsline {subsubsection}{\numberline {8.1.3}Successor of a node}{81}{subsubsection.0.8.1.3}%
\contentsline {subsubsection}{\numberline {8.1.4}Predecessor}{82}{subsubsection.0.8.1.4}%
\contentsline {subsubsection}{\numberline {8.1.5}The node}{82}{subsubsection.0.8.1.5}%
\contentsline {subsubsection}{\numberline {8.1.6}The class}{82}{subsubsection.0.8.1.6}%
\contentsline {subsubsection}{\numberline {8.1.7}Recursive Insertion}{83}{subsubsection.0.8.1.7}%
\contentsline {subsubsection}{\numberline {8.1.8}A better recursive insert}{84}{subsubsection.0.8.1.8}%
\contentsline {subsubsection}{\numberline {8.1.9}Iterative insert}{85}{subsubsection.0.8.1.9}%
\contentsline {subsubsection}{\numberline {8.1.10}Recursive removing}{86}{subsubsection.0.8.1.10}%
\contentsline {subsubsection}{\numberline {8.1.11}Clearing}{88}{subsubsection.0.8.1.11}%
\contentsline {subsubsection}{\numberline {8.1.12}Counting the height of the tree (root)}{89}{subsubsection.0.8.1.12}%
\contentsline {subsubsection}{\numberline {8.1.13}Counting the height of a node}{89}{subsubsection.0.8.1.13}%
\contentsline {subsubsection}{\numberline {8.1.14}Getting the depth of the node}{90}{subsubsection.0.8.1.14}%
\contentsline {subsubsection}{\numberline {8.1.15}Counting the number of nodes}{91}{subsubsection.0.8.1.15}%
\contentsline {subsubsection}{\numberline {8.1.16}Comparison traversals}{91}{subsubsection.0.8.1.16}%
\contentsline {subsubsection}{\numberline {8.1.17}Finding the smallest and largest values}{93}{subsubsection.0.8.1.17}%
\contentsline {subsubsection}{\numberline {8.1.18}Getting the widths of a bst}{94}{subsubsection.0.8.1.18}%
\contentsline {subsubsection}{\numberline {8.1.19}Degenerate Binary Search trees}{96}{subsubsection.0.8.1.19}%
\contentsline {subsubsection}{\numberline {8.1.20}Verifying a binary search tree}{96}{subsubsection.0.8.1.20}%
\contentsline {subsubsection}{\numberline {8.1.21}Complexities}{97}{subsubsection.0.8.1.21}%
\contentsline {subsection}{\numberline {8.2}Adelson-Velsky and Landis Trees (AVL trees)}{98}{subsection.0.8.2}%
\contentsline {subsubsection}{\numberline {8.2.1}Definition}{98}{subsubsection.0.8.2.1}%
\contentsline {subsubsection}{\numberline {8.2.2}AVL Nodes}{99}{subsubsection.0.8.2.2}%
\contentsline {subsubsection}{\numberline {8.2.3}Storing the height}{99}{subsubsection.0.8.2.3}%
\contentsline {subsubsection}{\numberline {8.2.4}Defining balance factors in C++ with enums}{100}{subsubsection.0.8.2.4}%
\contentsline {subsubsection}{\numberline {8.2.5}Defining balance factors with a height calculation}{100}{subsubsection.0.8.2.5}%
\contentsline {subsubsection}{\numberline {8.2.6}Interface}{101}{subsubsection.0.8.2.6}%
\contentsline {subsubsection}{\numberline {8.2.7}Balancing an AVL tree}{101}{subsubsection.0.8.2.7}%
\contentsline {subsubsection}{\numberline {8.2.8}Rotations: Right tree}{102}{subsubsection.0.8.2.8}%
\contentsline {paragraph}{\numberline {8.2.8.1}Case 1: Right higher}{102}{paragraph.0.8.2.8.1}%
\contentsline {paragraph}{\numberline {8.2.8.2}Case 2: Left higher}{105}{paragraph.0.8.2.8.2}%
\contentsline {subsubsection}{\numberline {8.2.9}C++ Rotations}{107}{subsubsection.0.8.2.9}%
\contentsline {subsubsection}{\numberline {8.2.10}Balancing}{109}{subsubsection.0.8.2.10}%
\contentsline {subsubsection}{\numberline {8.2.11}Insertions}{110}{subsubsection.0.8.2.11}%
\contentsline {subsubsection}{\numberline {8.2.12}Removing nodes}{111}{subsubsection.0.8.2.12}%
\contentsline {subsection}{\numberline {8.3}Red-black trees}{113}{subsection.0.8.3}%
\contentsline {subsubsection}{\numberline {8.3.1}Rotations}{115}{subsubsection.0.8.3.1}%
\contentsline {subsubsection}{\numberline {8.3.2}Inserting}{117}{subsubsection.0.8.3.2}%
\contentsline {subsubsection}{\numberline {8.3.3}Deletion}{122}{subsubsection.0.8.3.3}%
\contentsline {subsubsection}{\numberline {8.3.4}C++ implementation}{126}{subsubsection.0.8.3.4}%
\contentsline {paragraph}{\numberline {8.3.4.1}The node structure}{126}{paragraph.0.8.3.4.1}%
\contentsline {paragraph}{\numberline {8.3.4.2}The tree class and defining nil}{126}{paragraph.0.8.3.4.2}%
\contentsline {paragraph}{\numberline {8.3.4.3}Rotation methods}{127}{paragraph.0.8.3.4.3}%
\contentsline {paragraph}{\numberline {8.3.4.4}Insert}{128}{paragraph.0.8.3.4.4}%
\contentsline {paragraph}{\numberline {8.3.4.5}Insert fixup}{129}{paragraph.0.8.3.4.5}%
\contentsline {subsection}{\numberline {8.4}State space tree}{130}{subsection.0.8.4}%
\contentsline {subsubsection}{\numberline {8.4.1}Generate permutations (Backtracking)}{131}{subsubsection.0.8.4.1}%
\contentsline {section}{\numberline {9}Heaps and Priority Queues (Zero based)}{132}{section.0.9}%
\contentsline {subsection}{\numberline {9.1}Max and Min heaps}{134}{subsection.0.9.1}%
\contentsline {subsection}{\numberline {9.2}Heapify an array}{134}{subsection.0.9.2}%
\contentsline {subsection}{\numberline {9.3}Min-heap in c++}{135}{subsection.0.9.3}%
\contentsline {subsection}{\numberline {9.4}Max-heap in c++}{136}{subsection.0.9.4}%
\contentsline {subsection}{\numberline {9.5}Percolating}{137}{subsection.0.9.5}%
\contentsline {subsubsection}{\numberline {9.5.1}Percolate up}{137}{subsubsection.0.9.5.1}%
\contentsline {subsubsection}{\numberline {9.5.2}Percolate down}{138}{subsubsection.0.9.5.2}%
\contentsline {subsection}{\numberline {9.6}Inserting into a heap}{139}{subsection.0.9.6}%
\contentsline {subsection}{\numberline {9.7}Removing the root}{140}{subsection.0.9.7}%
\contentsline {subsection}{\numberline {9.8}Removing an arbitary node}{141}{subsection.0.9.8}%
\contentsline {subsection}{\numberline {9.9}Priority queues}{142}{subsection.0.9.9}%
\contentsline {subsubsection}{\numberline {9.9.1}Interface}{142}{subsubsection.0.9.9.1}%
\contentsline {subsubsection}{\numberline {9.9.2}Insert, pop, and top}{143}{subsubsection.0.9.9.2}%
\contentsline {subsubsection}{\numberline {9.9.3}Size and Empty}{144}{subsubsection.0.9.9.3}%
\contentsline {section}{\numberline {10}Sorting}{145}{section.0.10}%
\contentsline {subsection}{\numberline {10.1}Bubble, selection, insertion}{145}{subsection.0.10.1}%
\contentsline {subsubsection}{\numberline {10.1.1}Bubble sort}{145}{subsubsection.0.10.1.1}%
\contentsline {paragraph}{\numberline {10.1.1.1}Complexity}{146}{paragraph.0.10.1.1.1}%
\contentsline {subsubsection}{\numberline {10.1.2}Selection sort}{147}{subsubsection.0.10.1.2}%
\contentsline {paragraph}{\numberline {10.1.2.1}Complexity}{147}{paragraph.0.10.1.2.1}%
\contentsline {subsubsection}{\numberline {10.1.3}Insertion sort}{148}{subsubsection.0.10.1.3}%
\contentsline {paragraph}{\numberline {10.1.3.1}Complexity}{149}{paragraph.0.10.1.3.1}%
\contentsline {subsection}{\numberline {10.2}Heap sort}{150}{subsection.0.10.2}%
\contentsline {subsubsection}{\numberline {10.2.1}Complexity}{150}{subsubsection.0.10.2.1}%
\contentsline {subsection}{\numberline {10.3}BST Sort}{151}{subsection.0.10.3}%
\contentsline {subsubsection}{\numberline {10.3.1}Insert}{151}{subsubsection.0.10.3.1}%
\contentsline {subsubsection}{\numberline {10.3.2}The inorder traversal}{151}{subsubsection.0.10.3.2}%
\contentsline {subsubsection}{\numberline {10.3.3}The BST sort function}{152}{subsubsection.0.10.3.3}%
\contentsline {subsubsection}{\numberline {10.3.4}Inplace sorting}{153}{subsubsection.0.10.3.4}%
\contentsline {subsubsection}{\numberline {10.3.5}Complexity}{153}{subsubsection.0.10.3.5}%
\contentsline {subsection}{\numberline {10.4}Quick sort}{154}{subsection.0.10.4}%
\contentsline {subsubsection}{\numberline {10.4.1}Partitioning}{154}{subsubsection.0.10.4.1}%
\contentsline {subsubsection}{\numberline {10.4.2}The quick sort procedure}{155}{subsubsection.0.10.4.2}%
\contentsline {subsubsection}{\numberline {10.4.3}A better partition}{157}{subsubsection.0.10.4.3}%
\contentsline {subsubsection}{\numberline {10.4.4}Median of three partition}{157}{subsubsection.0.10.4.4}%
\contentsline {subsubsection}{\numberline {10.4.5}Quicksort with iterators}{159}{subsubsection.0.10.4.5}%
\contentsline {section}{\numberline {11}Multi-way (m-way) search trees}{160}{section.0.11}%
\contentsline {subsection}{\numberline {11.1}Multi-way Searching}{160}{subsection.0.11.1}%
\contentsline {subsection}{\numberline {11.2}2-4 (2-3-4) Trees}{161}{subsection.0.11.2}%
\contentsline {subsubsection}{\numberline {11.2.1}Insertion}{161}{subsubsection.0.11.2.1}%
\contentsline {subsubsection}{\numberline {11.2.2}Removal}{162}{subsubsection.0.11.2.2}%
\contentsline {subsubsection}{\numberline {11.2.3}Properties}{164}{subsubsection.0.11.2.3}%
\contentsline {subsection}{\numberline {11.3}B-trees}{165}{subsection.0.11.3}%
\contentsline {section}{\numberline {12}Hashing (hash tables)}{166}{section.0.12}%
\contentsline {subsection}{\numberline {12.1}Direct-address table}{166}{subsection.0.12.1}%
\contentsline {subsection}{\numberline {12.2}Hash tables}{167}{subsection.0.12.2}%
\contentsline {subsection}{\numberline {12.3}Independent uniform hashing}{168}{subsection.0.12.3}%
\contentsline {subsection}{\numberline {12.4}Collision resolution by chaining}{168}{subsection.0.12.4}%
\contentsline {subsection}{\numberline {12.5}Analysis of hashing with chaining}{169}{subsection.0.12.5}%
\contentsline {subsection}{\numberline {12.6}Hash functions}{169}{subsection.0.12.6}%
\contentsline {subsubsection}{\numberline {12.6.1}Static hashing}{170}{subsubsection.0.12.6.1}%
\contentsline {subsubsection}{\numberline {12.6.2}The division method}{170}{subsubsection.0.12.6.2}%
\contentsline {subsubsection}{\numberline {12.6.3}The multiplication method}{171}{subsubsection.0.12.6.3}%
\contentsline {subsection}{\numberline {12.7}Open addressing}{171}{subsection.0.12.7}%
\contentsline {subsubsection}{\numberline {12.7.1}Linear probing}{171}{subsubsection.0.12.7.1}%
\contentsline {subsubsection}{\numberline {12.7.2}Quadratic probing}{172}{subsubsection.0.12.7.2}%
\contentsline {subsubsection}{\numberline {12.7.3}Deletion problem in open addressing}{172}{subsubsection.0.12.7.3}%
\contentsline {subsubsection}{\numberline {12.7.4}Tombstoning}{172}{subsubsection.0.12.7.4}%
\contentsline {subsubsection}{\numberline {12.7.5}Lazy deletion}{173}{subsubsection.0.12.7.5}%
\contentsline {subsubsection}{\numberline {12.7.6}Rehashing}{173}{subsubsection.0.12.7.6}%
\contentsline {subsection}{\numberline {12.8}Load factor}{174}{subsection.0.12.8}%
\contentsline {subsection}{\numberline {12.9}Static hashing}{174}{subsection.0.12.9}%
\contentsline {subsection}{\numberline {12.10}Static linear hashing}{174}{subsection.0.12.10}%
\contentsline {subsection}{\numberline {12.11}Static hashing with linear probe implementation}{175}{subsection.0.12.11}%
\contentsline {subsubsection}{\numberline {12.11.1}Interface}{175}{subsubsection.0.12.11.1}%
\contentsline {subsubsection}{\numberline {12.11.2}The basics}{175}{subsubsection.0.12.11.2}%
\contentsline {subsubsection}{\numberline {12.11.3}The hash function}{175}{subsubsection.0.12.11.3}%
\contentsline {subsubsection}{\numberline {12.11.4}Inserts}{176}{subsubsection.0.12.11.4}%
\contentsline {subsubsection}{\numberline {12.11.5}Searching}{177}{subsubsection.0.12.11.5}%
\contentsline {subsubsection}{\numberline {12.11.6}Removing}{177}{subsubsection.0.12.11.6}%
\contentsline {subsubsection}{\numberline {12.11.7}Searching and removing with tombstones}{177}{subsubsection.0.12.11.7}%
\contentsline {subsection}{\numberline {12.12}Static hashing with quadratic probing implementation}{180}{subsection.0.12.12}%
\contentsline {subsubsection}{\numberline {12.12.1}Inserting}{180}{subsubsection.0.12.12.1}%
\contentsline {subsubsection}{\numberline {12.12.2}Searching}{181}{subsubsection.0.12.12.2}%
\contentsline {subsubsection}{\numberline {12.12.3}Removing}{182}{subsubsection.0.12.12.3}%
\contentsline {subsection}{\numberline {12.13}Static hashing with chaining implementation}{183}{subsection.0.12.13}%
\contentsline {subsubsection}{\numberline {12.13.1}The basics}{183}{subsubsection.0.12.13.1}%
\contentsline {subsubsection}{\numberline {12.13.2}Inserting}{183}{subsubsection.0.12.13.2}%
\contentsline {subsubsection}{\numberline {12.13.3}Searching}{183}{subsubsection.0.12.13.3}%
\contentsline {subsubsection}{\numberline {12.13.4}Removing}{184}{subsubsection.0.12.13.4}%
\contentsline {subsection}{\numberline {12.14}Injective hashing}{185}{subsection.0.12.14}%
\contentsline {subsection}{\numberline {12.15}Perfect hashing}{185}{subsection.0.12.15}%
\contentsline {section}{\numberline {13}Implementing an unordered\_map}{186}{section.0.13}%
\contentsline {subsection}{\numberline {13.1}Fields}{186}{subsection.0.13.1}%
\contentsline {subsection}{\numberline {13.2}Interface}{186}{subsection.0.13.2}%
\contentsline {subsection}{\numberline {13.3}Public methods: Hash and rehash}{187}{subsection.0.13.3}%
\contentsline {subsection}{\numberline {13.4}Inserting and erasing}{187}{subsection.0.13.4}%
\contentsline {subsubsection}{\numberline {13.4.1}Insertion}{187}{subsubsection.0.13.4.1}%
\contentsline {subsubsection}{\numberline {13.4.2}Erasing}{188}{subsubsection.0.13.4.2}%
\contentsline {subsection}{\numberline {13.5}Finding and checking if the map is empty}{188}{subsection.0.13.5}%
\contentsline {subsubsection}{\numberline {13.5.1}Finding}{188}{subsubsection.0.13.5.1}%
\contentsline {subsubsection}{\numberline {13.5.2}Empty}{188}{subsubsection.0.13.5.2}%
\contentsline {subsection}{\numberline {13.6}The subscript operator}{189}{subsection.0.13.6}%
\contentsline {section}{\numberline {14}Table indexing and row-major order}{190}{section.0.14}%
\contentsline {subsection}{\numberline {14.1}Row-major order}{190}{subsection.0.14.1}%
\contentsline {subsection}{\numberline {14.2}Row-major order in c++}{191}{subsection.0.14.2}%
\contentsline {section}{\numberline {15}Graphs}{192}{section.0.15}%
\contentsline {subsection}{\numberline {15.1}Simple Graph}{192}{subsection.0.15.1}%
\contentsline {subsection}{\numberline {15.2}Undirected graph}{192}{subsection.0.15.2}%
\contentsline {subsection}{\numberline {15.3}Directed graph}{192}{subsection.0.15.3}%
\contentsline {subsection}{\numberline {15.4}Weighted Graph}{192}{subsection.0.15.4}%
\contentsline {subsection}{\numberline {15.5}Complete Graph}{193}{subsection.0.15.5}%
\contentsline {subsection}{\numberline {15.6}More terms}{193}{subsection.0.15.6}%
\contentsline {subsection}{\numberline {15.7}Graph representations}{193}{subsection.0.15.7}%
\contentsline {subsection}{\numberline {15.8}Interface of adjacency lists and matrices}{194}{subsection.0.15.8}%
\contentsline {subsection}{\numberline {15.9}Complexities for adjacency operations}{194}{subsection.0.15.9}%
\contentsline {subsection}{\numberline {15.10}Graph traversal/search}{194}{subsection.0.15.10}%
\contentsline {subsubsection}{\numberline {15.10.1}Breadth-first-traversal}{195}{subsubsection.0.15.10.1}%
\contentsline {subsubsection}{\numberline {15.10.2}Depth-first traversal}{195}{subsubsection.0.15.10.2}%
\contentsline {subsection}{\numberline {15.11}Shortest path problems}{195}{subsection.0.15.11}%
\contentsline {subsubsection}{\numberline {15.11.1}Dijkstra's shortest path algorithm}{196}{subsubsection.0.15.11.1}%
\contentsline {subsubsection}{\numberline {15.11.2}Dijkstras's algorithm in c++}{197}{subsubsection.0.15.11.2}%
\contentsline {subsection}{\numberline {15.12}Undirected graph in c++ with an adjacency list}{199}{subsection.0.15.12}%
\contentsline {subsubsection}{\numberline {15.12.1}Internal structure}{199}{subsubsection.0.15.12.1}%
\contentsline {subsubsection}{\numberline {15.12.2}Interface}{199}{subsubsection.0.15.12.2}%
\contentsline {subsubsection}{\numberline {15.12.3}Adding edges}{199}{subsubsection.0.15.12.3}%
\contentsline {subsubsection}{\numberline {15.12.4}Adding nodes}{200}{subsubsection.0.15.12.4}%
\contentsline {subsubsection}{\numberline {15.12.5}Getting the neighbors}{200}{subsubsection.0.15.12.5}%
\contentsline {subsubsection}{\numberline {15.12.6}Checking if an edge exists}{200}{subsubsection.0.15.12.6}%
\contentsline {subsubsection}{\numberline {15.12.7}Breadth first traversal}{201}{subsubsection.0.15.12.7}%
\contentsline {subsubsection}{\numberline {15.12.8}Breadth first search to find the shortest path}{202}{subsubsection.0.15.12.8}%
\contentsline {subsubsection}{\numberline {15.12.9}Depth first traversal}{203}{subsubsection.0.15.12.9}%
\contentsline {subsection}{\numberline {15.13}Undirected graph in c++ with adjacency matrix}{204}{subsection.0.15.13}%
\contentsline {subsubsection}{\numberline {15.13.1}Setup}{204}{subsubsection.0.15.13.1}%
\contentsline {subsubsection}{\numberline {15.13.2}Adding an edge}{204}{subsubsection.0.15.13.2}%
\contentsline {subsubsection}{\numberline {15.13.3}Removing an edge}{204}{subsubsection.0.15.13.3}%
\contentsline {subsubsection}{\numberline {15.13.4}Getting neighbors}{204}{subsubsection.0.15.13.4}%
\contentsline {subsubsection}{\numberline {15.13.5}Checking if an edge exists}{205}{subsubsection.0.15.13.5}%
\contentsline {subsubsection}{\numberline {15.13.6}Breadth-first traversal}{206}{subsubsection.0.15.13.6}%
\contentsline {subsubsection}{\numberline {15.13.7}Depth-first traversal}{207}{subsubsection.0.15.13.7}%
\contentsline {subsection}{\numberline {15.14}Weighted graph in C++ with an adjacency matrix}{208}{subsection.0.15.14}%
\contentsline {subsubsection}{\numberline {15.14.1}Setup}{208}{subsubsection.0.15.14.1}%
\contentsline {subsubsection}{\numberline {15.14.2}Adding and removing edges}{208}{subsubsection.0.15.14.2}%
\contentsline {subsubsection}{\numberline {15.14.3}Dijkstra}{209}{subsubsection.0.15.14.3}%
\contentsline {subsection}{\numberline {15.15}Weighted graph in c++ with structure}{210}{subsection.0.15.15}%
\contentsline {subsection}{\numberline {15.16}Topological sort (DFS approach)}{211}{subsection.0.15.16}%
\contentsline {subsubsection}{\numberline {15.16.1}C++ Setup}{211}{subsubsection.0.15.16.1}%
\contentsline {subsubsection}{\numberline {15.16.2}Topological sort with dfs helper}{211}{subsubsection.0.15.16.2}%
\contentsline {subsection}{\numberline {15.17}Union-Find Data Structure (Disjoint Set Union - DSU)}{213}{subsection.0.15.17}%
\contentsline {subsubsection}{\numberline {15.17.1}Class structure and Fields}{213}{subsubsection.0.15.17.1}%
\contentsline {subsubsection}{\numberline {15.17.2}Find}{213}{subsubsection.0.15.17.2}%
\contentsline {subsubsection}{\numberline {15.17.3}Union}{214}{subsubsection.0.15.17.3}%
\contentsline {subsubsection}{\numberline {15.17.4}Find and union optimizations}{214}{subsubsection.0.15.17.4}%
\contentsline {subsection}{\numberline {15.18}Using UnionFind}{215}{subsection.0.15.18}%
\contentsline {subsection}{\numberline {15.19}Minimum spanning trees}{216}{subsection.0.15.19}%
\contentsline {subsubsection}{\numberline {15.19.1}Kruskal's algorithm}{216}{subsubsection.0.15.19.1}%
\contentsline {section}{\numberline {16}Prefix and suffix sums, products, etc}{219}{section.0.16}%
\contentsline {subsection}{\numberline {16.1}Suffix sums and products}{219}{subsection.0.16.1}%
\contentsline {section}{\numberline {17}Two pointer}{221}{section.0.17}%
\contentsline {subsection}{\numberline {17.1}Two Sum II - Input Array Is Sorted}{221}{subsection.0.17.1}%
\contentsline {subsection}{\numberline {17.2}Is valid palindrome}{222}{subsection.0.17.2}%
\contentsline {section}{\numberline {18}Math algorithms}{223}{section.0.18}%
\contentsline {subsection}{\numberline {18.1}Euclidean GCD Algorithm}{223}{subsection.0.18.1}%
\contentsline {subsubsection}{\numberline {18.1.1}GCD of some integer collection}{223}{subsubsection.0.18.1.1}%
\contentsline {subsection}{\numberline {18.2}Fibonacci numbers in constant time}{224}{subsection.0.18.2}%
\contentsline {subsection}{\numberline {18.3}Sterlings factorial approximation}{224}{subsection.0.18.3}%
\contentsline {subsection}{\numberline {18.4}square roots}{224}{subsection.0.18.4}%
\contentsline {subsubsection}{\numberline {18.4.1}Naive $O(\sqrt {n})$}{224}{subsubsection.0.18.4.1}%
\contentsline {subsubsection}{\numberline {18.4.2}$O(\lg (n))$ binary search approach}{225}{subsubsection.0.18.4.2}%
\contentsline {subsection}{\numberline {18.5}Fast exponentiation ($O(\lg (n))$)}{226}{subsection.0.18.5}%
\contentsline {subsubsection}{\numberline {18.5.1}Recursive}{226}{subsubsection.0.18.5.1}%
\contentsline {subsection}{\numberline {18.6}Bitwise power of two}{228}{subsection.0.18.6}%
