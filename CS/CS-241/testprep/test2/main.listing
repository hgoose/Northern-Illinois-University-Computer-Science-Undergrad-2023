         class c {
             size_t sz = 0;
             int* a = nullptr;
             public:
             c() = default;
             ~c() {
                 delete[] a;
             }

             c(int arr[], size_t sz) {
                 this->sz = sz;
                 int* tmp = new int[this->sz];
                 for (size_t i=0; i<sz; ++i) {
                     tmp[i] = arr[i];
                 }
                 this->a = tmp;
             }

             c(const c& obj) {
                 this->sz = obj.sz;
                 int* tmp = new int[obj.sz];

                 for (size_t i = 0; i<obj.sz; ++i) {
                     tmp[i] = obj.a[i];
                 }
                 this->a = tmp;
             }

             c& operator=(const c& obj) {
                 if (this != &obj) {
                     delete[] this->a; // Free old memory

                     this->sz = obj.sz;
                     int* tmp = new int[obj.sz];

                     for (size_t i = 0; i<obj.sz; ++i) {
                         tmp[i] = obj.a[i];
                     }
                     this->a = tmp;
                 }
                 return *this;
             }
         };
