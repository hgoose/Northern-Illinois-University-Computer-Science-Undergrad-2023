////////////////////////////////////////////////////////////////////////////////
// test-insdel - test insertion and deletion (root extraction) for your heap
//   Without command line parameters, has default input to check with.
// If command line parameters are given, they'll be used as integers to insert
// into a minheap, then a maxheap.
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ascending values in minheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 0)| 0 
     2 (insert 1)| 0 1 
     3 (insert 2)| 0 1 2 
     4 (insert 3)| 0 1 2 3 
     5 (insert 4)| 0 1 2 3 4 
     6 (insert 5)| 0 1 2 3 4 5 
     7 (insert 6)| 0 1 2 3 4 5 6 
     8 (insert 7)| 0 1 2 3 4 5 6 7 
     9 (insert 8)| 0 1 2 3 4 5 6 7 8 
    10 (insert 9)| 0 1 2 3 4 5 6 7 8 9 
  preorder:   0 1 3 7 8 4 9 2 5 6 
  inorder:    7 3 8 1 9 4 0 5 2 6 
  postorder:  7 8 3 9 4 1 5 6 2 0 
  levelorder: 0 1 2 3 4 5 6 7 8 9 
  minheap? yes ; maxheap? no
  extracting root until empty: 0 1 2 3 4 5 6 7 8 9 

////////////////////////////////////////////////////////////////////////////////
// ascending values in maxheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 0)| 0 
     2 (insert 1)| 1 0 
     3 (insert 2)| 2 0 1 
     4 (insert 3)| 3 2 1 0 
     5 (insert 4)| 4 3 1 0 2 
     6 (insert 5)| 5 3 4 0 2 1 
     7 (insert 6)| 6 3 5 0 2 1 4 
     8 (insert 7)| 7 6 5 3 2 1 4 0 
     9 (insert 8)| 8 7 5 6 2 1 4 0 3 
    10 (insert 9)| 9 8 5 6 7 1 4 0 3 2 
  preorder:   9 8 6 0 3 7 2 5 1 4 
  inorder:    0 6 3 8 2 7 9 1 5 4 
  postorder:  0 3 6 2 7 8 1 4 5 9 
  levelorder: 9 8 5 6 7 1 4 0 3 2 
  minheap? no ; maxheap? yes
  extracting root until empty: 9 8 7 6 5 4 3 2 1 0 

////////////////////////////////////////////////////////////////////////////////
// descending values in minheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 9)| 9 
     2 (insert 8)| 8 9 
     3 (insert 7)| 7 9 8 
     4 (insert 6)| 6 7 8 9 
     5 (insert 5)| 5 6 8 9 7 
     6 (insert 4)| 4 6 5 9 7 8 
     7 (insert 3)| 3 6 4 9 7 8 5 
     8 (insert 2)| 2 3 4 6 7 8 5 9 
     9 (insert 1)| 1 2 4 3 7 8 5 9 6 
  preorder:   1 2 3 9 6 7 4 8 5 
  inorder:    9 3 6 2 7 1 8 4 5 
  postorder:  9 6 3 7 2 8 5 4 1 
  levelorder: 1 2 4 3 7 8 5 9 6 
  minheap? yes ; maxheap? no
  extracting root until empty: 1 2 3 4 5 6 7 8 9 

////////////////////////////////////////////////////////////////////////////////
// descending values in maxheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 9)| 9 
     2 (insert 8)| 9 8 
     3 (insert 7)| 9 8 7 
     4 (insert 6)| 9 8 7 6 
     5 (insert 5)| 9 8 7 6 5 
     6 (insert 4)| 9 8 7 6 5 4 
     7 (insert 3)| 9 8 7 6 5 4 3 
     8 (insert 2)| 9 8 7 6 5 4 3 2 
     9 (insert 1)| 9 8 7 6 5 4 3 2 1 
  preorder:   9 8 6 2 1 5 7 4 3 
  inorder:    2 6 1 8 5 9 4 7 3 
  postorder:  2 1 6 5 8 4 3 7 9 
  levelorder: 9 8 7 6 5 4 3 2 1 
  minheap? no ; maxheap? yes
  extracting root until empty: 9 8 7 6 5 4 3 2 1 

////////////////////////////////////////////////////////////////////////////////
// {8,6,7,5,3,0,9} in minheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 8)| 8 
     2 (insert 6)| 6 8 
     3 (insert 7)| 6 8 7 
     4 (insert 5)| 5 6 7 8 
     5 (insert 3)| 3 5 7 8 6 
     6 (insert 0)| 0 5 3 8 6 7 
     7 (insert 9)| 0 5 3 8 6 7 9 
  preorder:   0 5 8 6 3 7 9 
  inorder:    8 5 6 0 7 3 9 
  postorder:  8 6 5 7 9 3 0 
  levelorder: 0 5 3 8 6 7 9 
  minheap? yes ; maxheap? no
  extracting root until empty: 0 3 5 6 7 8 9 

////////////////////////////////////////////////////////////////////////////////
// {8,6,7,5,3,0,9} in maxheap
///////////////////////////////////////////////////////////////////           
  inserting values into heap: 
     1 (insert 8)| 8 
     2 (insert 6)| 8 6 
     3 (insert 7)| 8 6 7 
     4 (insert 5)| 8 6 7 5 
     5 (insert 3)| 8 6 7 5 3 
     6 (insert 0)| 8 6 7 5 3 0 
     7 (insert 9)| 9 6 8 5 3 0 7 
  preorder:   9 6 5 3 8 0 7 
  inorder:    5 6 3 9 0 8 7 
  postorder:  5 3 6 0 7 8 9 
  levelorder: 9 6 8 5 3 0 7 
  minheap? no ; maxheap? yes
  extracting root until empty: 9 8 7 6 5 3 0 

