////////////////////////////////////////////////////////////////////////////////
// test-basic 
//   First, tests the basic functions you'll need for the rest of the program. 
//    - heap_left, heap_right, heap_parent 
//   Then, proceeds to test your heap-based tree traversal algorithms: 
//    - heap_preorder, heap_inorder, heap_postorder, heap_levelorder 
//   ... as well as checking is_heap for both minheap and maxheap. 
////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////
  // Complete tree with nodes numbered from zero in level order
  /////////////////////////////////////////////////////////////////           

              .--------( 0)---------.    
              |                      |   
         .--( 1)--.              .--( 2)---.  
        |          |            |          |  
      ( 3)        ( 4)        ( 5)        ( 6)  
      /  \       /    \       /   \       /  \  
   ( 7)  ( 8)  ( 9)  (10)  (11)  (12)  (13)  (14) 
  
  //////////////////////////////////////////////////////////////////////////////
  // calc columns come from your functions, make sure they match the exp
  /////////////////////////////////////////////////////////////////           
   node l_calc  l_exp  r_calc  r_exp p_calc  p_exp
  ----- ------ ------  ------ ------ ------ ------
      0      1      1      2      2      0      0
      1      3      3      4      4      0      0
      2      5      5      6      6      0      0
      3      7      7      8      8      1      1
      4      9      9     10     10      1      1
      5     11     11     12     12      2      2
      6     13     13     14     14      2      2
      7     15     15     16     16      3      3
      8     17     17     18     18      3      3
      9     19     19     20     20      4      4

  //////////////////////////////////////////////////////////////////////////////
  // Make sure your heap traversals match the expected output.
  /////////////////////////////////////////////////////////////////           
  preorder:     0   1   3   7   8   4   9  10   2   5  11  12   6  13  14 
  expected:     0   1   3   7   8   4   9  10   2   5  11  12   6  13  14

  inorder:      7   3   8   1   9   4  10   0  11   5  12   2  13   6  14 
  expected:     7   3   8   1   9   4  10   0  11   5  12   2  13   6  14

  postorder:    7   8   3   9  10   4   1  11  12   5  13  14   6   2   0 
  expected:     7   8   3   9  10   4   1  11  12   5  13  14   6   2   0

  levelorder:   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14 
  expected:     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14

  minheap? yes ; expected: yes
  maxheap? no ; expected: no
